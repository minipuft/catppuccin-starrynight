// Catppuccin StarryNight Theme - Main SCSS Entry Point
// Combines Catppuccin's beautiful UI with StarryNight's dynamic visual effects

@use "sass:meta";
// Core utilities and base styles
@forward "src/core/mixins";
@forward "src/core/_sn_typography";
@forward "src/core/_sn_gradient";
@forward "src/core/_kinetic-animations"; // Year 3000 Kinetic Verb Animations
@forward "src/core/_main";

// Layout modules
@forward "src/layout/_navbar";
@forward "src/layout/top_bar";
@forward "src/layout/right_sidebar";
@forward "src/layout/sn_header_actionBar";

// Component-specific styles
@forward "src/components/_now_playing";
@forward "src/components/sn_enhanced_cards";
@forward "src/components/sn_unified_cards";
@forward "src/components/sn_loading";

// StarryNight Feature Modules
@forward "src/features/sn_stars";
@forward "src/features/sn_glassmorphism";
@forward "src/features/sn_3d_morphing";
@forward "src/features/sn_microinteractions";
@forward "src/features/sn_context_zones";
// @forward "src/features/sn_atmospheric"; // DISABLED: Conventional effects - not Year 3000 aligned
@forward "src/features/themed_interactive_components"; // Renamed from _conscious_elegance_ui.scss (was _conscious_elegance_ui.scss)
@forward "src/features/advanced_visual_effects_layer"; // Renamed from _visual_reality_breach_effects.scss (was _visual_reality_breach_effects.scss)

// Search Interface Modules
@forward "src/search/sn_search_quantum";
@forward "src/search/sn_search_precision";

// Sidebar Visual System Modules
@forward "src/sidebar/sidebar-consciousness";
@forward "src/sidebar/sidebar_dimensional_nexus";

// Features
//@import "src/features/tooltips";
//@import "src/features/lyrics";

// Layout
//@import "src/layout/grid";
//@import "src/layout/flex";


:root {
  // Spicetify doesn't fully support light-sets yet, so we have to manually set the colors for the light theme
  .encore-dark-theme .encore-inverted-light-set {
    --background-highlight: var(--spice-overlay2) !important;
    --background-press: var(--spice-subtext) !important;
  }

  // Inputs / Icons
  .x-filterBox-searchIcon {
    color: var(--spice-subtext);
  }

  .x-filterBox-filterInput {
    background-color: var(--spice-surface0);
    color: var(--spice-subtext);
  }

  .main-dropDown-dropDown {
    color: var(--spice-text);
    background-color: var(--spice-surface0);

    &:disabled {
      color: var(--spice-button-disabled);
    }
  }

  .x-toggle-indicatorWrapper {
    background-color: var(--spice-surface0);

    .x-toggle-indicator {
      background-color: var(--spice-text);
    }
  }

  input:checked ~ .x-toggle-indicatorWrapper,
  input:hover:not([disabled], :active) ~ .x-toggle-indicatorWrapper {
    background-color: var(--spice-surface1);
  }

  input:checked:hover:not([disabled], :active) ~ .x-toggle-indicatorWrapper {
    background-color: var(--spice-overlay0);
  }

  select option:checked {
    color: var(--spice-text);
    font-weight: bold;
  }

  .TypeElement-mesto-type {
    color: var(--spice-subtext) !important;
  }

  .main-trackList-playingIcon {
    background-size: cover;
    padding-left: 100%;
    background-image: var(--spice-equalizer);
  }

  .view-homeShortcutsGrid-equaliser {
    background-image: var(--spice-equalizer);
    background-size: cover;
    padding-left: 35%;
  }

  // Scrollbars
  .os-scrollbar-track,
  ::-webkit-scrollbar {
    width: 0.5em;
  }

  .os-scrollbar-handle,
  ::-webkit-scrollbar-thumb {
    background-color: var(--spice-text) !important;
    border-radius: 6px;
  }

  // Modals
  .GenericModal {
    .main-duplicateTrackModal-container {
      background-color: var(--spice-card);
      color: var(--spice-subtext);

      button {
        &:first-child {
          color: var(--spice-button-active);

          &:hover {
            color: var(--spice-notification-error);
          }
        }

        &:last-child > div {
          background-color: var(--spice-button);
        }
      }
    }
  }

  // Context Menus
  .main-contextMenu-menuItemButton:hover,
  .main-contextMenu-menuItemButton:not([aria-checked="true"]):focus {
    color: var(--spice-subtext);
  }
}
