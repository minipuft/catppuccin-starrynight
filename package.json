{
  "name": "catppuccin-starrynight-spicetify-theme",
  "version": "1.1.0",
  "description": "Spicetify theme with Catppuccin StarryNight dynamic effects.",
  "main": "theme.js",
  "scripts": {
    "test": "jest",
    "test:unit": "jest tests/unit",
    "test:integration": "jest tests/integration",
    "test:unit:audio": "jest tests/unit/audio",
    "test:unit:core": "jest tests/unit/core",
    "test:unit:visual": "jest tests/unit/visual",
    "test:unit:utils": "jest tests/unit/utils",
    "build": "npm run build:css:dev && npm run build:js:dev",
    "build:dev": "npm run build:css:dev && npm run build:js:dev",
    "build:prod": "npm run build:css:prod && npm run build:js:prod",
    "build:prod:optimized": "npm run build:css:advanced && npm run build:js:prod",
    "build:prod:purgecss": "npm run build:css:purgecss && npm run build:js:prod",
    "build:js:dev": "npm run typecheck && esbuild src-js/theme.entry.ts --bundle --outfile=theme.js --format=iife --target=es2020 --external:react --external:react-dom --loader:.fs=text --keep-names --sourcemap",
    "build:js:prod": "npm run typecheck && esbuild src-js/theme.entry.ts --bundle --outfile=theme.js --format=iife --target=es2020 --external:react --external:react-dom --loader:.fs=text --minify",
    "build:css:dev": "sass app.scss user.css --style=expanded --quiet",
    "build:css:prod": "NODE_ENV=production sass app.scss user.css --style=compressed --quiet && postcss user.css --replace",
    "build:fast": "npm run build:css:prod && esbuild src-js/theme.entry.ts --bundle --outfile=theme.js --format=iife --target=es2020 --external:react --external:react-dom --loader:.fs=text --minify",
    "build:ci": "npm run build",
    "typecheck": "tsc --noEmit",
    "typecheck:watch": "tsc --noEmit --watch",
    "lint:js": "eslint \"src-js/**/*.{ts,tsx}\" --max-warnings 0",
    "lint:js:fix": "eslint \"src-js/**/*.{ts,tsx}\" --fix",
    "install": "if [ \"$CI\" = \"true\" ]; then npm run build; else npm run build && ./install-hybrid.sh; fi",
    "install:force": "npm run build && ./install-hybrid.sh mocha true",
    "sass:watch": "sass --watch app.scss:user.css",
    "lint:css": "stylelint \"src/**/*.scss\"",
    "list-selectors": "node scripts/listSelectors.js",
    "scan-css": "ts-node scripts/scanCssTokens.ts",
    "diff-css": "ts-node scripts/diffTokens.ts",
    "replace-css": "ts-node scripts/replaceCssTokens.ts --mapping build/css-audit/replace-map.json",
    "generate-map": "ts-node scripts/generateReplaceMap.ts",
    "fill-dispositions": "ts-node scripts/fillDispositions.ts --mode merge",
    "prune-css": "ts-node scripts/pruneDuplicateDecls.ts",
    "measure-css": "node scripts/measure-css-size.js measure",
    "measure-css:backup": "node scripts/measure-css-size.js backup",
    "measure-css:compare": "node scripts/measure-css-size.js compare",
    "analyze-css": "node scripts/analyze-css-usage.js",
    "build:css:purgecss": "sass app.scss user.css --style=compressed --quiet && postcss user.css --replace --config config/postcss/purgecss.config.js",
    "build:css:test": "npm run measure-css:backup && npm run build:css:prod && npm run measure-css:compare",
    "build:css:test:purgecss": "npm run measure-css:backup && npm run build:css:purgecss && npm run measure-css:compare",
    "build:css:rollback": "cp build/backups/user.css.backup user.css && echo 'CSS rolled back to backup'",
    "build:css:debug": "sass app.scss user.css --style=compressed --quiet && postcss user.css --replace --config config/postcss/debug.config.js",
    "build:css:advanced": "sass app.scss user.css --style=compressed --quiet && postcss user.css --replace --config config/postcss/advanced.config.js",
    "build:css:benchmark": "npm run measure-css:backup && time npm run build:css:advanced && npm run measure-css:compare",
    "validate": "npm run typecheck && npm run lint:css && npm run test",
    "validate:tokens": "./scripts/validate-tokens.sh",
    "validate:fix": "npm run lint:js:fix && npm run validate",
    "test:comprehensive": "node scripts/run-comprehensive-tests.js",
    "test:theme": "node scripts/validate-theme-structure.js && node scripts/validate-color-schemes.js",
    "ci:full": "npm run test:comprehensive",
    "prepare:release": "node scripts/prepare-release.js",
    "release:dry-run": "npm run prepare:release"
  },
  "devDependencies": {
    "@fullhuman/postcss-purgecss": "^7.0.2",
    "@types/jest": "^29.5.12",
    "@types/jsdom": "^21.1.1",
    "@types/node": "^20.12.12",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "autoprefixer": "^10.4.21",
    "cssnano": "^7.1.0",
    "esbuild": "^0.21.4",
    "eslint": "^9.32.0",
    "fake-indexeddb": "^6.0.1",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.2",
    "jsdom": "^22.1.0",
    "postcss": "^8.5.6",
    "postcss-cli": "^11.0.1",
    "postcss-discard-duplicates": "^7.0.2",
    "postcss-discard-empty": "^7.0.1",
    "postcss-merge-rules": "^7.0.6",
    "postcss-scss": "^4.0.6",
    "postcss-sort-media-queries": "^5.2.0",
    "sass": "^1.89.2",
    "stylelint": "^15.10.3",
    "stylelint-config-standard-scss": "^11.1.0",
    "stylelint-declaration-strict-value": "^1.10.11",
    "stylelint-order": "^6.0.4",
    "stylelint-scss": "^5.3.2",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  },
  "keywords": [
    "spicetify",
    "theme",
    "catppuccin",
    "starrynight"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "idb": "^8.0.3"
  }
}
