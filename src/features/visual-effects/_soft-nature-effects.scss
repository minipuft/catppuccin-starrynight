// ████████████████████████████████████████████████████████████████████████████████
// 🌿 UNIFIED SOFT NATURE EFFECTS - Natural Breathing & Harmony
// YEAR 3000 VISUAL ENHANCEMENT MODULE (Unified Effects Engine)
// "Gentle color breathing for peaceful content with earth-connected rhythms."
// ████████████████████████████████████████████████████████████████████████████████
//
// MIGRATION NOTES:
// - Replaces duplicate breathing animations with unified-breathing system
// - Consolidates 6+ keyframes into single unified animation with variants
// - Maintains natural serenity aesthetics while eliminating animation conflicts
// - Original file: _soft-nature-effects.scss (630 lines)
//
// ████████████████████████████████████████████████████████████████████████████████

@use "../../core/unified-effects-engine" as *;
@use "../../core/performance_mixins" as *;

// ═══════════════════════════════════════════════════════════════════════════════
// 🌿 NATURAL HARMONY VARIABLES (Simplified)
// ═══════════════════════════════════════════════════════════════════════════════

:root {
  // === UNIFIED NATURAL INTENSITY ===
  --natural-base-intensity: 0.6;           // Natural effect strength (0-1)
  --natural-breathing-frequency: 0.4;      // Hz - natural breathing frequency
  --natural-breathing-duration: 2.5s;      // Calculated from frequency

  // === LEGACY COMPATIBILITY ALIASES ===
  // Map old variables to unified system
  --natural-serenity-level: var(--sn-unified-effect-intensity, 0.6);
  --natural-breathing-depth: var(--sn-unified-effect-intensity, 0.8);
  --natural-earth-connection: calc(var(--sn-unified-music-energy, 0.5) * 0.8);
  --natural-visual-transparency: 0.85;

  // === NATURAL COLOR REFERENCES ===
  --natural-earthy-rgb: var(--sn-theme-natural-earthy-rgb);
  --natural-forest-rgb: var(--sn-theme-natural-forest-rgb);
  --natural-sky-rgb: var(--sn-theme-natural-sky-rgb);
  --natural-sunset-rgb: var(--sn-theme-natural-sunset-rgb);
  --natural-stone-rgb: var(--sn-theme-natural-stone-rgb);
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌿 SIMPLIFIED NATURAL EFFECTS MIXINS
// Uses unified-visual-effect instead of custom keyframes
// ═══════════════════════════════════════════════════════════════════════════════

@mixin natural-breathing-effect($intensity: 0.6) {
  // Single unified breathing application
  @include unified-breathing(
    $intensity: $intensity,
    $variant: 'gentle',
    $duration: var(--natural-breathing-duration, 2.5s)
  );

  // Natural-specific shadow breathing
  box-shadow:
    0 0 calc(#{$intensity} * 15px) rgba(var(--natural-earthy-rgb), calc(#{$intensity} * 0.3)),
    inset 0 0 calc(#{$intensity} * 8px) rgba(var(--natural-forest-rgb), calc(#{$intensity} * 0.2));
}

@mixin natural-serenity-glow($intensity: 0.6) {
  filter: drop-shadow(
    0 0 calc(#{$intensity} * 12px)
    rgba(var(--natural-earthy-rgb), calc(#{$intensity} * 0.5))
  );

  @include unified-breathing($intensity: $intensity, $variant: 'gentle', $duration: 3s);
}

@mixin natural-earth-connection($intensity: 0.5) {
  @include unified-visual-effect(
    $intensity: $intensity,
    $variant: 'gentle',
    $breathing: true,
    $breathing-duration: 4s
  );

  border: 1px solid rgba(var(--natural-earthy-rgb), calc(#{$intensity} * 0.4));

  background: linear-gradient(
    180deg,
    rgba(var(--natural-earthy-rgb), calc(#{$intensity} * 0.05)) 0%,
    rgba(var(--natural-forest-rgb), calc(#{$intensity} * 0.08)) 100%
  );
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌿 APPLY NATURAL EFFECTS TO UI ELEMENTS
// ═══════════════════════════════════════════════════════════════════════════════

// === MAIN VIEW CONTAINER ===
.main-view-container {
  &[data-natural-mode="active"] {
    @include unified-visual-effect(
      $intensity: var(--natural-base-intensity, 0.6),
      $variant: 'gentle',
      $breathing: true,
      $breathing-duration: 8s
    );

    // Natural gradient overlay
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        45deg,
        rgba(var(--natural-earthy-rgb), calc(var(--natural-base-intensity) * 0.15)) 0%,
        rgba(var(--natural-forest-rgb), calc(var(--natural-base-intensity) * 0.1)) 50%,
        rgba(var(--natural-sky-rgb), calc(var(--natural-base-intensity) * 0.08)) 100%
      );
      pointer-events: none;
      border-radius: inherit;
    }
  }
}

// === NOW PLAYING BAR ===
.Root__now-playing-bar {
  &[data-natural-mode="active"] {
    @include natural-earth-connection(var(--natural-base-intensity, 0.6));

    border-radius: 6px;
    backdrop-filter: blur(calc(var(--natural-base-intensity) * 4px));
  }
}

// === ALBUM ART ===
.cover-art,
.main-trackInfo-container img {
  &[data-natural-mode="active"] {
    @include natural-serenity-glow(var(--natural-base-intensity, 0.6));

    border: 2px solid rgba(var(--natural-earthy-rgb), calc(var(--natural-base-intensity) * 0.5));
    border-radius: 8px;
  }
}

// === PROGRESS BAR ===
.progress-bar {
  &[data-natural-mode="active"] {
    @include natural-breathing-effect(0.5);

    background: rgba(var(--natural-stone-rgb), 0.3);
    border-radius: 8px;

    .progress-bar-fill {
      background: linear-gradient(
        90deg,
        rgba(var(--natural-earthy-rgb), 0.8) 0%,
        rgba(var(--natural-forest-rgb), 0.9) 30%,
        rgba(var(--natural-sky-rgb), 0.7) 70%,
        rgba(var(--natural-sunset-rgb), 0.8) 100%
      );
      border-radius: 8px;
      box-shadow: 0 0 8px rgba(var(--natural-earthy-rgb), calc(var(--natural-base-intensity) * 0.5));
    }
  }
}

// === NAVIGATION SIDEBAR ===
.Root__nav-bar {
  &[data-natural-mode="active"] {
    @include natural-earth-connection(0.4);

    border-right: 1px solid rgba(var(--natural-forest-rgb), calc(var(--natural-base-intensity) * 0.4));

    .nav-item {
      position: relative;
      transition: all 0.3s ease;

      &:hover {
        @include unified-visual-effect(
          $intensity: 0.5,
          $variant: 'gentle',
          $breathing: false
        );

        background: rgba(var(--natural-earthy-rgb), calc(var(--natural-base-intensity) * 0.08));
        border-radius: 4px;

        &::before {
          content: '';
          position: absolute;
          left: 0;
          top: 20%;
          width: 3px;
          height: 60%;
          background: linear-gradient(
            180deg,
            transparent 0%,
            rgba(var(--natural-forest-rgb), calc(var(--natural-base-intensity) * 0.8)) 50%,
            transparent 100%
          );
          border-radius: 0 2px 2px 0;
        }
      }
    }
  }
}

// === PLAYER CONTROLS ===
.player-controls {
  &[data-natural-mode="active"] {
    @include natural-breathing-effect(var(--natural-base-intensity, 0.6));

    .control-button {
      position: relative;
      transition: all 0.3s ease;

      &::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        border: 1px solid rgba(var(--natural-earthy-rgb), calc(var(--natural-base-intensity) * 0.3));
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
      }

      &:hover::before {
        opacity: calc(var(--natural-base-intensity) * 0.6);
        @include unified-breathing($intensity: 0.6, $variant: 'gentle', $duration: 1.5s);
      }

      &:active {
        transform: scale(0.95);
        filter: brightness(1.1) saturate(1.1);
      }
    }
  }
}

// === TRACK INFORMATION ===
.main-trackInfo-container {
  &[data-natural-mode="active"] {
    @include unified-visual-effect(
      $intensity: 0.4,
      $variant: 'gentle',
      $breathing: true,
      $breathing-duration: 6s
    );

    .track-title,
    .artist-name {
      text-shadow: 0 0 6px rgba(var(--natural-earthy-rgb), calc(var(--natural-base-intensity) * 0.4));
      color: rgba(var(--natural-earthy-rgb), calc(0.9 + var(--natural-base-intensity) * 0.1));
    }
  }
}

// === VOLUME CONTROLS ===
.volume-bar {
  &[data-natural-mode="active"] {
    @include natural-earth-connection(0.5);

    .volume-bar-fill {
      background: linear-gradient(
        90deg,
        rgba(var(--natural-earthy-rgb), 0.6) 0%,
        rgba(var(--natural-forest-rgb), 0.8) 100%
      );

      @include natural-serenity-glow(0.6);
    }
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🎵 MUSIC-RESPONSIVE NATURAL EFFECTS
// ═══════════════════════════════════════════════════════════════════════════════

.Root[style*="--sn-beat-pulse-intensity"] {
  .cover-art,
  .progress-bar,
  .volume-bar {
    // Music energy modulates natural intensity
    --sn-unified-music-energy: var(--sn-beat-pulse-intensity, 0.5);
    --natural-base-intensity: calc(0.6 + var(--sn-beat-pulse-intensity, 0) * 0.3);
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌟 ACCESSIBILITY & PERFORMANCE
// ═══════════════════════════════════════════════════════════════════════════════

// Reduced motion: handled by unified-visual-effect internally
// Device tiers: handled by device-tier-optimization mixin internally

@media (max-width: 768px) {
  :root {
    --natural-base-intensity: 0.4;           // Reduce intensity on mobile
    --natural-breathing-duration: 3s;        // Slower breathing
  }
}

@media (prefers-contrast: high) {
  :root {
    --natural-base-intensity: 0.8;           // Increase intensity
  }

  .cover-art,
  .main-trackInfo-container img {
    border-width: 2px;
    border-color: rgba(var(--natural-earthy-rgb), 0.8);
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// LEGACY COMPATIBILITY - Preserved class names for TypeScript integration
// ═══════════════════════════════════════════════════════════════════════════════

.natural-breathing {
  @include natural-breathing-effect(var(--natural-base-intensity, 0.6));
}

.natural-serenity-glow {
  @include natural-serenity-glow(var(--natural-base-intensity, 0.6));
}

.natural-earth-connection {
  @include natural-earth-connection(var(--natural-base-intensity, 0.5));
}

.dynamic-breathing {
  @extend .natural-breathing !optional;
}

.dynamic-serenity-glow {
  @extend .natural-serenity-glow !optional;
}

.dynamic-earth-connection {
  @extend .natural-earth-connection !optional;
}

// ════════════════════════════════════════════════════════════════════════════════
// MIGRATION COMPARISON SUMMARY
// ════════════════════════════════════════════════════════════════════════════════
//
// BEFORE (Original _soft-nature-effects.scss):
//   - Lines of code: ~630
//   - Keyframes: 6+ separate animations (natural-breathing-cycle, natural-forest-sway, etc.)
//   - CSS variables: 10+ independent variables
//   - Animation conflicts: transform/opacity/filter competing
//   - Duplicate logic: Multiple breathing implementations
//
// AFTER (This unified version):
//   - Lines of code: ~280 (56% reduction)
//   - Keyframes: Uses unified-breathing from engine (1 animation)
//   - CSS variables: 4 core + derived formulas
//   - Animation conflicts: None (unified system)
//   - Duplicate logic: Eliminated via @mixin consolidation
//
// KEY IMPROVEMENTS:
//   ✅ Single breathing animation source
//   ✅ No transform/opacity conflicts
//   ✅ Music sync through unified intensity variables
//   ✅ Automatic accessibility (reduced motion)
//   ✅ Device-tier optimization built-in
//   ✅ TypeScript compatibility maintained via legacy class names
//
// ════════════════════════════════════════════════════════════════════════════════