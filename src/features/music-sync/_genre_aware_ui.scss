// ████████████████████████████████████████████████████████████████████████████████
// GENRE-AWARE UI INTEGRATION - Dynamic Genre-Responsive Interface Components
// ████████████████████████████████████████████████████████████████████████████████
// Integrates genre-specific color presets with existing Spicetify UI components
// for a cohesive musical consciousness experience that adapts to detected genres.

// Note: OKLAB animation system archived in Phase 10 Week 4 (orphaned file)
// Using existing CSS variables for OKLAB functionality instead

// === GENRE-AWARE COMPONENT INTEGRATION ===

// Placeholder mixin for genre background (to be implemented)
// Placeholder mixins for genre features (to be implemented)
@mixin genre-background($genre, $intensity, $opacity) {
  // TODO: Implement genre-specific background patterns
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--spice-accent);
    opacity: #{$opacity};
    pointer-events: none;
    z-index: -1;
  }
}

@mixin genre-color-preset($genre, $intensity) {
  // TODO: Implement genre-specific color presets
  color: var(--spice-text);
}

@mixin genre-visualization($genre, $intensity) {
  // TODO: Implement genre-specific visualizations
  opacity: 1;
}

@mixin genre-adaptive-spacing($genre, $base-spacing) {
  // TODO: Implement genre-specific spacing
  margin: #{$base-spacing};
}

@mixin genre-effect($genre, $intensity) {
  // TODO: Implement genre-specific effects
  filter: none;
}

@mixin genre-glow($genre, $intensity, $radius) {
  // TODO: Implement genre-specific glow effects
  box-shadow: none;
}

// Main application containers with genre awareness
.Root__main-view {
  // Apply current genre background when genre is detected
  &[data-genre-active] {
    @include genre-background(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.8), 0.12);

    // Genre transition animation (standard CSS transition)
    transition: all var(--genre-transition-duration) var(--genre-transition-easing);
    
    // Add OKLAB gradient flow for enhanced genre transitions
    &.genre-oklab-enhanced {
      // OKLAB gradient flow (inline CSS)
      background: linear-gradient(135deg, 
        rgba(var(--sn-oklab-primary-rgb), 0.3) 0%,
        rgba(var(--sn-oklab-accent-rgb), 0.2) 100%);
    }
  }

  // Genre-specific main view enhancements
  &[data-genre-active="electronic"] {
    // Electronic-specific main view styling
    filter:
      saturate(calc(var(--sn-genre-electronic-oklab-chroma-boost) * 0.8))
      brightness(calc(var(--sn-genre-electronic-oklab-lightness-boost) * 0.95));
  }

  &[data-genre-active="classical"] {
    // Classical-specific main view styling
    filter:
      saturate(calc(var(--sn-genre-classical-oklab-chroma-boost) * 0.9))
      brightness(calc(var(--sn-genre-classical-oklab-lightness-boost) * 0.98));
  }

  &[data-genre-active="rock"] {
    // Rock-specific main view styling
    filter:
      saturate(calc(var(--sn-genre-rock-oklab-chroma-boost) * 0.85))
      brightness(calc(var(--sn-genre-rock-oklab-lightness-boost) * 0.96))
      contrast(calc(1.0 + (var(--sn-genre-rock-oklab-chroma-boost) - 1) * 0.2));
  }
}

// Player bar with genre awareness
.Root__now-playing-bar,
.player-controls {
  // Breathing removed from general controls - targeting specific elements instead
  
  // Apply genre-specific styling to player controls
  &[data-genre-active] {
    @include genre-color-preset(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.7));

    // Genre-aware glow for player controls
    &.player-controls--enhanced {
      @include genre-glow(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.7), 6px);
    }
  }

  // Player button genre awareness
  .control-button,
  .player-controls__buttons button {
    // Breathing removed from general buttons - targeting specific elements instead
    
    &[data-genre-active] {
      @include genre-color-preset(attr(data-genre-active value, 'default'), 0.6);

      &:hover {
        @include genre-glow(attr(data-genre-active value, 'default'), 0.8, 4px);
      }
    }
  }
}

// Sidebar with genre awareness
.Root__nav-bar {
  // Genre-aware sidebar styling
  &[data-genre-active] {
    // Subtle genre background for sidebar
    @include genre-background(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.5), 0.06);
  }

  // Navigation items with genre awareness
  .main-navBar-navBarItem {
    &[data-genre-active] {
      @include genre-color-preset(attr(data-genre-active value, 'default'), 0.5);

      &:hover {
        @include genre-color-preset(attr(data-genre-active value, 'default'), 0.8);
      }

      &[aria-selected="true"] {
        @include genre-color-preset(attr(data-genre-active value, 'default'), 1.0);
        @include genre-glow(attr(data-genre-active value, 'default'), 0.9, 3px);
      }
    }
  }
}

// Cards with genre awareness
.main-card,
.card,
.artist-card,
.playlist-card {
  // Apply genre styling to cards
  &[data-genre-active] {
    position: relative;
    
    // Add OKLAB animation classes for enhanced visual consciousness
    // OKLAB animation (inline CSS)
    animation: oklab-color-flow 4s ease-in-out infinite;

    // Genre-aware card background with OKLAB transitions
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      @include genre-background(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.6), 0.08);
      transition: background var(--genre-transition-duration) var(--genre-transition-easing);
      border-radius: inherit;
      pointer-events: none;
      z-index: -1;
    }

    // Genre-aware card text
    .main-cardHeader-text,
    .main-type-heading {
      @include genre-color-preset(attr(data-genre-active value, 'default'), 0.8);
    }

    // Genre-aware card hover
    &:hover {
      @include genre-glow(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.8), 8px);

      &::before {
        @include genre-background(attr(data-genre-active value, 'default'), var(--genre-active-intensity, 0.8), 0.12);
      }
    }
  }
}

// Track rows with genre awareness
.main-trackList-trackListRow,
.tracklist-row {
  &[data-genre-active] {
    @include genre-color-preset(attr(data-genre-active value, 'default'), 0.4);

    &:hover {
      @include genre-background(attr(data-genre-active value, 'default'), 0.6, 0.06);
      @include genre-color-preset(attr(data-genre-active value, 'default'), 0.7);
    }

    &[aria-selected="true"] {
      @include genre-background(attr(data-genre-active value, 'default'), 0.8, 0.1);
      @include genre-color-preset(attr(data-genre-active value, 'default'), 1.0);
    }
  }
}

// Buttons with genre awareness
button,
.Button,
.main-playButton-PlayButton {
  &[data-genre-active] {
    @include genre-color-preset(attr(data-genre-active value, 'default'), 0.7);

    &:hover {
      @include genre-color-preset(attr(data-genre-active value, 'default'), 1.0);
      @include genre-glow(attr(data-genre-active value, 'default'), 0.8, 5px);
    }

    &:active {
      @include genre-color-preset(attr(data-genre-active value, 'default'), 1.2);
    }
  }
}

// === DYNAMIC GENRE SWITCHING UTILITIES ===

// Genre switching animation class
.genre-switching {
  // Enhanced transition during genre changes
  * {
    transition:
      color calc(var(--genre-transition-duration) * 1.2) var(--genre-transition-easing),
      background calc(var(--genre-transition-duration) * 1.2) var(--genre-transition-easing),
      filter calc(var(--genre-transition-duration) * 1.2) var(--genre-transition-easing),
      box-shadow calc(var(--genre-transition-duration) * 1.2) var(--genre-transition-easing);
  }
}

// Genre detection indicator
.genre-detection-indicator {
  position: fixed;
  top: 20px;
  right: 20px;
  padding: 8px 12px;
  background: rgba(var(--genre-current-primary-rgb), 0.9);
  color: rgb(var(--sn-musical-harmony-contrast-rgb));
  border-radius: 6px;
  font-size: 12px;
  font-weight: 600;
  z-index: 1000;

  // Genre-specific indicator styling
  @include genre-glow(var(--genre-active-preset, 'default'), 1.0, 4px);

  // Fade in/out animation
  opacity: 0;
  transform: translateX(100%);
  transition:
    opacity 0.3s ease,
    transform 0.3s ease;

  &.visible {
    opacity: 1;
    transform: translateX(0);
  }

  // Auto-hide after genre detection
  &.auto-hide {
    animation: genre-indicator-auto-hide 3s ease-in-out;
  }
}

@keyframes genre-indicator-auto-hide {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  80% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(100%);
  }
}

// === GENRE-SPECIFIC UI COMPONENT STYLES ===

// Electronic genre UI enhancements
[data-genre-active="electronic"] {
  // Electronic-specific UI components
  .main-playButton-PlayButton {
    // Enhanced electronic play button with OKLAB animations
    @include genre-glow('electronic', 1.2, 10px);
    // OKLAB musical breathing (inline CSS)
    animation: musical-breathing var(--music-sync-breath-duration, 4s) ease-in-out infinite;
    animation: 
      genre-electronic-pulse calc(var(--sn-anim-musical-beat-duration, 500ms) * 2) ease-in-out infinite,
      oklab-musical-consciousness-breathing calc(var(--sn-anim-musical-beat-duration, 500ms) * 4) ease-in-out infinite;
  }

  .main-trackList-trackListRow {
    // Electronic track row enhancements
    &:hover {
      transform: translateX(2px);
      transition: transform 0.2s ease;
    }
  }

  .main-card {
    // Electronic card hover effects with OKLAB shimmer
    // OKLAB shimmer effect (inline CSS)
    background: linear-gradient(90deg, transparent 0%, rgba(var(--sn-accent-rgb), 0.1) 50%, transparent 100%);
    background-size: 200% 100%;
    animation: shimmer 2s linear infinite;
    
    &:hover {
      transform: scale(1.02) translateY(-2px);
      transition: transform 0.3s ease;
    }
  }
}

// Classical genre UI enhancements
[data-genre-active="classical"] {
  // Classical-specific UI components
  .main-playButton-PlayButton {
    // Elegant classical play button
    @include genre-glow('classical', 0.8, 6px);
    animation: genre-classical-elegance calc(var(--sn-anim-musical-phrase-duration, 8s)) ease-in-out infinite;
  }

  .main-trackList-trackListRow {
    // Classical track row elegance
    &:hover {
      backdrop-filter: blur(1px) saturate(1.1);
    }
  }
}

// Rock genre UI enhancements
[data-genre-active="rock"] {
  // Rock-specific UI components
  .main-playButton-PlayButton {
    // Intense rock play button
    @include genre-glow('rock', 1.4, 12px);
    animation: genre-rock-energy calc(var(--sn-anim-musical-beat-duration, 400ms) * 1.5) cubic-bezier(0.25, 0.1, 0.25, 1) infinite;
  }

  .main-trackList-trackListRow {
    // Rock track row intensity
    &:hover {
      transform: translateX(3px);
      transition: transform 0.15s ease;
    }
  }

  .main-card {
    // Rock card impact effects
    &:hover {
      transform: scale(1.03) translateY(-3px);
      transition: transform 0.2s ease;
    }
  }
}

// Jazz genre UI enhancements
[data-genre-active="jazz"] {
  // Jazz-specific UI components
  .main-playButton-PlayButton {
    // Sophisticated jazz play button
    @include genre-glow('jazz', 0.9, 8px);
    animation: genre-jazz-sophistication calc(var(--sn-anim-musical-measure-duration, 2s) * 2) ease-in-out infinite;
  }

  .main-trackList-trackListRow {
    // Jazz track row sophistication
    &:hover {
      filter: sepia(10%) saturate(1.1);
    }
  }
}

// Hip-hop genre UI enhancements
[data-genre-active="hiphop"] {
  // Hip-hop-specific UI components
  .main-playButton-PlayButton {
    // Dynamic hip-hop play button
    @include genre-glow('hiphop', 1.3, 10px);
    animation: genre-hiphop-rhythm calc(var(--sn-anim-musical-beat-duration, 300ms) * 2) cubic-bezier(0.68, -0.55, 0.265, 1.55) infinite;
  }

  .main-trackList-trackListRow {
    // Hip-hop track row dynamics
    &:hover {
      transform: translateX(4px) scale(1.01);
      transition: transform 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }
  }
}

// Ambient genre UI enhancements
[data-genre-active="ambient"] {
  // Ambient-specific UI components
  .main-playButton-PlayButton {
    // Ethereal ambient play button
    @include genre-glow('ambient', 0.6, 16px);
    animation: genre-ambient-flow calc(var(--sn-anim-musical-phrase-duration, 12s)) ease-in-out infinite;
  }

  .main-trackList-trackListRow {
    // Ambient track row ethereal effects
    &:hover {
      backdrop-filter: blur(2px) saturate(0.9);
    }
  }

  .main-card {
    // Ambient card floating effects
    &:hover {
      transform: translateY(-4px);
      transition: transform 0.5s ease;
    }
  }
}

// Folk genre UI enhancements
[data-genre-active="folk"] {
  // Folk-specific UI components
  .main-playButton-PlayButton {
    // Natural folk play button
    @include genre-glow('folk', 0.7, 5px);
    animation: genre-folk-organic calc(var(--sn-anim-musical-measure-duration, 3s) * 1.5) ease-in-out infinite;
  }

  .main-trackList-trackListRow {
    // Folk track row natural warmth
    &:hover {
      filter: sepia(5%) brightness(1.05);
    }
  }
}

// Pop genre UI enhancements
[data-genre-active="pop"] {
  // Pop-specific UI components
  .main-playButton-PlayButton {
    // Vibrant pop play button
    @include genre-glow('pop', 1.0, 8px);
    animation: genre-pop-vibrant calc(var(--sn-anim-musical-beat-duration, 500ms) * 3) ease-in-out infinite;
  }

  .main-trackList-trackListRow {
    // Pop track row vibrancy
    &:hover {
      filter: saturate(1.2) brightness(1.05);
    }
  }

  .main-card {
    // Pop card cheerful effects
    &:hover {
      transform: scale(1.02) translateY(-1px);
      transition: transform 0.25s ease;
    }
  }
}

// === RESPONSIVE GENRE AWARENESS ===

// Adjust genre effects for mobile devices
@media (max-width: 768px) {
  [data-genre-active] {
    // Reduce genre effects on mobile for performance
    .main-card,
    .main-trackList-trackListRow {
      &:hover {
        transform: none !important;
      }
    }

    // Simplify genre glows on mobile
    .main-playButton-PlayButton {
      box-shadow: none !important;
    }
  }
}

// Performance mode adjustments
.sn-performance-mode {
  [data-genre-active] {
    // Disable genre animations in performance mode
    animation: none !important;

    .main-playButton-PlayButton,
    .main-card,
    .main-trackList-trackListRow {
      animation: none !important;
      transform: none !important;
      filter: none !important;
    }
  }
}

// === ACCESSIBILITY SUPPORT ===

// Reduced motion support for genre effects
@media (prefers-reduced-motion: reduce) {
  [data-genre-active] {
    // Disable all genre animations
    animation: none !important;
    transition-duration: 0.1s !important;

    .main-playButton-PlayButton,
    .main-card,
    .main-trackList-trackListRow {
      animation: none !important;
      transition-duration: 0.1s !important;
    }
  }

  .genre-detection-indicator {
    animation: none !important;
    transition-duration: 0.1s !important;
  }
}

// High contrast support for genre effects
@media (prefers-contrast: high) {
  [data-genre-active] {
    // Enhanced contrast for genre elements
    filter: contrast(1.5) saturate(1.3) !important;

    .main-playButton-PlayButton {
      box-shadow:
        0 0 4px rgba(255, 255, 255, 0.8) !important,
        0 0 8px rgba(var(--genre-current-primary-rgb), 0.9) !important;
    }
  }
}