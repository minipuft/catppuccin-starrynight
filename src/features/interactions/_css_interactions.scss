// ████████████████████████████████████████████████████████████████████████████████
// 🎯 FLUX CSS INTERACTION EFFECTS - Pure CSS Interaction System
// YEAR 3000 VISUAL TRANSCENDENCE MODULE
// "Interactive feedback that dances with user intention, not against it."
// ████████████████████████████████████████████████████████████████████████████████

@use "../../core/_interaction_mixins" as *; // Access CSS interaction mixins

// Note: Core interaction mixins, variables, and keyframes consolidated to:
// - src/core/_interaction_mixins.scss
// This eliminates ~190 lines of duplication across interaction files

// ═══════════════════════════════════════════════════════════════════════════════
// 🎵 MUSICAL INTERACTION RESPONSIVENESS
// ═══════════════════════════════════════════════════════════════════════════════

// Enhanced interaction during musical activity
.Root[style*="--sn-beat-pulse-intensity"] {
  // Boost ripple effects during beat pulses
  :root {
    --ripple-opacity: calc(0.3 + var(--sn-beat-pulse-intensity, 0) * 0.2);
    --focus-glow-intensity: calc(0.4 + var(--sn-music-energy, 0) * 0.3);
    --hover-glow-intensity: calc(0.2 + var(--sn-beat-pulse-intensity, 0) * 0.2);
  }
  
  // Speed up interactions during high energy
  button,
  .main-playButton-PlayButton,
  .main-card-card,
  .main-trackList-trackListRow {
    --ripple-duration: calc(600ms / max(var(--sn-music-energy, 0.5), 0.5));
    --hover-transition-speed: calc(200ms / max(var(--sn-beat-pulse-intensity, 0.5), 0.5));
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🎛️ APPLICATION TO SPOTIFY UI ELEMENTS
// ═══════════════════════════════════════════════════════════════════════════════

// === MAIN INTERACTIVE BUTTONS ===
.main-playButton-PlayButton,
.main-skipBackButton-button,
.main-skipForwardButton-button,
.main-shuffleButton-button,
.main-repeatButton-button {
  @include css-interaction-ripple(strong);
  @include css-focus-flow(strong);
  @include css-hover-lift(normal);
  @include css-musical-interaction();
  
  // Special treatment for main play button
  &.main-playButton-PlayButton {
    @include css-hover-lift(strong);
    --ripple-color: rgba(var(--sn-gradient-primary-rgb), 0.4);
  }
}

// === CARDS AND CONTENT CONTAINERS ===
.main-card-card {
  @include css-interaction-ripple(subtle);
  @include css-focus-flow(normal);
  @include css-hover-lift(subtle);
  @include css-musical-interaction();
  
  // Enhanced effects for artist cards
  &[data-testid*="artist"] {
    @include css-hover-lift(normal);
  }
}

// === TRACK LIST ROWS ===
.main-trackList-trackListRow {
  @include css-interaction-ripple(subtle);
  @include css-focus-flow(subtle);
  @include css-hover-lift(subtle);
  
  // Currently playing track gets enhanced interaction
  &.main-trackList-selected,
  &:has(.main-trackList-playingIcon) {
    @include css-musical-interaction();
    @include css-hover-lift(normal);
    --ripple-color: rgba(var(--sn-gradient-primary-rgb), 0.3);
  }
}

// === NAVIGATION AND MENU ITEMS ===
.main-navBar-navBarLink,
.main-rootlist-rootlistItemLink,
.main-contextMenu-menuItemButton,
.spicetify-playlist-list li a {
  @include css-interaction-ripple(subtle);
  @include css-focus-flow(subtle);
  @include css-hover-lift(subtle);
  
  // Enhanced effects on active/selected states
  &[aria-selected="true"],
  &.main-rootlist-rootlistItemActive {
    @include css-musical-interaction();
  }
}

// === INPUT FIELDS AND SEARCH ===
input[type="text"],
input[type="search"],
.x-filterBox-filterInput,
.main-dropDown-dropDown {
  @include css-focus-flow(normal);
  @include css-hover-lift(subtle);
  
  transition: 
    border-color var(--focus-flow-duration) ease-out,
    box-shadow var(--focus-flow-duration) ease-out;
    
  &:focus {
    border-color: rgba(var(--sn-gradient-accent-rgb), 0.6);
  }
}

// === CONTEXT MENUS ===
.main-contextMenu-menu {
  .main-contextMenu-menuItemButton {
    @include css-interaction-ripple(normal);
    @include css-hover-lift(subtle);
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌟 ACCESSIBILITY & PERFORMANCE CONSCIOUSNESS
// ═══════════════════════════════════════════════════════════════════════════════

@media (prefers-reduced-motion: reduce) {
  :root {
    --ripple-duration: 200ms;
    --focus-flow-duration: 100ms;
    --hover-transition-speed: 100ms;
    --ripple-opacity: 0.1;
    --focus-glow-intensity: 0.2;
  }
  
  // Disable complex animations
  * {
    animation-duration: 200ms !important;
    animation-iteration-count: 1 !important;
  }
  
  // Keep only essential feedback
  .main-playButton-PlayButton,
  input:focus,
  button:focus {
    animation: none !important;
    box-shadow: 0 0 0 2px rgba(var(--sn-gradient-accent-rgb), 0.6) !important;
  }
}

@media (max-width: 768px) {
  :root {
    --hover-lift-distance: 1px;
    --ripple-max-scale: 2;
    --focus-glow-intensity: 0.3;
  }
  
  // Reduce effects for mobile performance
  .main-card-card,
  .main-trackList-trackListRow {
    --hover-transition-speed: 300ms;
  }
}

@media (prefers-contrast: high) {
  :root {
    --focus-glow-intensity: 0.8;
    --focus-ring-thickness: 3px;
    --ripple-opacity: 0.6;
  }
  
  // Enhanced visibility for high contrast
  button:focus,
  input:focus,
  a:focus {
    box-shadow: 
      0 0 0 var(--focus-ring-thickness) rgba(255, 255, 255, 0.8),
      0 0 0 calc(var(--focus-ring-thickness) + 2px) rgba(0, 0, 0, 0.8) !important;
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🚀 CSS INTERACTION SYSTEM COMPLETION
// "We replaced 1500 lines of canvas JavaScript with 200 lines of elegant CSS."
// ═══════════════════════════════════════════════════════════════════════════════