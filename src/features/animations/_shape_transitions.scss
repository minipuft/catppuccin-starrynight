// ████████████████████████████████████████████████████████████████████████████████
// 🌊 FLUX FLUID MORPHING ANIMATIONS - Dynamic Shape Effects
// YEAR 3000 VISUAL EFFECTS MODULE
// "Matter is not solid. Everything flows. We just make it visible."
// ████████████████████████████████████████████████████████████████████████████████
//
// === LEGACY COMPATIBILITY LAYER ===
// Maintains backward compatibility during Phase 7 modernization
// TypeScript integration preserved through CSS variable aliases

// ═══════════════════════════════════════════════════════════════════════════════
// 💧 LIQUID DYNAMICS VARIABLES
// ═══════════════════════════════════════════════════════════════════════════════

:root {
  // === BASE STATE BASELINE (Resting State) ===
  --base-state-rhythm: 15s;
  --base-state-amplitude: 4px;
  --base-state-motion-depth: 0.02;
  --base-state-surface-tension: 0.95;
  --base-state-flow-velocity: 20s;
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --meditation-rhythm: var(--base-state-rhythm);
  --meditation-amplitude: var(--base-state-amplitude);
  --meditation-breathing-depth: var(--base-state-motion-depth);
  --meditation-surface-tension: var(--base-state-surface-tension);
  --meditation-flow-velocity: var(--base-state-flow-velocity);
  
  // === FLUID SURFACE PROPERTIES ===
  --fluid-viscosity: 0.8; // More viscous for calmer movement
  --fluid-surface-tension: var(--base-state-surface-tension);
  --fluid-cohesion: 0.9; // Higher cohesion for dynamic feel
  --fluid-flow-velocity: var(--base-state-flow-velocity);
  --fluid-morphing-amplitude: var(--base-state-amplitude);
  --fluid-ripple-frequency: 8s; // Slower, more controlled
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --liquid-viscosity: var(--fluid-viscosity);
  --liquid-surface-tension: var(--fluid-surface-tension);
  --liquid-cohesion: var(--fluid-cohesion);
  --liquid-flow-velocity: var(--fluid-flow-velocity);
  --liquid-morphing-amplitude: var(--fluid-morphing-amplitude);
  --liquid-ripple-frequency: var(--fluid-ripple-frequency);
  
  // === LAYERED EFFECTS SHAPE MORPHING ===
  --layered-effects-form-complexity: 2; // Simplified for performance
  --layered-effects-growth-rate: 0.8; // Slower, more natural
  --layered-effects-light-depth: 0.05; // Light-based effects only
  --layered-effects-pulse-rhythm: var(--base-state-rhythm);
  --layered-effects-cellular-division: 25s; // Much slower cellular activity
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --holographic-form-complexity: var(--layered-effects-form-complexity);
  --holographic-growth-rate: var(--layered-effects-growth-rate);
  --holographic-light-depth: var(--layered-effects-light-depth);
  --holographic-pulse-rhythm: var(--layered-effects-pulse-rhythm);
  --holographic-cellular-division: var(--layered-effects-cellular-division);
  
  // === METALLIC FLOW DYNAMICS ===
  --metallic-droplet-size: 15px;
  --metallic-coalescence-speed: 2s;
  --metallic-surface-reflection: 0.9;
  --metallic-gravity-pull: 1px;
  --metallic-magnetic-attraction: 3px;
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --mercury-droplet-size: var(--metallic-droplet-size);
  --mercury-coalescence-speed: var(--metallic-coalescence-speed);
  --mercury-surface-reflection: var(--metallic-surface-reflection);
  --mercury-gravity-pull: var(--metallic-gravity-pull);
  --mercury-magnetic-attraction: var(--metallic-magnetic-attraction);
  
  // === MUSICAL ACTIVATION THRESHOLDS ===
  --activation-threshold: 0.3; // Beat intensity needed to start activation
  --peak-animation-threshold: 0.6; // Energy level for full peak animation
  --peak-experience-threshold: 0.8; // Maximum intensity state
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --awakening-threshold: var(--activation-threshold);
  --transcendence-threshold: var(--peak-animation-threshold);
  
  // === INTELLIGENT MUSIC RESPONSIVENESS ===
  // Only activate when above activation threshold
  --music-activation-gate: max(0, var(--sn-beat-pulse-intensity, 0) - var(--activation-threshold));
  --music-peak-animation-gate: max(0, var(--sn-music-energy, 0) - var(--peak-animation-threshold));
  
  // Gentle escalation curves instead of linear
  --music-fluid-resonance: calc(
    var(--layered-effects-light-depth) + 
    var(--music-activation-gate) * 0.08 + 
    var(--music-peak-animation-gate) * 0.12
  );
  --music-flow-acceleration: calc(
    1 - var(--music-activation-gate) * 0.4 - var(--music-peak-animation-gate) * 0.3
  );
  --music-morphing-amplitude: calc(
    var(--base-state-amplitude) + 
    var(--music-activation-gate) * 8px + 
    var(--music-peak-animation-gate) * 12px
  );
  --music-viscosity-change: calc(
    var(--fluid-viscosity) - var(--music-activation-gate) * 0.3
  );
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --music-awakening-gate: var(--music-activation-gate);
  --music-transcendence-gate: var(--music-peak-animation-gate);
  --music-liquid-resonance: var(--music-fluid-resonance);
  
  // === DYNAMIC EFFECTS ADAPTATION ===
  --dynamic-effects-flow-state: calc(var(--sn-rhythm-phase, 0) * 360deg);
  --dynamic-effects-cellular-mitosis: calc(var(--sn-dynamic-genre-hue-shift, 0deg) * 0.2);
  --dynamic-effects-membrane-permeability: calc(var(--sn-music-valence, 0.5) * 0.5 + 0.3);
  
  // === LEGACY COMPATIBILITY ALIASES ===
  --consciousness-flow-state: var(--dynamic-effects-flow-state);
  --consciousness-cellular-mitosis: var(--dynamic-effects-cellular-mitosis);
  --consciousness-membrane-permeability: var(--dynamic-effects-membrane-permeability);
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌊 FLUID MORPHING KEYFRAMES
// ═══════════════════════════════════════════════════════════════════════════════

@keyframes base-state-fluid-breathing {
  0%, 100% {
    border-radius: 48% 52% 53% 47% / 51% 49% 52% 48%;
    transform: rotate(0deg) scale(1) skewX(0deg);
  }
  25% {
    border-radius: 52% 48% 47% 53% / 49% 51% 48% 52%;
    transform: rotate(1deg) scale(1.005) skewX(0.5deg);
  }
  50% {
    border-radius: 47% 53% 52% 48% / 52% 48% 51% 49%;
    transform: rotate(0deg) scale(1.01) skewX(0deg);
  }
  75% {
    border-radius: 53% 47% 48% 52% / 48% 52% 49% 51%;
    transform: rotate(-1deg) scale(1.005) skewX(-0.5deg);
  }
}

// Musical activation - more dramatic but still dynamic
@keyframes musical-fluid-activation {
  0%, 100% {
    border-radius: 48% 52% 53% 47% / 51% 49% 52% 48%;
    transform: rotate(0deg) scale(1) skewX(0deg);
  }
  25% {
    border-radius: 60% 40% 45% 55% / 42% 58% 48% 52%;
    transform: rotate(-3deg) scale(1.02) skewX(-1deg);
  }
  50% {
    border-radius: 43% 57% 48% 52% / 55% 45% 53% 47%;
    transform: rotate(2deg) scale(1.04) skewX(0.5deg);
  }
  75% {
    border-radius: 53% 47% 48% 52% / 48% 52% 49% 51%;
    transform: rotate(-1deg) scale(1.005) skewX(-0.5deg);
  }
}

// === LEGACY COMPATIBILITY KEYFRAMES ===
// Maintains TypeScript integration during transition
@keyframes meditative-liquid-breathing {
  0%, 100% {
    border-radius: 48% 52% 53% 47% / 51% 49% 52% 48%;
    transform: rotate(0deg) scale(1) skewX(0deg);
  }
  25% {
    border-radius: 52% 48% 47% 53% / 49% 51% 48% 52%;
    transform: rotate(1deg) scale(1.005) skewX(0.5deg);
  }
  50% {
    border-radius: 47% 53% 52% 48% / 52% 48% 51% 49%;
    transform: rotate(0deg) scale(1.01) skewX(0deg);
  }
  75% {
    border-radius: 53% 47% 48% 52% / 48% 52% 49% 51%;
    transform: rotate(-1deg) scale(1.005) skewX(-0.5deg);
  }
}

@keyframes musical-liquid-awakening {
  0% {
    border-radius: 45% 55% 60% 40% / 55% 45% 65% 35%;
    transform: rotate(0deg) scale(1) skewX(0deg);
  }
  20% {
    border-radius: 55% 65% 35% 45% / 65% 35% 45% 75%;
    transform: rotate(15deg) scale(1.02) skewX(1deg);
  }
  40% {
    border-radius: 65% 35% 55% 65% / 40% 80% 30% 60%;
    transform: rotate(30deg) scale(0.98) skewX(-0.5deg);
  }
  60% {
    border-radius: 35% 65% 75% 25% / 80% 55% 40% 70%;
    transform: rotate(45deg) scale(1.03) skewX(1.5deg);
  }
  80% {
    border-radius: 65% 45% 25% 85% / 35% 75% 65% 45%;
    transform: rotate(60deg) scale(0.97) skewX(-1deg);
  }
  100% {
    border-radius: 45% 55% 60% 40% / 55% 45% 65% 35%;
    transform: rotate(75deg) scale(1) skewX(0deg);
  }
}

@keyframes dynamic-cellular-growth {
  0% {
    clip-path: polygon(
      30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%
    );
    filter: brightness(1) contrast(1);
  }
  25% {
    clip-path: polygon(
      25% 5%, 75% 2%, 95% 25%, 98% 75%, 75% 95%, 25% 98%, 5% 75%, 2% 25%
    );
    filter: brightness(1.1) contrast(1.05);
  }
  50% {
    clip-path: polygon(
      20% 10%, 80% 5%, 90% 20%, 95% 80%, 80% 90%, 20% 95%, 10% 80%, 5% 20%
    );
    filter: brightness(1.2) contrast(1.1);
  }
  75% {
    clip-path: polygon(
      25% 8%, 75% 3%, 92% 25%, 97% 75%, 75% 92%, 25% 97%, 8% 75%, 3% 25%
    );
    filter: brightness(1.1) contrast(1.05);
  }
  100% {
    clip-path: polygon(
      30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%
    );
    filter: brightness(1) contrast(1);
  }
}

// === LEGACY COMPATIBILITY KEYFRAME ===
@keyframes organic-cellular-growth {
  0% {
    clip-path: polygon(
      30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%
    );
    filter: brightness(1) contrast(1);
  }
  16.66% {
    clip-path: polygon(
      20% 5%, 80% 10%, 95% 25%, 90% 75%, 75% 95%, 25% 90%, 10% 80%, 5% 20%
    );
    filter: brightness(1.1) contrast(1.05);
  }
  33.33% {
    clip-path: polygon(
      10% 15%, 85% 5%, 90% 40%, 95% 80%, 80% 85%, 15% 95%, 5% 60%, 10% 15%
    );
    filter: brightness(0.95) contrast(1.1);
  }
  50% {
    clip-path: polygon(
      15% 10%, 75% 15%, 85% 35%, 80% 85%, 65% 90%, 35% 85%, 15% 65%, 20% 35%
    );
    filter: brightness(1.05) contrast(0.95);
  }
  66.66% {
    clip-path: polygon(
      25% 20%, 70% 25%, 80% 45%, 75% 75%, 55% 80%, 45% 75%, 25% 55%, 30% 45%
    );
    filter: brightness(1.15) contrast(1.1);
  }
  83.33% {
    clip-path: polygon(
      35% 25%, 65% 30%, 75% 50%, 70% 70%, 50% 75%, 50% 70%, 35% 50%, 40% 50%
    );
    filter: brightness(0.9) contrast(1.05);
  }
  100% {
    clip-path: polygon(
      30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%
    );
    filter: brightness(1) contrast(1);
  }
}

@keyframes metallic-droplet-coalescence {
  0% {
    transform: scale(1) translateX(0);
    border-radius: 50%;
    opacity: 1;
  }
  30% {
    transform: scale(1.2) translateX(5px);
    border-radius: 60% 40% 50% 50%;
    opacity: 0.8;
  }
  60% {
    transform: scale(0.8) translateX(-3px);
    border-radius: 40% 60% 45% 55%;
    opacity: 0.9;
  }
  100% {
    transform: scale(1) translateX(0);
    border-radius: 50%;
    opacity: 1;
  }
}

// === LEGACY COMPATIBILITY KEYFRAME ===
@keyframes mercury-droplet-coalescence {
  0% {
    transform: scale(1) translateX(0);
    border-radius: 50%;
    opacity: 1;
  }
  30% {
    transform: scale(1.2) translateX(5px);
    border-radius: 60% 40% 60% 40% / 70% 50% 50% 30%;
    opacity: 0.9;
  }
  60% {
    transform: scale(0.8) translateX(-3px);
    border-radius: 40% 60% 40% 60% / 30% 70% 70% 50%;
    opacity: 0.7;
  }
  100% {
    transform: scale(1) translateX(0);
    border-radius: 50%;
    opacity: 1;
  }
}

@keyframes layered-effects-dynamic-effects-light {
  0%, 100% {
    border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%;
    filter: brightness(1) saturate(1.2) hue-rotate(var(--dynamic-effects-flow-state));
  }
  25% {
    border-radius: 60% 40% 70% 30% / 40% 80% 20% 60%;
    filter: brightness(1.1) saturate(1.3) hue-rotate(calc(var(--dynamic-effects-flow-state) + 30deg));
  }
  50% {
    border-radius: 30% 70% 40% 60% / 80% 20% 60% 40%;
    filter: brightness(1.2) saturate(1.4) hue-rotate(calc(var(--dynamic-effects-flow-state) + 60deg));
    background-position: 100% 50%, 0% 50%, 50% 100%;
    border-radius: 45% 55% 65% 35% / 55% 45% 35% 65%;
  }
  75% {
    border-radius: 70% 30% 60% 40% / 20% 80% 40% 60%;
    filter: brightness(1.1) saturate(1.3) hue-rotate(calc(var(--dynamic-effects-flow-state) + 90deg));
  }
}

// === LEGACY COMPATIBILITY KEYFRAME ===
@keyframes holographic-consciousness-light {
  0%, 100% {
    border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%;
    filter: brightness(1) saturate(1.2) hue-rotate(var(--dynamic-effects-flow-state));
  }
  25% {
    border-radius: 60% 40% 70% 30% / 40% 80% 20% 60%;
    filter: brightness(1.1) saturate(1.4) hue-rotate(calc(var(--dynamic-effects-flow-state) + 15deg));
  }
  50% {
    border-radius: 70% 30% 40% 60% / 80% 20% 60% 40%;
    filter: brightness(0.95) saturate(1.1) hue-rotate(calc(var(--dynamic-effects-flow-state) + 30deg));
  }
  75% {
    border-radius: 40% 60% 30% 70% / 20% 60% 80% 40%;
    filter: brightness(1.05) saturate(1.3) hue-rotate(calc(var(--dynamic-effects-flow-state) + 45deg));
  }
}

@keyframes plasma-membrane-oscillation {
  0% {
    background-position: 0% 50%, 100% 50%, 50% 0%;
    border-radius: 45% 55% 65% 35% / 55% 45% 35% 65%;
  }
  25% {
    background-position: 25% 75%, 75% 25%, 50% 50%;
    border-radius: 55% 45% 35% 65% / 65% 35% 55% 45%;
  }
  50% {
    background-position: 50% 100%, 50% 0%, 100% 50%;
    border-radius: 65% 35% 55% 45% / 45% 65% 35% 55%;
  }
  75% {
    background-position: 75% 25%, 25% 75%, 0% 50%;
    border-radius: 35% 65% 45% 55% / 35% 55% 65% 45%;
  }
  100% {
    background-position: 100% 50%, 0% 50%, 50% 100%;
    border-radius: 45% 55% 65% 35% / 55% 45% 35% 65%;
  }
}

@keyframes fluid-ripple-propagation {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    opacity: 0;
    border-radius: 50%;
  }
  50% {
    transform: scale(2) rotate(180deg);
    opacity: 1;
    border-radius: 40% 60% 30% 70%;
  }
}

// === LEGACY COMPATIBILITY KEYFRAME ===
@keyframes liquid-ripple-propagation {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    opacity: 0;
    border-radius: 50%;
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🧬 FLUID MORPHING MIXINS
// ═══════════════════════════════════════════════════════════════════════════════

@mixin fluid-surface-morphing($complexity: normal) {
  position: relative;
  overflow: visible;
  
  @if $complexity == simple {
    --local-complexity: 1;
    --local-amplitude: var(--base-state-amplitude);
  } @else if $complexity == complex {
    --local-complexity: 3;
    --local-amplitude: calc(var(--base-state-amplitude) * 2);
  } @else {
    --local-complexity: 2;
    --local-amplitude: var(--music-morphing-amplitude);
  }
  
  // Gentle base state surface with subtle dynamic curves
  border-radius: 48% 52% 53% 47% / 51% 49% 52% 48%;
  background: 
    radial-gradient(
      ellipse 90% 70% at 35% 45%,
      rgba(var(--sn-gradient-primary-rgb), 0.04) 0%,
      transparent 80%
    ),
    radial-gradient(
      ellipse 70% 85% at 65% 55%,
      rgba(var(--sn-gradient-accent-rgb), 0.03) 0%,
      transparent 70%
    ),
    linear-gradient(
      calc(145deg + var(--dynamic-effects-flow-state) * 0.2),
      rgba(var(--sn-gradient-secondary-rgb), 0.02) 0%,
      rgba(var(--sn-gradient-primary-rgb), 0.015) 60%,
      transparent 100%
    );
  
  background-size: 250% 180%, 220% 250%, 300% 150%;
  
  // Intelligent animation selection based on musical state
  animation: 
    base-state-fluid-breathing var(--base-state-rhythm) var(--sn-anim-easing-standard) infinite,
    layered-effects-dynamic-effects-light calc(var(--layered-effects-pulse-rhythm) * 1.5) ease-in-out infinite;
  
  // Smooth state transitions with dynamic easing
  transition: 
    border-radius 2.5s var(--sn-anim-easing-standard),
    background 3s ease-out,
    animation-duration 2s ease-in-out;
  
  // Musical activation override - activate when threshold is met
  .Root[style*="--sn-beat-pulse-intensity"] & {
    animation: 
      musical-fluid-activation calc(var(--base-state-rhythm) / var(--music-flow-acceleration)) var(--sn-anim-easing-standard) infinite,
      layered-effects-dynamic-effects-light calc(var(--layered-effects-pulse-rhythm) / max(var(--music-fluid-resonance), 0.1)) ease-in-out infinite;
    
    // Enhanced background intensity during musical state
    background: 
      radial-gradient(
        ellipse 95% 75% at 30% 40%,
        rgba(var(--sn-gradient-primary-rgb), calc(0.04 + var(--music-activation-gate) * 0.06)) 0%,
        transparent 75%
      ),
      radial-gradient(
        ellipse 75% 90% at 70% 60%,
        rgba(var(--sn-gradient-accent-rgb), calc(0.03 + var(--music-peak-animation-gate) * 0.05)) 0%,
        transparent 65%
      ),
      linear-gradient(
        calc(145deg + var(--dynamic-effects-flow-state) * 0.5),
        rgba(var(--sn-gradient-secondary-rgb), calc(0.02 + var(--music-activation-gate) * 0.04)) 0%,
        rgba(var(--sn-gradient-primary-rgb), calc(0.015 + var(--music-peak-animation-gate) * 0.03)) 50%,
        transparent 100%
      );
  }
  
  // Metallic-like surface reflection
  &::before {
    content: "";
    position: absolute;
    top: 5%;
    left: 5%;
    width: 40%;
    height: 60%;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, var(--metallic-surface-reflection)) 0%,
      rgba(255, 255, 255, calc(var(--metallic-surface-reflection) * 0.6)) 30%,
      transparent 70%
    );
    border-radius: 80% 20% 60% 40% / 70% 30% 80% 20%;
    pointer-events: none;
    z-index: 1;
    
    animation: 
      fluid-surface-flow calc(var(--fluid-flow-velocity) / var(--music-flow-acceleration) * 0.8) ease-in-out infinite reverse,
      metallic-droplet-coalescence var(--metallic-coalescence-speed) ease-in-out infinite;
  }
  
  // Dynamic cellular structure
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(
        circle at 25% 25%,
        rgba(var(--sn-gradient-accent-rgb), 0.03) 0%,
        transparent 40%
      ),
      radial-gradient(
        circle at 75% 75%,
        rgba(var(--sn-gradient-secondary-rgb), 0.04) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 50% 80%,
        rgba(var(--sn-gradient-primary-rgb), 0.02) 0%,
        transparent 60%
      );
    border-radius: inherit;
    pointer-events: none;
    z-index: 0;
    
    animation: 
      dynamic-cellular-growth var(--layered-effects-cellular-division) ease-in-out infinite,
      plasma-membrane-oscillation calc(var(--fluid-flow-velocity) * 2) linear infinite reverse;
  }
}

// === LEGACY COMPATIBILITY MIXIN ===
@mixin liquid-surface-morphing($complexity: normal) {
  @include fluid-surface-morphing($complexity);
}

@mixin metallic-droplet-dynamics {
  position: relative;
  
  // Main metallic surface
  background: 
    radial-gradient(
      ellipse 100% 80% at 50% 30%,
      rgba(var(--sn-gradient-primary-rgb), 0.12) 0%,
      rgba(var(--sn-gradient-accent-rgb), 0.08) 40%,
      transparent 80%
    ),
    linear-gradient(
      45deg,
      rgba(var(--sn-gradient-secondary-rgb), 0.06) 0%,
      transparent 50%,
      rgba(var(--sn-gradient-primary-rgb), 0.04) 100%
    );
  
  border-radius: 50%;
  
  animation: 
    metallic-droplet-coalescence var(--metallic-coalescence-speed) ease-in-out infinite,
    layered-effects-dynamic-effects-light calc(var(--layered-effects-pulse-rhythm) * 1.2) ease-in-out infinite;
  
  // Surface tension highlights
  &::before {
    content: "";
    position: absolute;
    top: 15%;
    left: 15%;
    width: 30%;
    height: 30%;
    background: radial-gradient(
      circle,
      rgba(255, 255, 255, 0.8) 0%,
      rgba(255, 255, 255, 0.4) 40%,
      transparent 70%
    );
    border-radius: 50%;
    pointer-events: none;
    z-index: 1;
    
    animation: metallic-droplet-coalescence calc(var(--metallic-coalescence-speed) * 0.7) ease-in-out infinite reverse;
  }
  
  // Magnetic field interaction
  &:hover {
    animation-duration: calc(var(--metallic-coalescence-speed) * 0.5);
    transform: scale(1.1);
    
    &::before {
      background: radial-gradient(
        circle,
        rgba(var(--sn-gradient-primary-rgb), 0.9) 0%,
        rgba(var(--sn-gradient-accent-rgb), 0.6) 40%,
        transparent 70%
      );
    }
  }
}

@mixin fluid-ripple-interaction {
  position: relative;
  overflow: visible;
  
  // Ripple effect on interaction
  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: radial-gradient(
      circle,
      rgba(var(--sn-gradient-primary-rgb), 0.3) 0%,
      rgba(var(--sn-gradient-accent-rgb), 0.2) 30%,
      rgba(var(--sn-gradient-secondary-rgb), 0.1) 60%,
      transparent 100%
    );
    border-radius: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: -1;
    opacity: 0;
    transition: all 0.3s ease-out;
  }
  
  &:hover,
  &:focus,
  &[aria-selected="true"],
  &.main-trackList-selected {
    &::before {
      width: 200%;
      height: 200%;
      opacity: 1;
      animation: fluid-ripple-propagation var(--fluid-ripple-frequency) ease-out infinite;
    }
  }
}

// === LEGACY COMPATIBILITY MIXINS ===
@mixin liquid-ripple-interaction {
  @include fluid-ripple-interaction;
}

// === LEGACY COMPATIBILITY MIXINS ===
@mixin mercury-droplet-dynamics {
  @include metallic-droplet-dynamics;
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌊 APPLICATION TO SPOTIFY UI ELEMENTS
// ═══════════════════════════════════════════════════════════════════════════════

// === CARDS BECOME FLUID SURFACES ===
.main-card-card {
  @include fluid-surface-morphing(normal);
  @include fluid-ripple-interaction;
  
  // Enhanced fluid effects for different card types
  &[data-testid*="artist"] {
    @include metallic-droplet-dynamics;
    
    border-radius: 50%;
    --layered-effects-light-depth: 0.08;
    --metallic-coalescence-speed: 1.5s;
  }
  
  &[data-testid*="album"] {
    @include fluid-surface-morphing(complex);
    
    --fluid-morphing-amplitude: 30px;
    --layered-effects-form-complexity: 5;
  }
  
  &[data-testid*="playlist"] {
    @include fluid-surface-morphing(simple);
    
    --fluid-flow-velocity: 6s;
    --layered-effects-light-depth: 0.03;
  }
}

// === TRACK ROWS BECOME FLOWING STREAMS ===
.main-trackList-trackListRow {
  @include fluid-surface-morphing(simple);
  @include fluid-ripple-interaction;
  
  border-radius: 25px 50px 25px 50px / 15px 25px 15px 25px;
  --fluid-flow-velocity: 10s;
  --layered-effects-light-depth: 0.02;
  --fluid-morphing-amplitude: 12px;
  
  // Currently playing track gets enhanced fluid properties
  &.main-trackList-selected,
  &:has(.main-trackList-playingIcon) {
    @include metallic-droplet-dynamics;
    
    --metallic-coalescence-speed: 1s;
    --layered-effects-light-depth: 0.06;
    
    border-radius: 40px 60px 40px 60px / 30px 40px 30px 40px;
    
    // Fluid energy field around playing track
    &::after {
      background: 
        radial-gradient(
          ellipse 150% 100% at 50% 50%,
          rgba(var(--sn-gradient-primary-rgb), 0.08) 0%,
          rgba(var(--sn-gradient-accent-rgb), 0.06) 40%,
          transparent 80%
        );
      
      animation: 
        dynamic-cellular-growth calc(var(--layered-effects-cellular-division) * 0.7) ease-in-out infinite,
        layered-effects-dynamic-effects-light var(--layered-effects-pulse-rhythm) ease-in-out infinite;
    }
  }
}

// === SIDEBAR NAVIGATION BECOMES FLUID MEMBRANE ===
.main-yourLibrary-yourLibrary,
.main-navBar-navBar {
  @include fluid-surface-morphing(simple);
  
  border-radius: 0;
  --fluid-flow-velocity: 15s;
  --layered-effects-light-depth: 0.01;
  --fluid-morphing-amplitude: 8px;
  
  .main-navBar-navBarLink,
  .spicetify-playlist-list li {
    @include fluid-surface-morphing(simple);
    @include fluid-ripple-interaction;
    
    border-radius: 20px 40px 20px 40px / 15px 20px 15px 20px;
    margin: 2px 0;
    --fluid-flow-velocity: 8s;
    --layered-effects-light-depth: 0.02;
    
    &:hover,
    &[aria-selected="true"],
    &.main-rootlist-rootlistItemActive {
      @include metallic-droplet-dynamics;
      
      --metallic-coalescence-speed: 2s;
      border-radius: 30px;
    }
  }
}

// === PLAYBACK CONTROLS BECOME FLUID INTERFACE ===
.main-nowPlayingBar-nowPlayingBar {
  @include fluid-surface-morphing(simple);
  
  border-radius: 0;
  --fluid-flow-velocity: 12s;
  --layered-effects-light-depth: 0.015;
  
  .main-playButton-PlayButton,
  .main-skipBackButton-button,
  .main-skipForwardButton-button {
    @include metallic-droplet-dynamics;
    
    border-radius: 50%;
    --metallic-coalescence-speed: 1.5s;
    --layered-effects-light-depth: 0.04;
    
    &:hover {
      --metallic-coalescence-speed: 0.8s;
      --layered-effects-light-depth: 0.08;
    }
  }
  
  // Main play button gets enhanced fluid effects
  .main-playButton-PlayButton {
    @include fluid-surface-morphing(normal);
    
    --fluid-morphing-amplitude: 20px;
    --layered-effects-form-complexity: 4;
  }
}

// === SEARCH RESULTS BECOME FLUID DISCOVERY ===
.main-search-searchCategory,
.main-shelf-shelf {
  @include fluid-surface-morphing(simple);
  
  border-radius: 20px;
  --fluid-flow-velocity: 18s;
  --layered-effects-light-depth: 0.01;
  
  .main-card-card {
    --fluid-flow-velocity: 6s;
    --layered-effects-light-depth: 0.03;
  }
}

// === MODALS AND CONTEXT MENUS BECOME FLUID PORTALS ===
.GenericModal,
.main-contextMenu-menu {
  @include fluid-surface-morphing(complex);
  @include metallic-droplet-dynamics;
  
  border-radius: 25px;
  --fluid-morphing-amplitude: 20px;
  --metallic-coalescence-speed: 2.5s;
  
  .main-contextMenu-menuItemButton {
    @include fluid-ripple-interaction;
    
    border-radius: 15px 25px 15px 25px / 10px 15px 10px 15px;
    
    &:hover {
      @include metallic-droplet-dynamics;
    }
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🎵 MUSIC-RESPONSIVE FLUID AMPLIFICATION
// ═══════════════════════════════════════════════════════════════════════════════

// Beat-synchronized fluid acceleration
.Root[style*="--sn-beat-pulse-intensity"] {
  .main-card-card,
  .main-trackList-trackListRow,
  .main-playButton-PlayButton {
    --music-flow-acceleration: calc(2 - var(--sn-beat-pulse-intensity, 0) * 1.5);
    --music-fluid-resonance: calc(var(--sn-beat-pulse-intensity, 0) * 0.8 + 0.4);
    --layered-effects-light-depth: calc(0.05 + var(--sn-beat-pulse-intensity, 0) * 0.05);
    
    animation-duration: 
      calc(var(--fluid-flow-velocity) / var(--music-flow-acceleration)),
      calc(var(--layered-effects-pulse-rhythm) / max(var(--music-fluid-resonance), 0.3));
  }
}

// Genre-responsive fluid evolution
.Root[style*="--sn-dynamic-genre-hue-shift"] {
  :root {
    --dynamic-effects-flow-state: calc(var(--sn-dynamic-genre-hue-shift, 0deg) + var(--sn-rhythm-phase, 0) * 180deg);
    --dynamic-effects-cellular-mitosis: calc(var(--sn-dynamic-genre-hue-shift, 0deg) * 0.3);
  }
  
  .main-card-card,
  .main-trackList-trackListRow {
    filter: hue-rotate(var(--dynamic-effects-cellular-mitosis));
  }
}

// Energy-responsive viscosity changes
.Root[style*="--sn-music-energy"] {
  :root {
    --music-viscosity-change: calc(0.6 - var(--sn-music-energy, 0.5) * 0.4);
    --music-morphing-complexity: calc(var(--sn-music-energy, 0.5) + 0.5);
  }
  
  .main-card-card {
    --layered-effects-form-complexity: calc(4 * var(--music-morphing-complexity));
    --fluid-morphing-amplitude: calc(25px * var(--music-morphing-complexity));
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🌟 ACCESSIBILITY & PERFORMANCE CONSCIOUSNESS
// ═══════════════════════════════════════════════════════════════════════════════

@media (prefers-reduced-motion: reduce) {
  :root {
    --fluid-flow-velocity: 20s;
    --layered-effects-pulse-rhythm: 15s;
    --metallic-coalescence-speed: 5s;
    --fluid-ripple-frequency: 8s;
    --layered-effects-light-depth: 0.01;
    --fluid-morphing-amplitude: 5px;
  }
  
  // Disable complex fluid animations
  .main-card-card,
  .main-trackList-trackListRow,
  .main-navBar-navBarLink {
    animation: none !important;
    border-radius: 12px !important;
    
    &::before,
    &::after {
      animation: none !important;
    }
  }
  
  // Keep subtle fluid effects only
  .main-playButton-PlayButton {
    border-radius: 50% !important;
    
    &:hover {
      transform: scale(1.05);
      transition: transform 0.3s ease-out;
    }
  }
}

@media (max-width: 768px) {
  :root {
    --fluid-flow-velocity: 12s;
    --layered-effects-light-depth: 0.02;
    --fluid-morphing-amplitude: 15px;
    --metallic-coalescence-speed: 3s;
    --layered-effects-form-complexity: 3;
  }
  
  // Simplified fluid effects for mobile
  .main-card-card {
    --fluid-morphing-amplitude: 10px;
    
    &::after {
      display: none; // Remove complex cellular structure on mobile
    }
  }
  
  .main-trackList-trackListRow {
    --layered-effects-light-depth: 0.01;
    border-radius: 15px 20px 15px 20px / 10px 15px 10px 15px;
  }
}

@media (prefers-contrast: high) {
  :root {
    --fluid-morphing-amplitude: 30px;
    --layered-effects-light-depth: 0.08;
    --metallic-surface-reflection: 1.2;
  }
  
  // Enhanced visibility for fluid elements
  .main-card-card,
  .main-trackList-trackListRow {
    border: 1px solid rgba(var(--spice-rgb-text), 0.3);
    
    &::before {
      background: linear-gradient(
        135deg,
        rgba(var(--spice-rgb-text), 0.8) 0%,
        rgba(var(--spice-rgb-text), 0.4) 50%,
        transparent 100%
      );
    }
  }
}

// Performance optimization for lower-end devices
@media (max-resolution: 1.5dppx) {
  :root {
    --layered-effects-form-complexity: 2;
    --fluid-morphing-amplitude: 8px;
  }
  
  // Disable complex fluid effects on low-resolution displays
  .main-card-card,
  .main-trackList-trackListRow {
    &::after {
      display: none; // Remove cellular structure overlays
    }
  }
  
  .GenericModal,
  .main-contextMenu-menu {
    animation: none !important;
    border-radius: 12px !important;
  }
}

// Performance optimization for better performance
.main-card-card,
.main-trackList-trackListRow,
.main-playButton-PlayButton {
  // Only use will-change during active animations
  will-change: auto;
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🚀 SHAPE TRANSITIONS COMPLETION
// Animation framework modernization with technical precision and performance optimization
// ═══════════════════════════════════════════════════════════════════════════════