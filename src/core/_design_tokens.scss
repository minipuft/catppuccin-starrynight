// ████████████████████████████████████████████████████████████████████████████████
// DESIGN TOKEN ABSTRACTION SYSTEM
// Provides reusable functions and mixins for OKLAB color tokens and shadow stacks
// ████████████████████████████████████████████████████████████████████████████████
//
// PURPOSE:
// - Single source of truth for design token usage patterns
// - Unified OKLAB color variable architecture with accurate naming
// - Dynamic shadow/highlight colors derived from album art
// - Standardizes shadow stack definitions
// - Improves code readability and maintainability
//
// OKLAB VARIABLE ARCHITECTURE:
// Shadow/Highlight (NEW - Phase 1):
//   --sn-oklab-shadow-rgb      → Dynamically derived dark color from album art
//   --sn-oklab-highlight-rgb   → Dynamically derived bright color from album art
//
// Accent/Primary/Secondary (Existing):
//   --sn-accent-rgb            → Main accent color (OKLAB-processed)
//   --sn-bg-gradient-*-rgb     → Gradient colors (OKLAB-processed)
//
// USAGE EXAMPLES:
//
// Color Tokens (Functions):
//   color: oklab-color('shadow', 0.2);
//   background: oklab-color('highlight', 0.15);
//
// Shadow Stacks (Mixins):
//   @include oklab-shadow-stack('card-idle');
//   @include oklab-shadow-stack('header-base');
//
// ████████████████████████████████████████████████████████████████████████████████

// ═══════════════════════════════════════════════════════════════════════════════
// OKLAB COLOR TOKEN FUNCTIONS
// Returns rgba() color from OKLAB processed tokens
// ═══════════════════════════════════════════════════════════════════════════════

/// Returns an OKLAB-processed color with specified opacity
/// @param {String} $token - Token name: 'shadow', 'highlight', 'accent', 'primary', 'secondary'
/// @param {Number} $opacity - Opacity value (0-1), defaults to 1
/// @return {Color} rgba() color value
/// @example
///   color: oklab-color('shadow', 0.2);
///   // Output: rgba(var(--sn-oklab-shadow-rgb), 0.2)
@function oklab-color($token, $opacity: 1) {
  @if $token == 'shadow' {
    @return rgba(var(--sn-oklab-shadow-rgb, var(--sn-color-oklab-dynamic-shadow-rgb, 0, 0, 0)), $opacity);
  } @else if $token == 'highlight' {
    @return rgba(var(--sn-oklab-highlight-rgb, var(--sn-color-oklab-bright-highlight-rgb, 255, 255, 255)), $opacity);
  } @else if $token == 'accent' {
    @return rgba(var(--sn-accent-rgb, 128, 128, 128), $opacity);
  } @else if $token == 'primary' {
    @return rgba(var(--sn-bg-gradient-primary-rgb, 128, 128, 128), $opacity);
  } @else if $token == 'secondary' {
    @return rgba(var(--sn-bg-gradient-secondary-rgb, 96, 96, 96), $opacity);
  } @else {
    @warn "Unknown OKLAB token: #{$token}. Valid tokens: 'shadow', 'highlight', 'accent', 'primary', 'secondary'";
    @return rgba(0, 0, 0, $opacity);
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// SHADOW STACK PRESETS
// Standardized shadow definitions for consistent depth across components
// ═══════════════════════════════════════════════════════════════════════════════

/// Applies a preset shadow stack with OKLAB colors
/// @param {String} $preset - Preset name
/// @example
///   @include oklab-shadow-stack('card-idle');
@mixin oklab-shadow-stack($preset: 'card-idle') {
  @if $preset == 'card-idle' {
    // Subtle 2-layer depth for resting cards
    box-shadow:
      0 2px 8px oklab-color('shadow', 0.08),
      0 4px 16px oklab-color('shadow', 0.05);

  } @else if $preset == 'card-hover' {
    // Enhanced 3-layer depth for hovered cards
    box-shadow:
      0 4px 12px oklab-color('shadow', 0.12),
      0 8px 24px oklab-color('shadow', 0.08),
      0 12px 36px oklab-color('shadow', 0.04);

  } @else if $preset == 'card-active' {
    // Full 5-layer emergence for active/selected cards
    box-shadow:
      0 8px 16px oklab-color('shadow', 0.15),
      0 16px 32px oklab-color('shadow', 0.12),
      0 24px 48px oklab-color('shadow', 0.08),
      0 32px 64px oklab-color('shadow', 0.04),
      inset 0 1px 0 oklab-color('highlight', 0.15);

  } @else if $preset == 'header-base' {
    // Header depth with inset highlight and accent glow
    box-shadow:
      inset 0 1px 0 oklab-color('highlight', 0.1),
      0 0 20px oklab-color('accent', 0.2),
      0 0 40px oklab-color('accent', 0.1);

  } @else if $preset == 'glass-soft' {
    // Soft glassmorphism shadow
    box-shadow:
      0 4px 16px oklab-color('shadow', 0.06),
      0 8px 32px oklab-color('shadow', 0.04),
      inset 0 1px 0 oklab-color('highlight', 0.08);

  } @else if $preset == 'glass-strong' {
    // Strong glassmorphism shadow with depth
    box-shadow:
      0 8px 24px oklab-color('shadow', 0.12),
      0 16px 48px oklab-color('shadow', 0.08),
      inset 0 1px 0 oklab-color('highlight', 0.12),
      inset 0 -1px 0 oklab-color('shadow', 0.05);

  } @else if $preset == 'track-list-hover' {
    // Subtle shadow for track row hover states
    box-shadow:
      0 2px 4px oklab-color('shadow', 0.06),
      0 4px 8px oklab-color('shadow', 0.03);

  } @else if $preset == 'floating-element' {
    // Shadow for floating UI elements (tooltips, popovers)
    box-shadow:
      0 8px 32px oklab-color('shadow', 0.16),
      0 16px 64px oklab-color('shadow', 0.08),
      0 4px 16px oklab-color('shadow', 0.04);

  } @else {
    @warn "Unknown shadow preset: #{$preset}. Valid presets: 'card-idle', 'card-hover', 'card-active', 'header-base', 'glass-soft', 'glass-strong', 'track-list-hover', 'floating-element'";
    // Fallback to card-idle
    box-shadow:
      0 2px 8px oklab-color('shadow', 0.08),
      0 4px 16px oklab-color('shadow', 0.05);
  }
}

// ═══════════════════════════════════════════════════════════════════════════════
// GRADIENT BUILDER (Future Enhancement)
// ═══════════════════════════════════════════════════════════════════════════════

// TODO: Implement gradient builder mixin when pattern stabilizes
// @mixin oklab-gradient($angle, $stops) { ... }

// ═══════════════════════════════════════════════════════════════════════════════
// USAGE EXAMPLES
// ═══════════════════════════════════════════════════════════════════════════════

// EXAMPLE 1: Color Function
// -----------------------------------------------------------------------------
// .my-component {
//   background: oklab-color('shadow', 0.12);
//   border-color: oklab-color('highlight', 0.3);
//   box-shadow: 0 4px 8px oklab-color('shadow', 0.15);
// }

// EXAMPLE 2: Shadow Stack Mixin
// -----------------------------------------------------------------------------
// .main-card-card {
//   @include oklab-shadow-stack('card-idle');
//
//   &:hover {
//     @include oklab-shadow-stack('card-hover');
//   }
//
//   &:active, &[aria-selected="true"] {
//     @include oklab-shadow-stack('card-active');
//   }
// }

// EXAMPLE 3: Combined Usage
// -----------------------------------------------------------------------------
// .entity-header::before {
//   background: linear-gradient(
//     45deg,
//     transparent 30%,
//     oklab-color('accent', 0.1) 50%,
//     transparent 70%
//   );
//   @include oklab-shadow-stack('header-base');
// }

// ═══════════════════════════════════════════════════════════════════════════════
// MIGRATION NOTES & ARCHITECTURE EVOLUTION
// ═══════════════════════════════════════════════════════════════════════════════
//
// PHASE 1 CONSOLIDATION (2025-10-02):
// Updated to use new consolidated OKLAB variable architecture:
//
// Shadow Token (NOW DYNAMIC - derived from album art):
//   BEFORE: rgba(var(--sn-oklab-processed-dynamic-shadow-rgb), 0.12)
//   AFTER:  oklab-color('shadow', 0.12)
//   → Uses: --sn-oklab-shadow-rgb (new unified variable)
//
// Highlight Token (NOW DYNAMIC - derived from album art):
//   BEFORE: rgba(var(--sn-oklab-processed-bright-highlight-rgb), 0.15)
//   AFTER:  oklab-color('highlight', 0.15)
//   → Uses: --sn-oklab-highlight-rgb (new unified variable)
//
// Accent/Primary/Secondary (Existing variables maintained):
//   oklab-color('accent', 0.8)   → Uses: --sn-accent-rgb
//   oklab-color('primary', 0.6)  → Uses: --sn-bg-gradient-primary-rgb
//   oklab-color('secondary', 0.4) → Uses: --sn-bg-gradient-secondary-rgb
//
// PHASE 3.6 COMPLETION (2025-10-02):
// Migrated all direct rgba(var(--sn-*-rgb)) calls to oklab-color() helper:
//
// Migration Pattern:
//   BEFORE: rgba(var(--sn-accent-rgb), 0.2)
//   AFTER:  oklab-color('accent', 0.2)
//
// Benefits:
//   ✅ Single source of truth for color token usage
//   ✅ Consistent semantic naming across all SCSS files
//   ✅ Easier to maintain and extend with new tokens
//   ✅ Clear separation of ColorHarmonyEngine variables vs other systems
//
// Scope: 8 SCSS files, 45 rgba() calls migrated (100% completion)
//
// SHADOW STACK PRESETS:
//   BEFORE: Verbose box-shadow with multiple rgba() calls
//   AFTER:  @include oklab-shadow-stack('card-idle');
//
// BENEFITS:
// - Dynamic shadow/highlight colors from album art (Phase 1 enhancement)
// - Unified OKLAB variable naming convention
// - Single source of truth for shadow definitions
// - Easier to maintain consistency across components
// - Simpler to adjust global depth/intensity
// - Self-documenting code with semantic preset names
// - Type-safe token names (compile-time validation)
// - Backward compatible fallback chains
//
// ═══════════════════════════════════════════════════════════════════════════════
