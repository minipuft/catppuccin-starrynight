// ████████████████████████████████████████████████████████████████████████████████
// 🎨 VISUAL TOKENS - Consolidated Visual Effects & Gradient Variables
// Unified visual system tokens for the StarryNight theme
// ████████████████████████████████████████████████████████████████████████████████
// 
// This file consolidates:
// - Gradient system variables (from _sn_gradient.scss)
// - Visual effects and layer controls
// - Background system properties
//
// Maintains full backward compatibility while providing a centralized visual system
// ████████████████████████████████████████████████████████████████████████████████

@use "_mixins" as *;

:root {
  // ═══════════════════════════════════════════════════════════════════════════════
  // 🌌 BACKGROUND GRADIENT SYSTEM (Priority: High)
  // Core gradient properties and musical synchronization
  // ═══════════════════════════════════════════════════════════════════════════════

  // === GRADIENT CORE PROPERTIES ===
  // Musical integration with OKLAB color harmony
  --sn-bg-gradient-primary-rgb: var(--sn-musical-harmony-primary-rgb, var(--sn-color-accent-rgb));
  --sn-bg-gradient-secondary-rgb: var(--sn-musical-harmony-secondary-rgb, var(--sn-cosmic-secondary-rgb));
  --sn-bg-gradient-tertiary-rgb: var(--sn-musical-harmony-tertiary-rgb, var(--sn-cosmic-surface-rgb));

  // Core gradient properties
  --sn-bg-gradient-opacity: 0.15;
  --sn-bg-gradient-blur: 40px;
  --sn-bg-gradient-angle: 135deg;
  --sn-bg-gradient-saturation: 1.45;
  --sn-bg-gradient-brightness: 1.25;
  --sn-bg-gradient-contrast: 1.35;

  // === MUSICAL GRADIENT COORDINATION ===
  // Beat synchronization and rhythm responsiveness
  --sn-gradient-beat-intensity: var(--sn-music-beat-pulse-intensity, 0); // 0-1 beat pulse strength
  --sn-gradient-rhythm-phase: var(--sn-music-rhythm-phase, 0); // Continuous rhythm phase
  --sn-gradient-animation-scale: var(--sn-music-animation-scale, 1); // Animation rhythm 0.95-1.05

  // Musical background harmony integration
  --sn-bg-musical-primary-rgb: var(--sn-musical-harmony-primary-rgb);
  --sn-bg-musical-secondary-rgb: var(--sn-musical-harmony-secondary-rgb);
  --sn-bg-musical-tertiary-rgb: var(--sn-musical-harmony-tertiary-rgb);
  --sn-bg-musical-accent-rgb: var(--sn-musical-harmony-quaternary-rgb);

  // === DYNAMIC VISUAL RESPONSIVENESS ===
  // Music-responsive gradient properties
  --sn-music-energy: 0.5; // Set by music analysis (0.0 - 1.0)
  --sn-music-valence: 0.5; // Musical positivity (0.0 - 1.0)
  --sn-music-intensity-boost: 1; // Dynamic multiplier from music
  --sn-cosmic-sync-enabled: 1; // 1 = enabled, 0 = disabled

  // Dynamic intensity scaling with music, consciousness, and cosmic forces
  --sn-dynamic-opacity: calc(
    var(--sn-bg-gradient-opacity) * var(--sn-music-intensity-boost, 1) * var(--sn-gradient-layer-consciousness)
  );
  --sn-dynamic-saturation: calc(
    var(--sn-bg-gradient-saturation) * (1 + (var(--sn-music-energy, 0.5) * 0.3)) * 
    (1 + (var(--sn-gradient-emotional-valence) * 0.2)) * var(--sn-dynamic-genre-saturation)
  );
  --sn-dynamic-brightness: calc(
    var(--sn-bg-gradient-brightness) * (1 + (var(--sn-music-valence, 0.5) * 0.2)) * 
    (1 + (var(--sn-gradient-cosmic-energy) * 0.15)) * var(--sn-dynamic-genre-brightness)
  );
  --sn-dynamic-contrast: calc(
    var(--sn-bg-gradient-contrast) * (1 + (var(--sn-gradient-beat-intensity) * 0.2)) * 
    (1 + (var(--sn-gradient-harmonic-resonance) * 0.15)) * var(--sn-dynamic-genre-contrast)
  );

  // ═══════════════════════════════════════════════════════════════════════════════
  // 🌊 GRADIENT FLOW & EASING SYSTEM
  // Organic transitions and WebGL-inspired flow controls
  // ═══════════════════════════════════════════════════════════════════════════════

  // === FLOW CONTROL (WebGL-inspired offsets) ===
  // Updated every frame by WebGLGradientBackgroundSystem or CSS keyframes
  --sn-gradient-flow-x: 0%; // −25% → +25%
  --sn-gradient-flow-y: 0%; // −25% → +25%
  --sn-gradient-flow-scale: 1.15; // 1 = 100%, 1.15 = gentle zoom for movement
  --sn-webgl-ready: 0; // WebGL readiness flag (0 = CSS-only, 1 = WebGL active)

  // === ORGANIC TRANSITION SYSTEM ===
  --sn-gradient-transition: 2400ms var(--sn-easing-emergence, var(--sn-anim-easing-organic));
  --sn-organic-duration: 2400ms;
  --sn-breathing-inhale: 1200ms;
  --sn-breathing-hold: 600ms;
  --sn-breathing-exhale: 600ms;

  // Natural easing curves (aliases to canonical emergence easing)
  --sn-easing-emergence: var(--sn-anim-easing-organic);
  --sn-easing-organic: var(--sn-easing-emergence);
  --sn-easing-breathing: var(--sn-easing-emergence);
  --sn-easing-harmony: var(--sn-easing-emergence);

  // GPU acceleration optimization
  --sn-gpu-acceleration: transform, opacity, filter;

  // ═══════════════════════════════════════════════════════════════════════════════
  // 🧠 CONSCIOUSNESS FIELD VARIABLES (Musical Gradient System)
  // Multi-dimensional gradient consciousness and awareness
  // ═══════════════════════════════════════════════════════════════════════════════

  // === MUSICAL CONSCIOUSNESS VARIABLES ===
  // The gradient's ability to perceive and respond to music
  --sn-gradient-temporal-phase: 0; // 0-1 temporal phase shift across song timeline
  --sn-gradient-harmonic-resonance: 0; // 0-1 harmonic frequency response intensity
  --sn-gradient-emotional-valence: 0.5; // 0-1 music emotional mapping (sad->happy)
  --sn-gradient-cosmic-energy: 0; // 0-1 beat energy constellation magnitude
  --sn-gradient-dimensional-depth: 3; // 1-5 layer depth perception level
  --sn-gradient-stellar-drift: 0deg; // -30deg to +30deg hue drift with genre changes

  // === CONSCIOUSNESS FIELD STATE VARIABLES ===
  // Control the gradient's awareness level
  --sn-gradient-consciousness-level: 0.7; // 0-1 overall consciousness intensity
  --sn-gradient-temporal-memory: 0.3; // 0-1 how much past colors influence current
  --sn-gradient-predictive-flow: 0.2; // 0-1 anticipation of musical changes
  --sn-gradient-quantum-coherence: 0; // 0-1 quantum state synchronization

  // === SPECTRAL ANALYSIS VARIABLES ===
  // Frequency band responses
  --sn-gradient-bass-response: 0; // 0-1 bass frequency influence
  --sn-gradient-mid-response: 0; // 0-1 mid frequency influence
  --sn-gradient-treble-response: 0; // 0-1 treble frequency influence
  --sn-gradient-vocal-presence: 0; // 0-1 vocal frequency detection

  // === STELLAR PHENOMENA VARIABLES ===
  // Cosmic visual effects
  --sn-gradient-nebula-density: 0.5; // 0-1 nebula cloud density
  --sn-gradient-aurora-intensity: 0; // 0-1 aurora borealis effect
  --sn-gradient-cosmic-dust: 0.3; // 0-1 interstellar dust particle density
  --sn-gradient-star-formation: 0; // 0-1 new star birth animation

  // ═══════════════════════════════════════════════════════════════════════════════
  // 🎭 MULTI-DIMENSIONAL LAYER SYSTEM
  // Layered visual effects with depth and opacity control
  // ═══════════════════════════════════════════════════════════════════════════════

  // === DIMENSIONAL LAYER CONTROLS ===
  // Multi-dimensional gradient management
  --sn-gradient-layer-consciousness: 1; // 0-1 base consciousness layer opacity
  --sn-gradient-layer-temporal: 0.8; // 0-1 temporal flow layer opacity
  --sn-gradient-layer-harmonic: 0.6; // 0-1 harmonic resonance layer opacity
  --sn-gradient-layer-quantum: 0.4; // 0-1 quantum effects layer opacity
  --sn-gradient-layer-stellar: 0.2; // 0-1 stellar phenomena layer opacity

  // === CONSCIOUSNESS FIELD DYNAMICS ===
  // Temporal and harmonic responsiveness
  --sn-dynamic-temporal-shift: calc(
    var(--sn-gradient-temporal-phase) * 360deg + var(--sn-gradient-stellar-drift) + var(--sn-dynamic-genre-hue-shift)
  );
  --sn-dynamic-harmonic-scale: calc(
    1 + (var(--sn-gradient-harmonic-resonance) * 0.1) + (var(--sn-gradient-bass-response) * 0.05)
  );
  --sn-dynamic-quantum-coherence: calc(
    var(--sn-gradient-quantum-coherence) * var(--sn-gradient-consciousness-level)
  );

  // ═══════════════════════════════════════════════════════════════════════════════
  // 🎵 EMOTIONAL & GENRE GRADIENT DYNAMICS
  // Mood-based visual transformations and musical style adaptation
  // ═══════════════════════════════════════════════════════════════════════════════

  // === EMOTIONAL GRADIENT MAPPING ===
  // Color transformation parameters - respond to musical emotions
  --sn-emotional-hue-shift: 0deg; // -180deg to +180deg mood-based hue rotation
  --sn-emotional-saturation-multiplier: 1; // 0.5-2.0 mood-based saturation adjustment
  --sn-emotional-brightness-multiplier: 1; // 0.5-2.0 mood-based brightness adjustment
  --sn-emotional-contrast-multiplier: 1; // 0.5-2.0 mood-based contrast adjustment

  // Animation parameters - mood affects movement and timing
  --sn-emotional-animation-speed: 1; // 0.1-3.0 mood-based animation speed multiplier
  --sn-emotional-pulse-intensity: 0.5; // 0-1 mood-based pulse strength
  --sn-emotional-flow-direction: 0deg; // 0-360deg mood-based flow direction

  // Layer behavior - emotional harmony and discord
  --sn-emotional-layer-harmony: 0.75; // 0-1 how well layers blend emotionally
  --sn-emotional-discord-level: 0.25; // 0-1 intentional emotional color conflicts
  --sn-emotional-depth-perception: 0.5; // 0-1 3D depth illusion based on mood

  // Transition behavior - emotional responsiveness
  --sn-emotional-transition-speed: 1.5; // 0.1-5.0 mood-based transition speed multiplier

  // Current mood information
  --sn-current-mood: "neutral"; // Current detected mood string
  --sn-mood-confidence: 0.5; // 0-1 confidence in mood detection
  --sn-emotional-valence: 0.5; // 0-1 current emotional valence (sad->happy)
  --sn-emotional-energy: 0.5; // 0-1 current emotional energy (calm->energetic)

  // === GENRE GRADIENT EVOLUTION ===
  // Genre-specific color parameters - adapt to music style
  --sn-genre-base-hue: 0deg; // 0-360deg genre-specific base hue
  --sn-genre-hue-range: 60deg; // 0-360deg hue variation range for genre
  --sn-genre-saturation-base: 1.0; // 0.5-2.0 genre-specific saturation foundation
  --sn-genre-saturation-variation: 0.3; // 0-1 saturation variation amplitude
  --sn-genre-brightness-base: 1.0; // 0.5-2.0 genre-specific brightness foundation
  --sn-genre-brightness-variation: 0.3; // 0-1 brightness variation amplitude
  --sn-genre-contrast-level: 0.7; // 0-1 genre-specific contrast intensity

  // Genre animation characteristics
  --sn-genre-animation-speed: 1.0; // 0.1-3.0 genre-specific animation speed
  --sn-genre-pulse-intensity: 0.5; // 0-1 genre-specific pulse strength
  --sn-genre-edge-sharpness: 0.5; // 0-1 gradient edge definition (geometric vs organic)
  --sn-genre-gradient-complexity: 0.6; // 0-1 number of gradient layers complexity

  // Genre layer interaction
  --sn-genre-layer-harmony: 0.7; // 0-1 layer blending harmony for genre
  --sn-genre-depth-illusion: 0.6; // 0-1 3D depth perception for genre
  --sn-genre-particle-influence: 0.5; // 0-1 cosmic particle prominence for genre

  // Genre temporal behavior
  --sn-genre-memory-influence: 0.5; // 0-1 how much past genre states influence current
  --sn-genre-adaptation-speed: 0.5; // 0-1 how quickly visual style adapts to genre changes
  --sn-genre-stability-preference: 0.6; // 0-1 stability vs dynamic change preference

  // Current genre information
  --sn-current-genre: "unknown"; // Current detected music genre string
  --sn-genre-confidence: 0.0; // 0-1 confidence in genre detection

  // === GENRE DYNAMICS ===
  // Dynamic genre-based calculations
  --sn-dynamic-genre-hue-shift: calc(
    var(--sn-genre-base-hue) + (var(--sn-gradient-temporal-phase) * var(--sn-genre-hue-range) / 6) + var(--sn-emotional-hue-shift)
  );
  --sn-dynamic-genre-saturation: calc(
    var(--sn-genre-saturation-base) * (1 + (var(--sn-music-energy) * var(--sn-genre-saturation-variation))) * var(--sn-emotional-saturation-multiplier)
  );
  --sn-dynamic-genre-brightness: calc(
    var(--sn-genre-brightness-base) * (1 + (var(--sn-music-valence) * var(--sn-genre-brightness-variation))) * var(--sn-emotional-brightness-multiplier)
  );
  --sn-dynamic-genre-contrast: calc(
    var(--sn-genre-contrast-level) * (1 + (var(--sn-gradient-beat-intensity) * 0.3)) * var(--sn-emotional-contrast-multiplier)
  );

  // ═══════════════════════════════════════════════════════════════════════════════
  // 🌐 INTEGRATION & PERFORMANCE SYSTEM
  // WebGL ↔ CSS transition system and performance optimization
  // ═══════════════════════════════════════════════════════════════════════════════

  // === INTEGRATION STATE MANAGEMENT ===
  --sn-integration-active: 0; // 0/1 integration system active
  --sn-integration-mode: "progressive"; // progressive, performance-first, quality-first, battery-optimized
  --sn-current-backend: "css"; // css, webgl, hybrid
  --sn-webgl-enabled: 0; // 0/1 WebGL backend enabled
  --sn-hybrid-mode: 1; // 0/1 hybrid rendering mode - ALWAYS ENABLED for seamless coordination

  // === TRANSITION SYSTEM CONTROLS ===
  --sn-gradient-transition-active: 0; // 0/1 backend transition in progress
  --sn-gradient-transition-duration: 800ms; // Transition duration
  --sn-gradient-transition-easing: var(--sn-anim-easing-organic); // Transition easing
  --sn-gradient-transition-progress: 0; // 0-1 transition progress for progressive mode
  --sn-gradient-crossfade-opacity: 0; // 0-1 crossfade opacity control

  // === PERFORMANCE MONITORING ===
  --sn-system-health: "good"; // excellent, good, degraded, critical
  --sn-system-health-score: 70; // 0-100 numeric health score
  --sn-current-fps: 60; // Current frame rate
  --sn-memory-usage: 0; // Memory usage in MB
  --sn-adaptive-quality: 0.6; // 0-1 current adaptive quality level
  --sn-adaptive-fps: 60; // Current adaptive target FPS

  // === INTEGRATION MODE FLAGS ===
  --sn-performance-mode: 0; // 0/1 performance-first mode active
  --sn-quality-mode: 0; // 0/1 quality-first mode active
  --sn-battery-mode: 0; // 0/1 battery-optimized mode active
  --sn-progressive-mode: 0; // 0/1 progressive mode active

  // === BACKEND CAPABILITY FLAGS ===
  --sn-webgl2-available: 0; // 0/1 WebGL2 support available
  --sn-high-performance-device: 0; // 0/1 high-performance device detected
  --sn-thermal-throttling: 0; // 0/1 thermal throttling active
  --sn-reduced-motion-detected: 0; // 0/1 user prefers reduced motion

  // ═══════════════════════════════════════════════════════════════════════════════
  // 🎨 VISUAL EFFECT PRESETS
  // Utility classes for different visual intensity levels
  // ═══════════════════════════════════════════════════════════════════════════════

  // === GRADIENT INTENSITY PRESETS ===
  --sn-gradient-minimal-opacity: 0.04; // Minimal visual impact
  --sn-gradient-balanced-opacity: 0.08; // Default Year 3000 value
  --sn-gradient-intense-opacity: 0.12; // Enhanced but still gentle

  --sn-gradient-minimal-blur: 40px; // Highly diffused
  --sn-gradient-balanced-blur: 30px; // Default blur
  --sn-gradient-intense-blur: 20px; // Less diffused

  --sn-gradient-minimal-saturation: 1.02; // Barely noticeable
  --sn-gradient-balanced-saturation: 1.05; // Gentle enhancement
  --sn-gradient-intense-saturation: 1.08; // Maximum gentle enhancement

  // === BREATHING RHYTHM PRESETS ===
  --sn-breathing-subtle-inhale: 800ms;
  --sn-breathing-subtle-hold: 400ms;
  --sn-breathing-subtle-exhale: 400ms;

  --sn-breathing-moderate-inhale: 1200ms; // Default
  --sn-breathing-moderate-hold: 600ms; // Default
  --sn-breathing-moderate-exhale: 600ms; // Default

  --sn-breathing-deep-inhale: 1600ms;
  --sn-breathing-deep-hold: 800ms;
  --sn-breathing-deep-exhale: 800ms;
}

// ═══════════════════════════════════════════════════════════════════════════════
// 🔄 LEGACY COMPATIBILITY ALIASES
// Maintains backward compatibility with existing gradient systems
// ═══════════════════════════════════════════════════════════════════════════════

:root {
  // === GRADIENT LEGACY ALIASES ===
  // Legacy color tokens still referenced by components
  --sn-gradient-accent: var(--spice-surface1);
  --sn-gradient-primary: var(--spice-accent);
  --sn-gradient-secondary: var(--spice-surface0);

  // RGB versions for components
  --sn-gradient-primary-rgb: var(--sn-bg-gradient-primary-rgb);
  --sn-gradient-secondary-rgb: var(--sn-bg-gradient-secondary-rgb);
  --sn-gradient-accent-rgb: var(--sn-color-accent-rgb);

  // Core gradient properties aliases
  --sn-gradient-opacity: var(--sn-bg-gradient-opacity);
  --sn-gradient-blur: var(--sn-bg-gradient-blur);
  --sn-gradient-saturation: var(--sn-bg-gradient-saturation);
  --sn-gradient-brightness: var(--sn-bg-gradient-brightness);
  --sn-gradient-contrast: var(--sn-bg-gradient-contrast);

  // === DYNAMIC GRADIENT ALIASES ===
  // Enhanced gradient system with consciousness
  --sn-gradient-opacity-enhanced: calc(
    var(--sn-bg-gradient-opacity, 0.28) + (var(--sn-gradient-beat-intensity) * 0.15) + (var(--sn-gradient-consciousness-level) * 0.1)
  );
  --sn-gradient-blur-enhanced: calc(
    8px + (var(--sn-gradient-beat-intensity) * 3px) + (var(--sn-gradient-nebula-density) * 4px)
  );
  --sn-gradient-saturation-enhanced: calc(
    var(--sn-bg-gradient-saturation, 1.45) + (var(--sn-gradient-beat-intensity) * 0.25) + (var(--sn-gradient-emotional-valence) * 0.3)
  );

  // === EMOTIONAL DYNAMICS ALIASES ===
  --sn-dynamic-emotional-animation-duration: calc(
    var(--sn-gradient-transition) / var(--sn-emotional-animation-speed)
  );
  --sn-dynamic-emotional-flow: calc(
    var(--sn-gradient-temporal-phase) * 360deg + var(--sn-emotional-flow-direction)
  );
  --sn-dynamic-layer-discord: calc(
    var(--sn-emotional-discord-level) * var(--sn-mood-confidence)
  );
}

// ═══════════════════════════════════════════════════════════════════════════════
// 📱 RESPONSIVE & PERFORMANCE OVERRIDES
// Adjust visual tokens for different devices and performance modes
// ═══════════════════════════════════════════════════════════════════════════════

// Performance-first mode optimizations
:root[data-sn-mode="performance-first"],
html[style*="--sn-performance-mode: 1"] {
  // Reduce visual complexity for performance
  --sn-bg-gradient-blur: 20px;
  --sn-bg-gradient-saturation: 1.2;
  --sn-bg-gradient-brightness: 1.1;
  --sn-bg-gradient-contrast: 1.1;
  --sn-gradient-layer-harmonic: 0.3;
  --sn-gradient-layer-quantum: 0.2;
  --sn-gradient-layer-stellar: 0.1;
}

// Quality-first mode enhancements
:root[data-sn-mode="quality-first"],
html[style*="--sn-quality-mode: 1"] {
  // Maximum visual quality
  --sn-bg-gradient-blur: 50px;
  --sn-bg-gradient-saturation: 1.6;
  --sn-bg-gradient-brightness: 1.3;
  --sn-bg-gradient-contrast: 1.4;
  --sn-gradient-layer-harmonic: 0.8;
  --sn-gradient-layer-quantum: 0.6;
  --sn-gradient-layer-stellar: 0.4;
}

// Battery-optimized mode minimal styling
:root[data-sn-mode="battery-optimized"],
html[style*="--sn-battery-mode: 1"] {
  // Minimal resource usage
  --sn-bg-gradient-blur: 15px;
  --sn-bg-gradient-saturation: 1.0;
  --sn-bg-gradient-brightness: 1.0;
  --sn-bg-gradient-contrast: 1.0;
  --sn-gradient-layer-harmonic: 0.2;
  --sn-gradient-layer-quantum: 0;
  --sn-gradient-layer-stellar: 0;
  --sn-gradient-transition: 1000ms ease;
}

// System health responsive styling
html[style*="--sn-system-health: excellent"] {
  // Enhance visuals when system is performing well
  --sn-gradient-layer-consciousness: 1.1;
  --sn-gradient-layer-temporal: 0.9;
}

html[style*="--sn-system-health: degraded"],
html[style*="--sn-system-health: critical"] {
  // Reduce visuals when system is struggling
  --sn-gradient-layer-harmonic: calc(var(--sn-gradient-layer-harmonic) * 0.7);
  --sn-gradient-layer-quantum: calc(var(--sn-gradient-layer-quantum) * 0.5);
  --sn-gradient-layer-stellar: calc(var(--sn-gradient-layer-stellar) * 0.3);
  --sn-gradient-transition: 500ms ease;
}

// Thermal throttling active - emergency performance mode
html[style*="--sn-thermal-throttling: 1"] {
  // Emergency resource conservation
  --sn-bg-gradient-blur: 10px;
  --sn-bg-gradient-saturation: 1.0;
  --sn-bg-gradient-brightness: 1.0;
  --sn-bg-gradient-contrast: 1.0;
  --sn-gradient-layer-harmonic: 0.1;
  --sn-gradient-layer-quantum: 0;
  --sn-gradient-layer-stellar: 0;
  --sn-gradient-layer-temporal: 0.5;
}

// Reduced motion integration
html[style*="--sn-reduced-motion-detected: 1"] {
  // Disable complex animations while preserving visual beauty
  --sn-gradient-transition: 100ms ease;
  --sn-emotional-animation-speed: 0.1;
  --sn-genre-animation-speed: 0.1;
}

@media (max-width: 768px) {
  :root {
    // Mobile visual optimizations
    --sn-bg-gradient-blur: 30px;
    --sn-gradient-layer-harmonic: 0.4;
    --sn-gradient-layer-quantum: 0.2;
    --sn-gradient-layer-stellar: 0.1;
    --sn-adaptive-quality: 0.7;
  }
}

@media (prefers-reduced-motion: reduce) {
  :root {
    // Static visual effects only
    --sn-gradient-transition: 100ms ease;
    --sn-emotional-animation-speed: 0.1;
    --sn-genre-animation-speed: 0.1;
    --sn-gradient-beat-intensity: 0;
    --sn-music-breathing-scale: 1;
    --sn-reduced-motion-detected: 1;
  }
}

@media (update: slow) {
  :root {
    // Reduce effects on slow update devices
    --sn-adaptive-quality: 0.5;
    --sn-gradient-layer-harmonic: 0.3;
    --sn-gradient-layer-quantum: 0.1;
    --sn-gradient-layer-stellar: 0;
  }
}

// NOTE: Legacy compatibility aliases maintain backward compatibility.
// This consolidated visual system provides centralized control over all gradient and visual effects.