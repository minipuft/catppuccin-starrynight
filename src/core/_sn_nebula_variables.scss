// ████████████████████████████████████████████████████████████████████████████████
// NEBULA FIELD VARIABLES – Phase 1 (Nebula Variable Architecture)
// ████████████████████████████████████████████████████████████████████████████████
//
// NOTE:
//  • This file exposes a nebula-specific façade while *aliasing* existing depth-layer
//    and gradient tokens. No new unique values are introduced – we simply provide
//    clearer, theme-agnostic handles for designers & JS controllers (NebulaController).
//  • Aliases intentionally reference Catppuccin-aware variables, ensuring automatic
//    colour switching across Latte/Frappe/Macchiato/Mocha without additional work.
//  • If depth-layer variables change in the future, Nebula layers will inherit the
//    updates automatically. Keep this dependency in mind when refactoring.
//
// USAGE CONTRACT (Phase 2):
//  • JS may read/write *only* the `--sn-nebula-layer-*-opacity`, `*-blur`, and
//    `*-scale` tokens. Colours should remain theme-driven at runtime.
//  • Do **NOT** overwrite colour-rgb tokens in JS – instead, update the upstream
//    `--sn-gradient-*` variables.
//
// ============================================================================
// TODO: If future design calls for >4 nebula strata, extend the pattern below
//       and update `_sn_scroll_node_backgrounds.scss` accordingly.
// ============================================================================

:root {
  /* === Layer 0 (outer-most, subtle accent glow) === */
  --sn-nebula-layer-0-color-rgb: var(--sn-gradient-primary-rgb);
  --sn-nebula-layer-0-opacity:   var(--sn-depth-layer-0-opacity);
  --sn-nebula-layer-0-blur:      var(--sn-depth-layer-0-blur);
  --sn-nebula-layer-0-scale:     var(--sn-depth-layer-0-scale);

  /* === Layer 1 === */
  --sn-nebula-layer-1-color-rgb: var(--sn-gradient-secondary-rgb);
  --sn-nebula-layer-1-opacity:   var(--sn-depth-layer-1-opacity);
  --sn-nebula-layer-1-blur:      var(--sn-depth-layer-1-blur);
  --sn-nebula-layer-1-scale:     var(--sn-depth-layer-1-scale);

  /* === Layer 2 === */
  --sn-nebula-layer-2-color-rgb: var(--sn-gradient-accent-rgb);
  --sn-nebula-layer-2-opacity:   var(--sn-depth-layer-2-opacity);
  --sn-nebula-layer-2-blur:      var(--sn-depth-layer-2-blur);
  --sn-nebula-layer-2-scale:     var(--sn-depth-layer-2-scale);

  /* === Layer 3 (inner-most, highlight core) === */
  --sn-nebula-layer-3-color-rgb: var(--sn-oklab-processed-bright-highlight-rgb, var(--sn-gradient-primary-rgb));
  --sn-nebula-layer-3-opacity:   var(--sn-depth-layer-3-opacity);
  --sn-nebula-layer-3-blur:      var(--sn-depth-layer-3-blur);
  --sn-nebula-layer-3-scale:     var(--sn-depth-layer-3-scale);

  /* === Beat-sync multiplier (read-only here) === */
  // JS/NebulaController may adjust this in Phase 2 to pulse opacity with music.
  --sn-nebula-beat-intensity: var(--sn-beat-pulse-intensity, 1);

  /* === Global Blur Budget === */
  // Maximum blur applied to the nebula pseudo-element. NebulaController may
  // raise/lower this indirectly via `--sn-nebula-layer-3-blur` for velocity
  // effects.  Default tuned for desktop GPUs; low-end capability check will
  // disable the controller altogether.
  --sn-nebula-max-blur: 12px;

  /* === Phase 1: Nebula Gradient Smoothing Tokens === */
  --sn-nebula-noise-opacity: 0.06;           // Base opacity for fractal noise overlay (tuned for balanced contrast)
  --sn-nebula-noise-scale-y: 150%;           // Base vertical scale for noise texture
  --sn-nebula-aberration-strength: 0.4;      // Base strength for chromatic aberration
  --sn-nebula-ease-t: 0;                     // 0–1 easing factor for multi-radius stops
  --sn-nebula-blend-mode: color-dodge;        // Gentler blend mode; auto-overridden by performance guard when needed
  // End Phase 1 additions
}