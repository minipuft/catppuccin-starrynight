// ████████████████████████████████████████████████████████████████████████████████
// ADVANCED PERFORMANCE OPTIMIZATION - GPU Acceleration & Efficiency
// ████████████████████████████████████████████████████████████████████████████████

@use "../core/performance_mixins" as *;

// GPU Acceleration Hints for High-Performance Elements
.sn-gpu-accelerated {
  @include performance-hardware-acceleration;
  perspective: 1000px; // Additional 3D context for nested transforms
}

// Performance-optimized transitions
:root {
  // Standard transition **durations** (split from timing curves so JavaScript can
  // lerp-update the numeric portion via Year3000Utilities.lerpSmooth)
  --sn-transition-fast-duration: 150ms;
  --sn-transition-standard-duration: 300ms;
  --sn-transition-slow-duration: 500ms;

  // Timing curves are now referenced via the shared easing tokens which other
  // SCSS modules already consume (see _sn_root_variables.scss & _sn_gradient.scss)
  // These remain as fallbacks so nothing breaks if the variables are unset.
  --sn-transition-timing-default: var(--sn-easing-explorer, var(--sn-anim-easing-dynamic));

  // Composite transition helpers (duration + timing) for convenience.  These
  // map 1-to-1 with the previous public tokens so no downstream refactor is
  // required.  Only the **duration** portion will be mutated at runtime.
  --sn-transition-fast: var(--sn-transition-fast-duration) var(--sn-transition-timing-default);
  --sn-transition-standard: var(--sn-transition-standard-duration) var(--sn-transition-timing-default);
  --sn-transition-slow: var(--sn-transition-slow-duration) var(--sn-transition-timing-default);

  // Legacy specialized easings kept for semantics – consider consolidating into
  // _sn_root_variables.scss in a later housekeeping pass.
  --sn-ease-bounce: var(--sn-anim-easing-bounce-gentle);
  --sn-ease-smooth: var(--sn-anim-easing-dynamic);
  --sn-ease-sharp: var(--sn-anim-easing-custom-1);
}

// Apply performance optimizations to key animated elements
.main-card-card,
.main-trackList-trackListRow,
.main-actionBar-ActionBarRow,
.main-nowPlayingBar-nowPlayingBar {
  @extend .sn-gpu-accelerated !optional;
}

// Reduce motion for users who prefer it
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  // Disable complex visual effects for performance
  .sn-stars-container,
  .shootingstar {
    display: none !important;
  }

  // Disable kinetic animations (from _kinetic-animations.scss)
  .sn-bloom-active,
  .sn-refract-active,
  .sn-oscillate-active,
  .sn-harmonize-fundamental,
  .sn-harmonize-sub,
  .sn-harmonize-flow,
  .sn-temporal-echo,
  .sn-gravity-active,
  .sn-future-preview,
  .year3000-kinetic-canvas {
    animation: none !important;
  }

  // Provide static fallback styles for kinetic effects
  .sn-bloom-active {
    transform: scale(1.02);
    filter: drop-shadow(0 0 4px rgba(var(--sn-bloom-glow-color, 140,170,238), 0.3));
  }

  .sn-refract-active {
    filter: brightness(1.05);
  }
}