// ============================================================================
// HARMONIC AURA â€” Year 3000 Subtle Bloom System (Phase 3)
// ----------------------------------------------------------------------------
// Provides a light, beat-aware glow that replaces heavy drop-shadows.
// Designed to harmonise with dynamic variables injected by our JS visual
// systems (e.g. MusicSyncService sets --card-beat-intensity).
// ----------------------------------------------------------------------------

@use "../core/_mixins" as *;

// ---------- Global Tunables -------------------------------------------------
:root {
  // Base alpha for the aura in its idle state (0-1)
  --sn-harmonic-aura-alpha-base: 0.04;
  // Additional alpha contributed by the music beat (0-1)
  --sn-harmonic-aura-alpha-dynamic: calc(var(--card-beat-intensity, 0) * 0.12);
  // Base blur radius
  --sn-harmonic-aura-blur-base: 10px;
  // Extra blur on energetic passages
  --sn-harmonic-aura-blur-dynamic: calc(var(--card-beat-intensity, 0) * 6px);
}

// ---------- Mixin -----------------------------------------------------------
// Usage: @include harmonic-aura;
@mixin harmonic-aura {
  position: relative;

  // Prevent duplicate auras when mixin is included multiple times
  &::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;

    filter: drop-shadow(
      0 0 calc(
          var(--sn-harmonic-aura-blur-base) +
            var(--sn-harmonic-aura-blur-dynamic)
        )
        rgba(
          var(--sn-gradient-primary-rgb, var(--spice-rgb-accent)),
          calc(
            var(--sn-harmonic-aura-alpha-base) +
              var(--sn-harmonic-aura-alpha-dynamic)
          )
        )
    );
    transition: filter 400ms ease-out;
    z-index: -1;
  }

  &:hover::after {
    // Slightly stronger on hover but still subtle
    filter: drop-shadow(
      0 0 calc(
          (var(--sn-harmonic-aura-blur-base) * 1.4) +
            var(--sn-harmonic-aura-blur-dynamic)
        )
        rgba(
          var(--sn-gradient-primary-rgb, var(--spice-rgb-accent)),
          calc(
            (var(--sn-harmonic-aura-alpha-base) * 1.4) +
              var(--sn-harmonic-aura-alpha-dynamic)
          )
        )
    );
  }
}