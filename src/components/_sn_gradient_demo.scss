/**
 * StarryNight Gradient Alignment Demonstration
 *
 * This file demonstrates how to use the ColorFieldManager's gradient-aware
 * color system to create seamless visual continuity across container boundaries.
 *
 * The ColorFieldManager provides colors that are positioned within a global
 * gradient field, ensuring that adjacent containers have compatible colors
 * that create smooth visual transitions.
 */

@use "../core/_mixins" as *;

// =============================================================================
// ðŸŒˆ GRADIENT-AWARE COLOR SYSTEM DEMONSTRATION
// =============================================================================

/**
 * Example 1: Sidebar to Main Content Transition
 *
 * The sidebar and main content areas use colors from the same gradient field,
 * creating a natural visual flow between the two sections.
 */
.sidebar-to-main-demo {
  display: flex;
  height: 100vh;

  // Sidebar uses colors from the left side of the gradient field
  .sidebar-section {
    width: 300px;
    background: linear-gradient(
      180deg,
      rgb(var(--sn-field-color-left-top)),
      rgb(var(--sn-field-color-left-bottom))
    );

    // Text and interactive elements use harmonious field colors
    color: rgb(var(--sn-field-color-left-contrast));

    .sidebar-item {
      padding: 12px 16px;
      border-radius: 6px;
      transition: background-color 0.2s ease;

      &:hover {
        // Hover states use adjacent field colors for smooth transitions
        background-color: rgba(var(--sn-field-color-left-accent), 0.15);
      }

      &.active {
        background: linear-gradient(
          90deg,
          rgba(var(--sn-field-color-left-accent), 0.2),
          rgba(var(--sn-field-color-center-accent), 0.1)
        );
      }
    }
  }

  // Main content uses colors from the center/right of the gradient field
  .main-content {
    flex: 1;
    background: linear-gradient(
      135deg,
      rgb(var(--sn-field-color-center-top)),
      rgb(var(--sn-field-color-right-bottom))
    );

    // The transition area where sidebar meets main content
    &::before {
      content: '';
      position: absolute;
      left: 300px;
      top: 0;
      bottom: 0;
      width: 40px;
      background: linear-gradient(
        90deg,
        rgba(var(--sn-field-color-left-bottom), 0.3),
        rgba(var(--sn-field-color-center-top), 0.3),
        transparent
      );
      pointer-events: none;
    }
  }
}

/**
 * Example 2: Card Grid with Seamless Color Flow
 *
 * Cards positioned across the interface use colors from their corresponding
 * positions in the gradient field, creating a cohesive color landscape.
 */
.card-grid-demo {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 20px;
  padding: 20px;

  .gradient-aware-card {
    padding: 20px;
    border-radius: 12px;
    position: relative;
    overflow: hidden;

    // Each card gets its color based on its position in the viewport
    &[data-field-position="top-left"] {
      background: linear-gradient(
        135deg,
        rgba(var(--sn-field-color-left-top), 0.9),
        rgba(var(--sn-field-color-center-top), 0.7)
      );
      color: rgb(var(--sn-field-color-left-contrast));
    }

    &[data-field-position="top-center"] {
      background: linear-gradient(
        135deg,
        rgba(var(--sn-field-color-center-top), 0.9),
        rgba(var(--sn-field-color-right-top), 0.7)
      );
      color: rgb(var(--sn-field-color-center-contrast));
    }

    &[data-field-position="bottom-left"] {
      background: linear-gradient(
        45deg,
        rgba(var(--sn-field-color-left-bottom), 0.9),
        rgba(var(--sn-field-color-center-bottom), 0.7)
      );
      color: rgb(var(--sn-field-color-left-contrast));
    }

    &[data-field-position="bottom-right"] {
      background: linear-gradient(
        45deg,
        rgba(var(--sn-field-color-center-bottom), 0.9),
        rgba(var(--sn-field-color-right-bottom), 0.7)
      );
      color: rgb(var(--sn-field-color-right-contrast));
    }

    // Glassmorphism effect using field colors
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background: linear-gradient(
        180deg,
        rgba(var(--sn-field-color-highlight), 0.1),
        transparent 50%,
        rgba(var(--sn-field-color-shadow), 0.05)
      );
      border-radius: inherit;
    }

    // Interactive states that maintain color harmony
    &:hover {
      transform: translateY(-2px);
      box-shadow:
        0 8px 25px rgba(var(--sn-field-color-shadow), 0.15),
        0 0 0 1px rgba(var(--sn-field-color-highlight), 0.2);
    }
  }
}

/**
 * Example 3: Navigation Bar with Contextual Color Adaptation
 *
 * The navigation adapts its colors based on the content beneath it,
 * using the gradient field to maintain visual coherence.
 */
.contextual-navbar-demo {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  padding: 16px 24px;

  // Backdrop with gradient field awareness
  background: linear-gradient(
    90deg,
    rgba(var(--sn-field-color-left-top), 0.95),
    rgba(var(--sn-field-color-center-top), 0.95),
    rgba(var(--sn-field-color-right-top), 0.95)
  );

  backdrop-filter: blur(12px);
  border-bottom: 1px solid rgba(var(--sn-field-color-highlight), 0.2);

  .nav-item {
    display: inline-block;
    padding: 8px 16px;
    margin: 0 4px;
    border-radius: 8px;
    color: rgb(var(--sn-field-color-center-contrast));
    text-decoration: none;
    transition: all 0.2s ease;

    &:hover {
      background: rgba(var(--sn-field-color-center-accent), 0.15);
      color: rgb(var(--sn-field-color-highlight));
    }

    &.active {
      background: linear-gradient(
        135deg,
        rgba(var(--sn-field-color-center-accent), 0.2),
        rgba(var(--sn-field-color-right-accent), 0.1)
      );
      color: rgb(var(--sn-field-color-highlight));
    }
  }
}

/**
 * Example 4: Modal/Dialog with Position-Aware Backdrop
 *
 * Modals and dialogs use the gradient field to create backdrops that
 * harmonize with the content they're overlaying.
 */
.modal-demo {
  position: fixed;
  inset: 0;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;

  // Backdrop uses the full gradient field for immersive effect
  .modal-backdrop {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(var(--sn-field-color-left-top), 0.4),
      rgba(var(--sn-field-color-center-top), 0.3) 25%,
      rgba(var(--sn-field-color-right-bottom), 0.3) 75%,
      rgba(var(--sn-field-color-left-bottom), 0.4)
    );
    backdrop-filter: blur(8px);
  }

  .modal-content {
    position: relative;
    max-width: 600px;
    max-height: 80vh;
    padding: 32px;
    border-radius: 16px;

    // Modal uses center field colors for optimal contrast
    background: linear-gradient(
      135deg,
      rgba(var(--sn-field-color-center-top), 0.95),
      rgba(var(--sn-field-color-center-bottom), 0.95)
    );

    color: rgb(var(--sn-field-color-center-contrast));
    border: 1px solid rgba(var(--sn-field-color-highlight), 0.3);
    box-shadow:
      0 20px 40px rgba(var(--sn-field-color-shadow), 0.2),
      0 0 0 1px rgba(var(--sn-field-color-highlight), 0.1);
  }
}

// =============================================================================
// ðŸŽ¨ UTILITY CLASSES FOR GRADIENT FIELD INTEGRATION
// =============================================================================

/**
 * Utility classes that apply gradient field colors based on position
 */
.sn-field-bg {
  &--top-left { background: linear-gradient(135deg, rgba(var(--sn-field-color-left-top), 0.8), rgba(var(--sn-field-color-center-top), 0.6)); }
  &--top-right { background: linear-gradient(225deg, rgba(var(--sn-field-color-right-top), 0.8), rgba(var(--sn-field-color-center-top), 0.6)); }
  &--bottom-left { background: linear-gradient(45deg, rgba(var(--sn-field-color-left-bottom), 0.8), rgba(var(--sn-field-color-center-bottom), 0.6)); }
  &--bottom-right { background: linear-gradient(315deg, rgba(var(--sn-field-color-right-bottom), 0.8), rgba(var(--sn-field-color-center-bottom), 0.6)); }
  &--center { background: linear-gradient(135deg, rgba(var(--sn-field-color-center-top), 0.8), rgba(var(--sn-field-color-center-bottom), 0.6)); }
}

.sn-field-text {
  &--left { color: rgb(var(--sn-field-color-left-contrast)); }
  &--center { color: rgb(var(--sn-field-color-center-contrast)); }
  &--right { color: rgb(var(--sn-field-color-right-contrast)); }
  &--highlight { color: rgb(var(--sn-field-color-highlight)); }
}

.sn-field-border {
  &--subtle { border: 1px solid rgba(var(--sn-field-color-highlight), 0.2); }
  &--visible { border: 1px solid rgba(var(--sn-field-color-highlight), 0.4); }
  &--strong { border: 2px solid rgba(var(--sn-field-color-highlight), 0.6); }
}

// =============================================================================
// ðŸŒŠ RESPONSIVE GRADIENT FIELD ADJUSTMENTS
// =============================================================================

/**
 * Media queries that adjust gradient field intensity based on viewport size
 */
@media (max-width: 768px) {
  // Reduce gradient complexity on smaller screens
  :root {
    --sn-field-gradient-complexity: 0.7;
  }
}

@media (prefers-reduced-motion: reduce) {
  // Simplify gradients for accessibility
  .gradient-aware-card,
  .modal-content,
  .sidebar-section {
    background: rgba(var(--sn-field-color-center-top), 0.8) !important;
  }
}

// =============================================================================
// ðŸ“± INTEGRATION GUIDELINES
// =============================================================================

/**
 * To use this gradient-aware color system in your components:
 *
 * 1. Add data-field-position attributes to your elements based on their
 *    position in the viewport (top-left, top-center, etc.)
 *
 * 2. Use the --sn-field-color-* variables instead of fixed colors
 *
 * 3. The ColorFieldManager will automatically update these variables
 *    based on the current album artwork and Catppuccin palette
 *
 * 4. Colors are designed to be compatible across adjacent positions,
 *    ensuring smooth visual transitions
 *
 * Example HTML:
 * <div class="my-component" data-field-position="top-left">
 *   <div class="sn-field-bg--top-left sn-field-text--left">
 *     Content that automatically adapts to the gradient field
 *   </div>
 * </div>
 */
