// =============================================================================
// STARRYNIGHT ENHANCED CARDS SYSTEM - Dynamic Interactive Elements
// PHASE 2 ENHANCEMENT: Visual Effects System Integration
// Advanced card interactions with visual effects, smooth transitions, and dynamic intelligence
// Now enhanced with 3D visual node capabilities
// =============================================================================

@use "../core/_mixins" as *;
@use "../core/_design_tokens" as *;
@use "../core/_performance_mixins" as *;
@use "./_sn_card_base";
@use "../features/animations/fluid_morphing" as *; // Phase 8: Year3000 organic effects
// Note: perceptual-blending archived in Phase 10 Week 4 (orphaned file)
// Note: _kinetic-animations removed - animations integrated into _sn_advanced_visual_effects.scss

// ============================================================================
// HARMONIC AURA — Year 3000 Subtle Bloom System (Phase 3)
// ----------------------------------------------------------------------------
// Consolidated from _sn_visual_accents.scss (Phase 8.3)
// Provides light, beat-aware glow that replaces heavy drop-shadows.
// Designed to harmonize with dynamic variables injected by JS visual systems.
// ----------------------------------------------------------------------------

@mixin harmonic-aura {
  position: relative;

  // Prevent duplicate auras when mixin is included multiple times
  &::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;

    filter: drop-shadow(
      0 0 calc(
          var(--sn-harmonic-aura-blur-base) +
            var(--sn-harmonic-aura-blur-dynamic)
        )
        rgba(
          var(--sn-accent-rgb, var(--spice-rgb-accent)),
          calc(
            var(--sn-harmonic-aura-alpha-base) +
              var(--sn-harmonic-aura-alpha-dynamic)
          )
        )
    );
    transition: filter 400ms ease-out;
    z-index: -1;
  }

  &:hover::after {
    // Slightly stronger on hover but still subtle
    filter: drop-shadow(
      0 0 calc(
          (var(--sn-harmonic-aura-blur-base) * 1.4) +
            var(--sn-harmonic-aura-blur-dynamic)
        )
        rgba(
          var(--sn-accent-rgb, var(--spice-rgb-accent)),
          calc(
            (var(--sn-harmonic-aura-alpha-base) * 1.4) +
              var(--sn-harmonic-aura-alpha-dynamic)
          )
        )
    );
  }
}

// StarryNight Enhanced Cards System Variables
:root {
  // === Harmonic Aura Variables (Phase 3 - Consolidated from _sn_visual_accents) ===
  --sn-harmonic-aura-alpha-base: 0.04;
  --sn-harmonic-aura-alpha-dynamic: calc(var(--card-beat-intensity, 0) * 0.12);
  --sn-harmonic-aura-blur-base: 10px;
  --sn-harmonic-aura-blur-dynamic: calc(var(--card-beat-intensity, 0) * 6px);


  // === Visual Effects Foundation ===
  --card-visual-depth: 16px;
  --card-effect-field-radius: 20px;
  --card-connection-strength: 0.8;
  --card-expansion-factor: 1.08;
  --card-smooth-fluidity: var(--sn-anim-easing-emergence);

  // === Dynamic Dimension System ===
  --card-dynamic-corners: 16px;
  --card-depth-near: translateZ(12px);
  --card-depth-mid: translateZ(6px);
  --card-depth-far: translateZ(0px);
  --card-perspective-field: 1200px;

  // === Visual Effect Interaction Variables ===
  --card-effect-pulse-rate: 3s;
  --card-effect-threshold: 0.25s;
  --card-effect-dissipation: 0.8s;
  --card-harmonic-resonance: 1;

  // === Adaptive Visual Effects 2.0 – StarryNight System ==================
  // Base alpha kept very light; value tuned for HDR displays.
  --card-effect-base-alpha: 0.015;

  // Dynamic scale factors
  --card-effect-beat-factor: var(--sn-visual-beat-intensity, 0); // set by VisualEffectsController
  --card-effect-context-factor: var(--motion-intelligence-level);

  // Final effect alpha – capped to 0.12 for accessibility.
  --card-effect-alpha: clamp(
    0.015,
    calc(
      (var(--card-effect-base-alpha) * var(--card-effect-context-factor)) +
      (var(--card-effect-beat-factor) * 0.05)
    ),
    0.12
  );

  // === Contextual Intelligence Core ===
  --motion-intelligence-level: 1; // Adaptive to user context
  --focus-mode-dampening: 0.25; // Reduces motion in focus contexts
  --discovery-mode-amplification: 1.4; // Enhances in exploration
  --music-effect-modulation: 1; // Responds to music dynamics

  // === Advanced Color Harmony ===
  --card-color-primary: rgba(
    var(--sn-accent-rgb, var(--sn-accent-rgb, 202,158,230)),
    0.8
  );
  --card-color-secondary: rgba(
    var(--sn-accent-rgb, var(--spice-rgb-surface0, 186,187,241)),
    0.6
  );
  --card-color-accent: rgba(
    var(--sn-accent-rgb, var(--sn-accent-rgb, 140,170,238)),
    0.7
  );
  --card-color-ambient: rgba(
    var(--spice-rgb-surface0, 65,69,89),
    0.4
  );

  // === STARRYNIGHT BEATSYNC VISUAL EFFECTS INTEGRATION ===
  // Cards pulse and animate with the rhythm of the music
  --card-beat-pulse-multiplier: 1; // Amplifier for beat responses
  --card-rhythm-animation: 1; // Scale removed to eliminate bubble effects
  --card-beat-intensity: var(
    --sn-music-beat-pulse-intensity,
    0
  ); // Direct beat connection
  --card-rhythm-phase: var(--sn-music-rhythm-phase, 0); // Rhythm oscillation

  // TODO: Extend existing visual effects card system with 3D visual positioning
  // === PHASE 2: VISUAL EFFECTS INTEGRATION ===
  // Cards can exist as visual nodes while preserving existing functionality
  --card-visual-mode: 0; // 0 = normal, 1 = visual node
  --card-visual-connection: var(--visual-connection-strength, 0.7);

  // === Intelligent Motion Calculation - ENHANCED WITH RHYTHM ===
  --calculated-lift: calc(
    var(--card-visual-depth) * var(--motion-intelligence-level) *
      var(--card-harmonic-resonance) *
      (
        1 +
          (var(--card-beat-intensity) * var(--card-beat-pulse-multiplier) * 0.3)
      )
  );
  --calculated-scale: calc(
    1 +
      (0.05 * var(--motion-intelligence-level) * var(--card-harmonic-resonance)) +
      (var(--card-beat-intensity) * var(--card-beat-pulse-multiplier) * 0.02)
  );
  --calculated-transition: calc(
    var(--card-effect-dissipation) / var(--motion-intelligence-level)
  );

  // === Lightweight Enhancement Foundation ===
  --card-border-radius: 12px;
  --card-color-intensity: 0.08;
  --card-shadow-intensity: 0.12;
  --card-transition-speed: 0.3s;

  // === Search-Compatible Color System ===
  // (Color definitions use existing primary/secondary/accent from above)
  --card-shadow-base: #{oklab-color('shadow', 0.12)};
}

// =============================================================================
// CONTEXTUAL INTELLIGENCE ZONES - StarryNight Adaptive Interface System
// =============================================================================

// Discovery Mode: Full expressiveness for exploration and browsing
.main-entityHeader-container,
section[data-testid="component-shelf"],  // Stable attribute (preferred)
.main-shelf-shelf,                       // Transitional class
.main-gridContainer-gridContainer:not([data-context="search"]),
[data-context="discovery"] {
  --motion-intelligence-level: var(--discovery-mode-amplification);
  --card-harmonic-resonance: 1.2;
  --card-effect-pulse-rate: calc(var(--card-effect-pulse-rate) * 0.7);
}

// =============================================================================
// SHELF GRID ATMOSPHERIC GLOW - Year3000 Design System
// Multi-layer flowing gradients with opacity-based transitions
// Targets: Shelf grids (uses centralized shelf-grid mixin for stable selectors)
// Integrates with --sn-visual-effects-* variables for cosmic atmosphere
// =============================================================================

@include shelf-grid {
  position: relative;

  // Strengthened visibility (removed field-intensity division for direct opacity control)
  --shelf-glow-base-opacity: 0.6; // 87.5% stronger than previous 0.32 (0.8 × 0.4)
  --shelf-glow-hover-opacity: 0.85; // Clear hover feedback
  --shelf-glow-transition: calc(
    var(--sn-visual-effects-transition-duration, 0.6s) * 1.3
  );

  // Atmospheric glow with enhanced multi-layer gradients + edge definition
  &::before {
    content: "";
    position: absolute;
    inset: -8px;
    border-radius: 16px;

    // Strengthened multi-layer gradients (525% stronger - removed field-intensity division)
    // Perimeter edge glow + 4 corner/edge gradients for clear definition
    background: radial-gradient(
        ellipse at 50% 0%,
        rgba(var(--sn-accent-rgb), 0.15) 0%,
        transparent 40%
      ),
      radial-gradient(
        circle at 0% 0%,
        rgba(var(--sn-accent-rgb), 0.12) 0%,
        transparent 60%
      ),
      radial-gradient(
        circle at 100% 100%,
        rgba(var(--sn-accent-rgb), 0.10) 0%,
        transparent 60%
      ),
      radial-gradient(
        circle at 50% 0%,
        rgba(var(--sn-accent-rgb), 0.15) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle at 0% 50%,
        rgba(var(--sn-accent-rgb), 0.12) 0%,
        transparent 70%
      );

    background-size: 200% 200%;
    border: 1px solid rgba(var(--sn-accent-rgb), 0.15);
    pointer-events: none;
    z-index: 0;

    // Always-running animations for continuous luma/color shifts during scroll
    // Opacity animation creates visible brightness changes (0.3 → 0.8 = 167% variance)
    animation: shelf-glow-flow 24s ease-in-out infinite,
      shelf-border-pulse 8s ease-in-out infinite;
  }

  // Flowing gradient glow on hover (opacity-based, Year3000 standard)
  &:hover {
    &::before {
      // Speed up animations on hover for responsive feedback
      animation: shelf-glow-flow 12s ease-in-out infinite,
        shelf-border-pulse 4s ease-in-out infinite;
    }
  }

  // Ensure cards are above the glow
  > * {
    position: relative;
    z-index: 1;
  }
}

// =============================================================================
// SHELF GLOW ANIMATIONS - Custom keyframes for 5-layer gradient system
// =============================================================================

@keyframes shelf-glow-flow {
  0% {
    background-position: 0% 0%, 0% 0%, 100% 100%, 50% 0%, 0% 50%;
    opacity: 0.3; // Dimmer phase
  }
  25% {
    background-position: 20% 80%, 20% 80%, 80% 20%, 70% 30%, 30% 70%;
    opacity: 0.8; // Brighter phase - clear luma shift
  }
  50% {
    background-position: 50% 50%, 40% 60%, 60% 40%, 90% 60%, 10% 40%;
    opacity: 0.4; // Medium-dim phase
  }
  75% {
    background-position: 80% 20%, 60% 40%, 40% 60%, 30% 90%, 70% 10%;
    opacity: 0.7; // Medium-bright phase
  }
  100% {
    background-position: 100% 0%, 0% 0%, 100% 100%, 50% 0%, 0% 50%;
    opacity: 0.3; // Return to dimmer phase
  }
}

@keyframes shelf-border-pulse {
  0%,
  100% {
    border-color: rgba(var(--sn-accent-rgb), 0.15);
  }
  50% {
    border-color: rgba(var(--sn-accent-rgb), 0.35);
  }
}

// Navigation Mode: Navigation contexts with balanced interaction
.Root__nav-bar,
.main-yourLibrary-yourLibrary,
[data-context="navigation"] {
  --motion-intelligence-level: 0.8;
  --card-harmonic-resonance: 0.9;
}

// Music Response Mode: Cards react to playing state
.Root__now-playing-bar:has(.main-trackList-playingIcon),
[data-context="playing"] {
  --music-effect-modulation: 1.3;
  --card-effect-pulse-rate: calc(var(--card-effect-pulse-rate) * 0.6);
  --card-harmonic-resonance: calc(var(--card-harmonic-resonance) * 1.2);
}

// =============================================================================
// STARRYNIGHT ENHANCED CARDS - Dynamic Interactive Elements
// Uses centralized card-container-universal mixin (Encore migration)
// =============================================================================

@include card-container-universal {
  position: relative;
  perspective: var(--card-perspective-field);
  transform-style: preserve-3d;

  // Attach lightweight, beat-aware glow
  @include harmonic-aura;
  
  // Add perceptual blending for enhanced visual effects
  // OKLAB perceptual gradient (inline CSS)
  background: linear-gradient(135deg, 
    rgba(var(--sn-oklab-primary-rgb), 0.6) 0%,
    rgba(var(--sn-oklab-accent-rgb), 0.4) 100%);
  
  // Enhanced visual blending for special contexts
  &[data-visual-enhanced] {
    // OKLAB visual blending (inline CSS)
    background-blend-mode: multiply;
    mix-blend-mode: screen;
  }

  // === STARRYNIGHT RHYTHMIC FOUNDATION ===
  // Kinetic Verb: HARMONIZE - Cards respond to music through color/glow (rotation removed for stability)
  transform: translateZ(0);
  
  // Animation removed - focusing on key music elements instead

  // TODO: Add visual node styling that builds on existing card visual effects
  // === PHASE 2: VISUAL NODE ENHANCEMENT ===
  // Cards in visual mode get enhanced 3D presence
  .main-gridContainer-gridContainer:has([data-testid*="visual"]) &,
  .main-view-container:has([data-testid*="artist"]) & {
    --card-visual-mode: 1;

    // Enhanced depth for visual nodes (rotation removed for stability)
    transform: translateZ(0) var(--card-visual-depth);
  }

  // === Visual Effects Foundation - ENHANCED WITH RHYTHM ===
  border-radius: var(--card-dynamic-corners);
  background: linear-gradient(
    calc(135deg + (var(--card-rhythm-phase) * 2deg)),
    // Kinetic Verb: HARMONIZE
    rgba(
        var(--sn-accent-rgb, var(--spice-rgb-accent)),
        calc(0.05 + (var(--card-beat-intensity) * 0.03))
      )
      0%,
    rgba(
        var(--sn-accent-rgb, var(--spice-rgb-surface0)),
        calc(0.08 + (var(--card-beat-intensity) * 0.04))
      )
      50%,
    rgba(
        var(--sn-accent-rgb, var(--spice-rgb-surface1)),
        calc(0.03 + (var(--card-beat-intensity) * 0.02))
      )
      100%
  );

  // Advanced glassmorphism with dynamic blur
  // Note: backdrop-filter can interfere with child image rendering in some GPU contexts
  // Using @supports to provide fallback for better compatibility
  @supports (backdrop-filter: blur(1px)) {
    backdrop-filter: blur(20px) saturate(1.3);
  }

  // Fallback for browsers without backdrop-filter support
  @supports not (backdrop-filter: blur(1px)) {
    background: rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.15);
  }

  border: 1px solid
    rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.15);

  // Softened dynamic shadow to reduce visual effects while preserving beat dynamics
  box-shadow: 0 4px calc(16px + (6px * var(--card-beat-intensity)))
      oklab-color('accent', calc(0.05 + (var(--card-beat-intensity) * 0.05))),
    0 8px calc(24px + (8px * var(--card-beat-intensity)))
      oklab-color('shadow', calc(0.08 + (var(--card-beat-intensity) * 0.07))),
    inset 0 1px 0
      oklab-color('highlight', calc(0.07 + (var(--card-beat-intensity) * 0.04)));

  // === Visual Effect Base State ===
  transition: transform var(--calculated-transition)
      var(--card-smooth-fluidity),
    box-shadow var(--calculated-transition) ease,
    background var(--calculated-transition) ease,
    border-color var(--calculated-transition) ease,
    backdrop-filter var(--calculated-transition) ease;

  // Hardware acceleration and performance
  @include performance-hardware-acceleration;

  // === Dynamic Visual Effect Field (Invisible Base Layer) ===
  &::before {
    content: "";
    position: absolute;
    top: calc(-1 * var(--card-effect-field-radius));
    left: calc(-1 * var(--card-effect-field-radius));
    right: calc(-1 * var(--card-effect-field-radius));
    bottom: calc(-1 * var(--card-effect-field-radius));
    z-index: -2;

    background: radial-gradient(
      ellipse 120% 100% at center,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0) 0%,
      rgba(
        var(--sn-accent-rgb, var(--spice-rgb-accent)),
        var(--card-effect-alpha)
      ) 40%,
      transparent 70%
    );

    border-radius: calc(var(--card-dynamic-corners) * 2);
    opacity: 0;
    transform: translateZ(0);
    transition: all var(--calculated-transition) var(--card-smooth-fluidity);
  }

  // === Visual Effects Interaction State - STARRYNIGHT ENHANCED ===
  &:hover {
    // Kinetic Verb: EXPAND - Contextual lift calculation with rhythm + 3D depth
    transform: var(--card-depth-near)
      translateZ(12px);

    // Enhanced visual effects background
    background: linear-gradient(
      135deg,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.12) 0%,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-surface0)), 0.15)
        50%,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-surface1)), 0.08) 100%
    );

    // Advanced glassmorphism enhancement
    backdrop-filter: blur(25px) saturate(1.5) contrast(1.1);
    border-color: rgba(
      var(--sn-accent-rgb, var(--spice-rgb-accent)),
      0.4
    );

    // Sophisticated shadow with visual effects + 3D depth perception
    box-shadow: 0 var(--calculated-lift) calc(var(--calculated-lift) * 2)
        rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.15),
      0 calc(var(--calculated-lift) * 2) calc(var(--calculated-lift) * 4)
        #{oklab-color('shadow', 0.2)},
      0 8px 24px #{oklab-color('shadow', 0.2)},
      0 0 calc(var(--card-effect-field-radius) * 2)
        rgba(
          var(--sn-accent-rgb, var(--spice-rgb-accent)),
          var(--card-effect-alpha)
        ),
      inset 0 1px 0 #{oklab-color('highlight', 0.2)};

    // Activate visual effect field
    &::before {
      opacity: 1;
      transform: translateZ(0);
      -webkit-transform: translateZ(0);
      -moz-transform: translateZ(0);
      -ms-transform: translateZ(0);
      -o-transform: translateZ(0);
    }

    // Visual Trail
    &::after {
      content: "";
      @extend .sn-visual-trail !optional;
      --sn-kinetic-intensity: calc(var(--motion-intelligence-level,1) * 0.18);
    }
  }

  // === Focus State Enhancement ===
  &:focus-visible {
    outline: none;

    // Visual connection ring
    &::after {
      content: "";
      position: absolute;
      top: -3px;
      left: -3px;
      right: -3px;
      bottom: -3px;
      border: 2px solid var(--card-color-primary);
      border-radius: calc(var(--card-dynamic-corners) + 3px);
      box-shadow: 0 0 12px
        rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4);
      animation: visual-focus-pulse var(--card-effect-pulse-rate) ease-in-out
        infinite;
    }
  }

  // === Active State with Dynamic Response ===
  &:active {
    transform: var(--card-depth-mid);
    transition: transform 0.1s ease;

    // Slight shadow reduction for feedback
    box-shadow: 0 2px 8px var(--card-shadow-base);

    &::after {
      content: "";
      @extend .sn-visual-trail !optional;
      --sn-kinetic-intensity: calc(var(--motion-intelligence-level,1) * 0.24);
    }
  }
}

// =============================================================================
// PHASE 8: YEAR3000 FLUID MORPHING INTEGRATION
// Organic breathing animations that respond to music
// Uses centralized card-container-universal mixin (Encore migration)
// =============================================================================

@include card-container-universal {
  // Apply subtle fluid morphing for organic Year3000 aesthetic
  // Lower intensity (0.2) to complement existing visual effects
  @include fluid-morphing(0.2);

  // Artist cards get enhanced fluid morphing
  &[data-testid*="artist"] {
    @include fluid-morphing(0.3);
  }
}

// =============================================================================
// ENHANCED CARD HEADER - Album Art Visual Effect Source
// Uses centralized card-image-container mixin (Encore migration)
// =============================================================================

@include card-image-container {
  position: relative;
  aspect-ratio: 1 / 1;
  width: 100%;
  overflow: hidden;
  border-radius: var(--card-dynamic-corners) var(--card-dynamic-corners) 0 0;
  transform: var(--card-depth-mid);

  // === Visual Effect Source Ring (Around Album Art) ===
  &::before {
    content: "";
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    z-index: -1;

    background: conic-gradient(
      from 0deg,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4) 0deg,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-surface1)), 0.2) 120deg,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-surface0)), 0.4)
        240deg,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4) 360deg
    );

    border-radius: calc(var(--card-dynamic-corners) + 4px);
    opacity: 0;
    animation: visual-source-rotation calc(var(--card-effect-pulse-rate) * 2)
      linear infinite;
    transition: opacity var(--calculated-transition) ease;
  }

  // === Enhanced Image with Contextual Scaling ===
  .main-image-image,
  .main-cardImage-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform var(--calculated-transition)
        var(--card-smooth-fluidity),
      filter var(--calculated-transition) ease;
    filter: contrast(1) saturate(1);

    &:hover {
      transform: translateZ(0);
      filter: contrast(1.05) saturate(1.1);
    }
  }

  // Show visual effect ring on card hover
  .main-card-card:hover &,
  .main-card-cardContainer:hover & {
    &::before {
      opacity: 1;
    }
  }

  // === Enhanced Metadata Overlay ===
  .main-card-cardMetadata {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 16px;
    background: linear-gradient(
      transparent 0%,
      #{oklab-color('shadow', 0.7)} 40%,
      #{oklab-color('shadow', 0.85)} 100%
    );
    backdrop-filter: blur(8px);

    // Enhanced text legibility with dynamic colors
    .main-cardHeader-text,
    .main-type-bass {
      text-shadow: 0 1px 3px
          #{oklab-color('shadow', 0.8)},
        0 0 8px
          rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.2);
      color: rgba(var(--sn-musical-harmony-contrast-rgb), 0.95);
      transition: all 300ms ease;

      &:hover {
        color: rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 1);
        text-shadow: 0 1px 3px
            #{oklab-color('shadow', 0.8)},
          0 0 12px
            rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4);
      }
    }
  }
}

// =============================================================================
// ADVANCED GRID SYSTEM - Dynamic Flow Layout
// =============================================================================

.main-gridContainer-gridContainer {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  gap: calc(24px * var(--motion-intelligence-level, 1));
  padding: 24px;

  // Grid flow enhancement for Year 3000
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
      ellipse 100% 50% at center top,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.02) 0%,
      transparent 60%
    );
    pointer-events: none;
    z-index: -1;
  }

  // Enhanced responsive behavior
  @media (max-width: 768px) {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 16px;
    padding: 16px;
  }

  @media (min-width: 1200px) {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 32px;
  }

  @media (min-width: 1600px) {
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 40px;
  }
}

// =============================================================================
// INTERACTIVE ELEMENTS - Visual Effect System
// =============================================================================

// Enhanced play button with visual effects
.main-card-PlayButtonContainer,
.main-playButton-PlayButton {
  position: absolute;
  bottom: 16px;
  right: 16px;
  width: 48px;
  height: 48px;
  border-radius: 50%;

  // Enhanced visual design with dynamic effects
  background: radial-gradient(
    circle,
    rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.95) 0%,
    rgba(var(--sn-accent-rgb, var(--spice-rgb-surface1)), 0.85) 100%
  );

  box-shadow: 0 4px 16px
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.3),
    0 8px 32px #{oklab-color('shadow', 0.2)},
    inset 0 1px 0 #{oklab-color('highlight', 0.2)};

  backdrop-filter: blur(12px);
  border: 1px solid
    rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.3);

  // Initial state - contextual visibility
  opacity: calc(0.2 * var(--motion-intelligence-level, 1));
  transform: translateY(calc(8px * var(--motion-intelligence-level, 1)))
    scale(calc(0.8 + 0.2 * var(--motion-intelligence-level, 1)));

  transition: all var(--calculated-transition) var(--card-smooth-fluidity);

  // === Visual Effect Animation ===
  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: radial-gradient(
      circle,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.3) 0%,
      transparent 70%
    );
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 600ms var(--card-smooth-fluidity);
    z-index: -1;
    opacity: 0;
  }

  // Show on parent hover with contextual animation
  .main-card-card:hover &,
  .main-card-cardContainer:hover & {
    opacity: 1;
    transform: translateY(0);
    transition-delay: calc(
      var(--card-effect-threshold) / var(--motion-intelligence-level, 1)
    );
  }

  // === Enhanced Button Hover with Visual Effects ===
  &:hover {
    transform: translateZ(0);
    background: radial-gradient(
      circle,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 1) 0%,
      rgba(var(--sn-accent-rgb, var(--spice-rgb-surface1)), 0.95) 100%
    );

    box-shadow: 0 6px 24px
        rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4),
      0 12px 48px #{oklab-color('shadow', 0.3)},
      0 0 16px
        rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.2);

    // Activate visual effect
    &::before {
      width: 60px;
      height: 60px;
      opacity: 1;
    }
  }

  // === Active State with Dynamic Response ===
  &:active {
    transform: translateZ(0);
    transition: transform 0.1s ease;
  }
}

// =============================================================================
// ADVANCED ANIMATIONS - Dynamic Visual Effect System
// =============================================================================

@keyframes visual-focus-pulse {
  0%,
  100% {
    box-shadow: 0 0 12px
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4);
    transform: translateZ(0);
  }
  50% {
    box-shadow: 0 0 20px
      rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.6);
    transform: translateZ(0);
  }
}

@keyframes visual-source-rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// =============================================================================
// ACCESSIBILITY & PERFORMANCE OPTIMIZATION
// =============================================================================

// Reduced motion: Switch to focus-mode behavior
@media (prefers-reduced-motion: reduce) {
  :root {
    --motion-intelligence-level: 0.1;
    --card-effect-pulse-rate: 0.01ms;
  }

  @include card-container-universal {
    transition: opacity 200ms ease, background-color 200ms ease,
      border-color 200ms ease;

    &:hover {
      transform: none !important;
    }

    &::before,
    &::after {
      animation: none !important;
    }
  }

  .main-card-PlayButtonContainer {
    transition: opacity 200ms ease, background-color 200ms ease,
      border-color 200ms ease;

    &:hover {
      transform: none !important;
    }

    &::before,
    &::after {
      animation: none !important;
    }
  }
}

// Mobile optimization: Adapt intelligence level
@media (max-width: 768px) {
  :root {
    --motion-intelligence-level: 0.6;
    --card-effect-pulse-rate: calc(var(--card-effect-pulse-rate) * 1.5);
  }

  // Always show play buttons on mobile
  .main-card-PlayButtonContainer {
    opacity: 0.8 !important;
    transform: none !important;
  }
}

// High contrast: Enhanced visibility (Encore migration)
@media (prefers-contrast: high) {
  @include card-container-universal {
    border-width: 2px;
    box-shadow: 0 4px 24px
        #{oklab-color('highlight', 0.1)},
      0 8px 32px #{oklab-color('shadow', 0.4)};

    &:hover {
      border-color: #{oklab-color('highlight', 0.8)};
    }
  }
}

// Battery optimization: Reduce activity (Encore migration)
@media (prefers-reduced-data: reduce) {
  :root {
    --motion-intelligence-level: 0.3;
    --card-effect-pulse-rate: calc(var(--card-effect-pulse-rate) * 3);
  }

  @include card-container-universal {
    &::before,
    &::after {
      display: none;
    }
  }
}

// =============================================================================
// ADVANCED NON-SEARCH CARD SYSTEM (Phase Card Consolidation)
// Music-responsive animations, particle effects, and multi-state shadows
// Applies only to cards outside search pages for enhanced visual experience
// =============================================================================

// === CARD ANIMATION VARIABLES ===
:root {
  // Animation Intensity & Timing
  --sn-card-animation-intensity: 0.6; // Controls animation strength (0-1)
  --sn-card-breath-scale: 1; // Breathing animation scale multiplier
  --sn-card-animation-phase: 0; // Animation phase offset (0-1)
  --sn-card-shadow-strength: 1; // Shadow intensity multiplier
  --sn-card-glow-level: 0; // Glow/emergence effect level (0-1)

  // Geometry & Sizing
  --sn-card-border-radius-enhanced: 16px; // Enhanced card border radius
  --sn-card-border-width: 1px; // Card border width
  --sn-card-background-blur: 12px; // Background blur amount
  --sn-card-particle-size: 2px; // Animated particle size

  // Color Palette (Harmonic - OKLAB compatible)
  --sn-card-base-luminance: var(--sn-oklab-processed-dynamic-base-luminance, 0.4);
  --sn-card-harmonic-base-hue: 270deg;
  --sn-card-harmonic-primary: hsl(var(--sn-card-harmonic-base-hue), 70%, 60%);
  --sn-card-harmonic-analogous-1: hsl(calc(var(--sn-card-harmonic-base-hue) + 30deg), 65%, 55%);
  --sn-card-harmonic-analogous-2: hsl(calc(var(--sn-card-harmonic-base-hue) - 30deg), 65%, 55%);
  --sn-card-harmonic-complementary: hsl(calc(var(--sn-card-harmonic-base-hue) + 180deg), 60%, 50%);
  --sn-card-harmonic-triadic-1: hsl(calc(var(--sn-card-harmonic-base-hue) + 120deg), 60%, 50%);
  --sn-card-harmonic-triadic-2: hsl(calc(var(--sn-card-harmonic-base-hue) + 240deg), 60%, 50%);

  // RGB Fallbacks (Design System Compliance)
  --sn-card-harmonic-primary-rgb: var(--sn-accent-rgb);
  --sn-card-harmonic-analogous-1-rgb: var(--sn-accent-rgb);
  --sn-card-harmonic-analogous-2-rgb: var(--sn-accent-rgb);
  --sn-card-harmonic-complementary-rgb: var(--sn-accent-rgb);
  --sn-card-harmonic-triadic-1-rgb: var(--sn-accent-rgb);
  --sn-card-harmonic-triadic-2-rgb: var(--sn-accent-rgb);

  // Animation Durations
  --sn-card-breath-duration: 4s; // Breathing animation duration
  --sn-card-shadow-transition: 0.8s; // Shadow transition duration
  --sn-card-color-cycle-duration: 2s; // Color cycling duration
  --sn-card-particle-orbit-duration: 12s; // Particle orbit duration
}

// === CARD ANIMATIONS ===

// Breathing animation - brightness pulsing with subtle scale
@keyframes card-breath-animation {
  0%, 100% {
    transform: translateZ(0);
    filter: brightness(0.95);
  }
  50% {
    transform: translateZ(0);
    filter: brightness(1.05);
  }
}

// Color cycling through harmonic palette
@keyframes card-color-cycle {
  0% { border-color: var(--sn-card-harmonic-primary); }
  25% { border-color: var(--sn-card-harmonic-analogous-1); }
  50% { border-color: var(--sn-card-harmonic-complementary); }
  75% { border-color: var(--sn-card-harmonic-analogous-2); }
  100% { border-color: var(--sn-card-harmonic-primary); }
}

// Particle orbital animation
@keyframes card-particle-orbit {
  0% { transform: rotate(0deg) translateX(8px) rotate(0deg); }
  100% { transform: rotate(360deg) translateX(8px) rotate(-360deg); }
}

// Background drift animation with opacity variation
@keyframes card-background-drift {
  0%, 100% {
    background-position: 0% 50%;
    opacity: calc(0.1 + var(--sn-card-animation-intensity) * 0.15);
  }
  50% {
    background-position: 100% 50%;
    opacity: calc(0.05 + var(--sn-card-animation-intensity) * 0.1);
  }
}

// === ADVANCED CARD STYLING (NON-SEARCH ONLY) ===
// Using centralized card-container-universal mixin (Encore migration)

body:not(:has(.main-searchPage-content)) {
  @include card-container-universal {
  // Foundation
  position: relative;
  border-radius: var(--sn-card-border-radius-enhanced);
  isolation: isolate;
  @include performance-hardware-acceleration;

  // Multi-State Shadow System
  --sn-card-shadow-idle:
    0 2px 8px #{oklab-color('shadow', 0.08)},
    0 4px 16px rgba(var(--sn-card-harmonic-primary-rgb), 0.04),
    inset 0 1px 0 rgba(var(--spice-rgb-surface1), 0.1);

  --sn-card-shadow-active:
    0 8px 32px #{oklab-color('shadow', 0.15)},
    0 16px 64px rgba(var(--sn-card-harmonic-primary-rgb), 0.1),
    0 4px 24px rgba(var(--sn-card-harmonic-analogous-1-rgb), 0.06),
    inset 0 1px 0 rgba(var(--spice-rgb-surface1), 0.2),
    inset 0 -1px 0 rgba(var(--sn-card-harmonic-primary-rgb), 0.05);

  --sn-card-shadow-emergence:
    0 12px 48px #{oklab-color('shadow', 0.2)},
    0 24px 96px rgba(var(--sn-card-harmonic-primary-rgb), 0.15),
    0 8px 32px rgba(var(--sn-card-harmonic-complementary-rgb), 0.08),
    0 4px 16px rgba(var(--sn-card-harmonic-triadic-1-rgb), 0.06),
    inset 0 2px 0 rgba(var(--spice-rgb-surface1), 0.25),
    inset 0 -2px 0 rgba(var(--sn-card-harmonic-primary-rgb), 0.1);

  // Base Appearance with Animated Gradient
  background:
    linear-gradient(
      135deg,
      rgba(var(--sn-card-harmonic-primary-rgb), 0.03) 0%,
      rgba(var(--sn-card-harmonic-analogous-1-rgb), 0.02) 30%,
      rgba(var(--sn-card-harmonic-analogous-2-rgb), 0.01) 60%,
      rgba(var(--sn-card-harmonic-primary-rgb), 0.03) 100%
    ),
    rgba(var(--spice-rgb-surface0), 0.08);

  background-size: 300% 300%;
  border: var(--sn-card-border-width) solid rgba(var(--sn-card-harmonic-primary-rgb), 0.15);
  box-shadow: var(--sn-card-shadow-idle);

  // Animations - breathing and background drift
  animation:
    card-breath-animation var(--sn-card-breath-duration) ease-in-out infinite,
    card-background-drift calc(var(--sn-card-breath-duration) * 3) ease-in-out infinite;

  transition:
    box-shadow var(--sn-card-shadow-transition) var(--sn-anim-easing-standard),
    border-color var(--sn-card-shadow-transition) var(--sn-anim-easing-standard),
    transform var(--sn-card-shadow-transition) var(--sn-anim-easing-standard);

  // Particle System - Animated Dots
  &::before {
    content: '';
    position: absolute;
    top: 12px;
    right: 12px;
    width: var(--sn-card-particle-size);
    height: var(--sn-card-particle-size);
    background: radial-gradient(
      circle,
      rgba(var(--sn-card-harmonic-primary-rgb), 0.8) 0%,
      rgba(var(--sn-card-harmonic-primary-rgb), 0) 70%
    );
    border-radius: 50%;
    animation: card-particle-orbit var(--sn-card-particle-orbit-duration) linear infinite;
    opacity: calc(0.6 + var(--sn-card-animation-intensity) * 0.4);
  }

  &::after {
    content: '';
    position: absolute;
    bottom: 16px;
    left: 16px;
    width: calc(var(--sn-card-particle-size) * 0.8);
    height: calc(var(--sn-card-particle-size) * 0.8);
    background: radial-gradient(
      circle,
      rgba(var(--sn-card-harmonic-analogous-1-rgb), 0.6) 0%,
      rgba(var(--sn-card-harmonic-analogous-1-rgb), 0) 70%
    );
    border-radius: 50%;
    animation: card-particle-orbit calc(var(--sn-card-particle-orbit-duration) * 1.3) linear infinite reverse;
    opacity: calc(0.4 + var(--sn-card-animation-intensity) * 0.3);
  }

  // === HOVER STATE ===
  &:hover {
    --sn-card-animation-intensity: 0.85;
    --sn-card-breath-scale: 1.5;
    --sn-card-shadow-strength: 1.4;

    box-shadow: var(--sn-card-shadow-active);
    border-color: rgba(var(--sn-card-harmonic-primary-rgb), 0.4);
    transform: translateY(-2px);

    animation:
      card-breath-animation calc(var(--sn-card-breath-duration) * 0.7) ease-in-out infinite,
      card-background-drift calc(var(--sn-card-breath-duration) * 2) ease-in-out infinite,
      card-color-cycle var(--sn-card-color-cycle-duration) ease-in-out infinite;
  }

  // === ACTIVE/SELECTED STATE ===
  &:active,
  &.sn-card-selected,
  &[aria-selected="true"] {
    --sn-card-animation-intensity: 1;
    --sn-card-breath-scale: 1.8;
    --sn-card-shadow-strength: 2.5;
    --sn-card-glow-level: 1;

    box-shadow: var(--sn-card-shadow-emergence);
    border-color: rgba(var(--sn-card-harmonic-complementary-rgb), 0.8);
    transform: translateY(-6px);

    animation:
      card-breath-animation calc(var(--sn-card-breath-duration) * 0.6) ease-in-out infinite,
      card-background-drift calc(var(--sn-card-breath-duration) * 1.2) ease-in-out infinite,
      card-color-cycle calc(var(--sn-card-color-cycle-duration) * 0.8) ease-in-out infinite;
  }

  // === FOCUS STATE ===
  &:focus-visible {
    outline: none;
    box-shadow:
      var(--sn-card-shadow-active),
      0 0 0 3px rgba(var(--sn-card-harmonic-complementary-rgb), 0.5),
      0 0 0 6px rgba(var(--sn-card-harmonic-complementary-rgb), 0.2);

    &::before,
    &::after {
      opacity: 1;
      animation-duration: calc(var(--sn-card-particle-orbit-duration) * 0.5);
    }
  }
  } // End card-container-universal
} // End body:not search exclusion

// === MULTI-CARD ANIMATION SYNCHRONIZATION ===
// Using centralized card-container-universal mixin (Encore migration)

body:not(:has(.main-searchPage-content)) {
  // Stagger animations for multiple selected cards
  @include card-container-universal {
    &.sn-card-selected:nth-child(2n),
    &[aria-selected="true"]:nth-child(2n) {
      animation-delay: calc(var(--sn-card-breath-duration) * 0.33);
    }

    &.sn-card-selected:nth-child(3n),
    &[aria-selected="true"]:nth-child(3n) {
      animation-delay: calc(var(--sn-card-breath-duration) * 0.66);
    }

    // Enhanced particles for selected cards
    &.sn-card-selected::before,
    &[aria-selected="true"]::before {
      width: calc(var(--sn-card-particle-size) * 1.5);
      height: calc(var(--sn-card-particle-size) * 1.5);
      opacity: 1;
      animation-duration: calc(var(--sn-card-particle-orbit-duration) * 0.7);
      box-shadow: 0 0 8px rgba(var(--sn-card-harmonic-primary-rgb), 0.6);
    }

    &.sn-card-selected::after,
    &[aria-selected="true"]::after {
      width: calc(var(--sn-card-particle-size) * 1.2);
      height: calc(var(--sn-card-particle-size) * 1.2);
      opacity: 0.9;
      animation-duration: calc(var(--sn-card-particle-orbit-duration) * 0.9);
      box-shadow: 0 0 6px rgba(var(--sn-card-harmonic-analogous-1-rgb), 0.5);
    }
  }
}

// === ACCESSIBILITY & PERFORMANCE ===
// Using centralized card-container-universal mixin (Encore migration)

// Reduced motion support - disable animations
@media (prefers-reduced-motion: reduce) {
  body:not(:has(.main-searchPage-content)) {
    @include card-container-universal {
      animation-duration: 0.1s !important;
      transition-duration: 0.2s !important;

      &::before,
      &::after {
        animation: none !important;
      }
    }
  }
}

// Hardware acceleration support
@supports (will-change: transform) {
  body:not(:has(.main-searchPage-content)) {
    @include card-container-universal {
      will-change: transform, box-shadow, border-color, opacity;

      &::before,
      &::after {
        will-change: transform, opacity;
      }
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  body:not(:has(.main-searchPage-content)) {
    @include card-container-universal {
      --sn-card-border-width: 2px;
      border-color: var(--spice-accent) !important;

      &::before,
      &::after {
        opacity: 0.9 !important;
      }
    }
  }
}

// Dark theme adjustments
@media (prefers-color-scheme: dark) {
  :root {
    --sn-card-animation-intensity: 0.8;
    --sn-card-base-luminance: 0.2;
  }
}

// =============================================================================
// PERFORMANCE OPTIMIZATIONS
// =============================================================================

// Reduced motion support (Encore migration)
@media (prefers-reduced-motion: reduce) {
  @include card-container-universal {
    transition-duration: 0.1s !important;
  }
}

// =============================================================================
// UNIVERSAL 3D RENDERING FIX - Prevents GPU backface culling across all contexts
// =============================================================================
// Issue: preserve-3d with nested transforms can cause images to disappear
// Solution: Flatten 3D rendering by default, allow specific opt-in with class
// =============================================================================

// Default: Flatten 3D rendering for all cards to prevent image disappearance (Encore migration)
@include card-container-universal {
  // Use flat transform-style to prevent GPU backface culling issues
  // Cards needing 3D can opt-in with .preserve-3d-override class
  &:not(.preserve-3d-override) {
    transform-style: flat !important;
    backface-visibility: visible !important;
  }
}

// =============================================================================
// SHELF 3D RENDERING FIX - Phase 8.5 (Retained for specificity)
// =============================================================================
// Issue: Nested 3D transform contexts (grid rotation + card preserve-3d +
//        backface-visibility: hidden) cause album art to disappear in shelves
// Solution: Flatten 3D rendering for cards in shelf contexts to prevent GPU
//           backface culling while maintaining shelf breathing animation
// =============================================================================

// Flatten 3D rendering for cards inside shelf grid containers (Encore migration)
// IMPORTANT: Spotify uses BOTH .main-card-card AND .main-card-cardContainer in different contexts
section[data-testid="component-shelf"],  // Stable attribute (preferred)
.main-shelf-shelf,                       // Transitional class
.main-gridContainer-gridContainer {
  @include card-container-universal {
    transform-style: flat !important;  // Override preserve-3d inheritance
    backface-visibility: visible !important;  // Prevent GPU culling
    perspective: none;  // Remove 3D perspective from cards
  }
}

// Remove header 3D depth offset in shelf contexts (prevents transform stacking)
// IMPORTANT: Also target .main-card-imageContainer used by shelf cards
section[data-testid="component-shelf"] .main-card-header,         // Stable attribute (preferred)
section[data-testid="component-shelf"] .main-card-imageContainer, // Stable attribute (preferred)
.main-shelf-shelf .main-card-header,                              // Transitional class
.main-shelf-shelf .main-card-imageContainer,                      // Transitional class
.main-gridContainer-gridContainer .main-card-header,
.main-gridContainer-gridContainer .main-card-imageContainer {
  transform: none !important;  // Remove translateZ(6px) that causes culling
}

// Force image visibility in shelf cards (ensure album art displays)
section[data-testid="component-shelf"] .main-cardImage-image,  // Stable attribute (preferred)
section[data-testid="component-shelf"] .main-image-image,      // Stable attribute (preferred)
section[data-testid="component-shelf"] .main-card-cardImage,   // Stable attribute (preferred)
.main-shelf-shelf .main-cardImage-image,                       // Transitional class
.main-shelf-shelf .main-image-image,                           // Transitional class
.main-shelf-shelf .main-card-cardImage,                        // Transitional class
.main-gridContainer-gridContainer .main-cardImage-image,
.main-gridContainer-gridContainer .main-image-image,
.main-gridContainer-gridContainer .main-card-cardImage {
  backface-visibility: visible !important;  // Override performance mixin
  transform: translateZ(0);  // Maintain GPU acceleration
  opacity: 1 !important;  // Ensure full visibility
  will-change: transform;  // Hint for GPU optimization
}

// =============================================================================
// UNIVERSAL IMAGE VISIBILITY SAFEGUARD - Ensures images display in all contexts (Encore migration)
// =============================================================================
// Prevents backdrop-filter, 3D transforms, or GPU compositing from hiding images
@include card-container-universal {
  // Ensure all images within cards are always visible
  img,
  .main-image-image,
  .main-cardImage-image,
  .main-card-cardImage {
    opacity: 1 !important;
    visibility: visible !important;
    backface-visibility: visible !important;
    position: relative;  // Ensure proper stacking context
    z-index: 1;  // Above any backdrop-filter effects
  }

  // Image containers must not hide content
  .main-card-header,
  .main-card-imageContainer,
  .main-cardImage-imageWrapper {
    position: relative;
    z-index: 1;  // Above card pseudo-elements
  }
}

// Mobile optimizations
@media (max-width: 768px) {
  :root {
    --card-transition-speed: 0.2s;
    --card-shadow-intensity: 0.08;
  }
}

// =============================================================================
// LEGACY COMPATIBILITY MAPPINGS - Phase 6.2 Layer D Modernization
// =============================================================================

:root {
  // === Legacy Component Variable Mappings ===
  
  // Holographic/Visual Effects Mappings
  --card-holographic-depth: var(--card-visual-depth);
  
  // Energy/Effect Field Mappings
  --card-energy-field-radius: var(--card-effect-field-radius);
  --card-energy-pulse-rate: var(--card-effect-pulse-rate);
  --card-energy-dissipation: var(--card-effect-dissipation);
  --card-energy-primary: var(--card-color-primary);
  --card-energy-secondary: var(--card-color-secondary);
  --card-energy-accent: var(--card-color-accent);
  --card-energy-ambient: var(--card-color-ambient);
  
  // Bloom/Effect Alpha Mappings
  --card-bloom-base-alpha: var(--card-effect-base-alpha);
  --card-bloom-beat-factor: var(--card-effect-beat-factor);
  --card-bloom-context-factor: var(--card-effect-context-factor);
  --card-bloom-alpha: var(--card-effect-alpha);
  --card-bloom-threshold: var(--card-effect-threshold);
  
  // Nexus/Connection Mappings
  --card-nexus-connection-strength: var(--card-connection-strength);
  
  // Organic/Dynamic Mappings
  --card-organic-corners: var(--card-dynamic-corners);
  
  // Morphing/Smooth Mappings
  --card-morphing-fluidity: var(--card-smooth-fluidity);
  
  // Constellation/Visual Mode Mappings
  --card-constellation-mode: var(--card-visual-mode);
  --card-constellation-depth: var(--card-visual-depth);
  --card-constellation-connection: var(--card-visual-connection);
  
  // Music Energy/Effect Mappings
  --music-energy-modulation: var(--music-effect-modulation);
  
  // Expansion/Bloom Mappings
  --card-bloom-expansion: var(--card-expansion-factor);
  
  // Breathing/Animation Mappings (preserve original names for music sync)
  --card-rhythm-breathing: var(--card-rhythm-animation);
  --organic-breathing-cycle: var(--dynamic-animation-cycle);
  --organic-breathing-standard: var(--dynamic-animation-standard);
  --breathing-context-multiplier: var(--animation-context-multiplier);
}

// === STREAMLINED LEGACY COMPATIBILITY - Phase 4 Optimization ===

// Consolidated legacy class mappings using central extend bridge
[data-consciousness-enhanced] {
  @include extend-bridge('[data-visual-enhanced]');
}

.oklab-color-blend {
  @include extend-bridge('.oklab-visual-blend');
}

// === Legacy Animation Bridge ===

// Unified legacy breathing animation using central system
@keyframes organic-element-breathing {
  0%, 100% { transform: translateZ(0); }
  50% { transform: translateZ(0); }
}
@keyframes nexus-focus-pulse {
  0%, 100% {
    box-shadow: 0 0 12px rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.4);
    transform: translateZ(0);
  }
  50% {
    box-shadow: 0 0 20px rgba(var(--sn-accent-rgb, var(--spice-rgb-accent)), 0.6);
    transform: translateZ(0);
  }
}

@keyframes energy-source-rotation {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
