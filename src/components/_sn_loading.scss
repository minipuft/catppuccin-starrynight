// StarryNight Progressive Loading Module - Phase 4.3: Intelligent Loading States
// Enhances UX with context-aware gradient loading animations and smooth content transitions

@use "../core/mixins" as *;

// PHASE 4.3: Progressive Loading CSS Variables
// =============================================================================

:root {
  // Loading animation timing (coordinates with existing transitions)
  --loading-shimmer-duration: 1.8s;
  --loading-fade-duration: 0.6s;
  --loading-stagger-delay: 0.1s;

  // Context-aware loading intensities (builds on Phase 4.2 zones)
  --loading-intensity-playlist: 0.7; // Moderate for music browsing
  --loading-intensity-artist: 1; // Full intensity for discovery
  --loading-intensity-search: 0.5; // Subtle for concentration
  --loading-intensity-home: 0.8; // Balanced for overview

  // Skeleton gradient colors (integrates with existing gradient system)
  --skeleton-base: rgba(var(--spice-rgb-surface0), 0.8);
  --skeleton-shimmer: rgba(var(--spice-rgb-surface1), 0.9);
  --skeleton-accent: rgba(
    var(--sn-gradient-primary-rgb, var(--spice-rgb-accent)),
    0.4
  );

  // Progressive loading states
  --loading-blur-start: 8px;
  --loading-blur-end: 0px;
  --loading-scale-start: 0.95;
  --loading-scale-end: 1;
}

// PHASE 4.3: Core Loading Animation System
// =============================================================================

// Enhanced skeleton loading with context awareness
@mixin skeleton-loading($width: 100%, $height: 20px, $context: "default") {
  @include performance-optimized;
  @include context-gradient-zone($context);

  width: $width;
  height: $height;
  border-radius: 6px;
  position: relative;
  overflow: hidden;

  // Base skeleton background
  background: linear-gradient(
    90deg,
    var(--skeleton-base) 0%,
    var(--skeleton-shimmer) 50%,
    var(--skeleton-base) 100%
  );

  // Animated shimmer overlay
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(
          var(--sn-gradient-primary-rgb, var(--spice-rgb-accent)),
          calc(var(--sn-current-intensity, 1) * 0.3)
        )
        50%,
      transparent 100%
    );
    animation: skeleton-shimmer var(--loading-shimmer-duration) ease-in-out
      infinite;
  }

  @keyframes skeleton-shimmer {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }
}

// Progressive content fade-in animation
@mixin progressive-fade-in($delay: 0s) {
  opacity: 0;
  transform: translateY(8px) scale(var(--loading-scale-start));
  filter: blur(var(--loading-blur-start));
  animation: progressive-fade-in var(--loading-fade-duration) ease-out #{$delay}
    forwards;

  @keyframes progressive-fade-in {
    to {
      opacity: 1;
      transform: translateY(0) scale(var(--loading-scale-end));
      filter: blur(var(--loading-blur-end));
    }
  }
}

// Staggered loading animation for lists
@mixin staggered-loading($total-items: 10) {
  @for $i from 1 through $total-items {
    &:nth-child(#{$i}) {
      @include progressive-fade-in(
        calc(#{$i - 1} * var(--loading-stagger-delay))
      );
    }
  }
}

// PHASE 4.3: Main Feed Loading States
// =============================================================================

// Home page skeleton states
.main-gridContainer-gridContainer {
  // Loading state detection (when content is being fetched)
  &[aria-busy="true"],
  &.loading-state {
    .main-card-card {
      @include skeleton-loading(100%, 200px, "home");

      // Enhanced card skeleton structure
      &::after {
        content: "";
        position: absolute;
        bottom: 16px;
        left: 16px;
        right: 16px;
        height: 60px;
        background: linear-gradient(
          180deg,
          transparent 0%,
          var(--skeleton-base) 30%,
          var(--skeleton-shimmer) 70%,
          var(--skeleton-base) 100%
        );
        border-radius: 4px;
      }

      // Hide actual content during loading
      .main-card-cardMetadata,
      .main-cardHeader-container,
      img {
        opacity: 0;
      }
    }
  }

  // Progressive loading when content becomes available
  &:not([aria-busy="true"]):not(.loading-state) {
    .main-card-card {
      @include staggered-loading(12);
    }
  }
}

// PHASE 4.3: Playlist Loading Enhancement
// =============================================================================

// Enhanced playlist header loading
.main-entityHeader-container {
  &[aria-busy="true"],
  &.loading-state {
    @include context-gradient-zone("playlist");

    // Playlist cover skeleton
    .main-entityHeader-image {
      @include skeleton-loading(232px, 232px, "playlist");

      & {
        border-radius: 8px;
      }
    }

    // Playlist metadata skeleton
    .main-entityHeader-metadata {
      .main-type-alto {
        @include skeleton-loading(60px, 14px, "playlist");

        & {
          margin-bottom: 8px;
        }
      }

      .main-type-ballad {
        @include skeleton-loading(180px, 32px, "playlist");

        & {
          margin-bottom: 12px;
        }
      }

      .main-type-mestoBold {
        @include skeleton-loading(120px, 16px, "playlist");
      }
    }

    // Enhanced loading overlay with subtle animation
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        135deg,
        rgba(var(--sn-gradient-primary-rgb, var(--spice-rgb-mauve)), 0.1) 0%,
        transparent 50%,
        rgba(var(--sn-gradient-secondary-rgb, var(--spice-rgb-lavender)), 0.1)
          100%
      );
      animation: loading-pulse 2s ease-in-out infinite;
      pointer-events: none;
    }

    @keyframes loading-pulse {
      0%,
      100% {
        opacity: 0.5;
      }
      50% {
        opacity: 0.8;
      }
    }
  }

  // Smooth transition when content loads
  &:not([aria-busy="true"]):not(.loading-state) {
    .main-entityHeader-image {
      @include progressive-fade-in(0.2s);
    }

    .main-entityHeader-metadata > * {
      @include progressive-fade-in(0.4s);
    }
  }
}

// PHASE 4.3: Track List Loading States
// =============================================================================

// Enhanced track list skeleton loading
.main-trackList-trackListHeaderRow,
.main-trackList-trackListRow {
  &.loading-state,
  .loading-state & {
    @include context-gradient-zone("playlist");

    // Track number skeleton
    .main-trackList-rowSectionStart {
      @include skeleton-loading(20px, 16px, "playlist");
    }

    // Track info skeleton
    .main-trackList-rowSectionVariable {
      .main-type-ballad {
        @include skeleton-loading(160px, 16px, "playlist");

        & {
          margin-bottom: 4px;
        }
      }

      .main-type-mestoBold {
        @include skeleton-loading(120px, 14px, "playlist");
      }
    }

    // Album info skeleton
    .main-trackList-rowSectionEnd {
      @include skeleton-loading(100px, 14px, "playlist");
    }

    // Duration skeleton
    .main-trackList-rowSectionEnd:last-child {
      @include skeleton-loading(35px, 14px, "playlist");
    }
  }
}

// Progressive track loading animation
.main-trackList-trackListRow {
  &:not(.loading-state) {
    @include staggered-loading(50);
  }
}

// PHASE 4.3: Search Results Loading
// =============================================================================

// Search loading states with reduced intensity
.main-searchPage-content {
  &[aria-busy="true"],
  &.loading-state {
    @include context-gradient-zone("search");

    // Search category skeletons
    .main-shelf-shelf {
      .main-shelf-header {
        .main-type-alto {
          @include skeleton-loading(140px, 24px, "search");

          & {
            margin-bottom: 16px;
          }
        }
      }

      .main-gridContainer-gridContainer {
        .main-card-card {
          @include skeleton-loading(100%, 180px, "search");

          // Reduced intensity for search context
          &::before {
            background: linear-gradient(
              90deg,
              transparent 0%,
              rgba(
                  var(--sn-gradient-primary-rgb, var(--spice-rgb-lavender)),
                  calc(var(--loading-intensity-search) * 0.2)
                )
                50%,
              transparent 100%
            );
          }
        }
      }
    }
  }
}

// PHASE 4.3: Artist Page Loading Enhancement
// =============================================================================

// Artist page enhanced loading with discovery intensity
.main-entityHeader-container[data-testid*="artist"] {
  &[aria-busy="true"],
  &.loading-state {
    @include context-gradient-zone("artist");

    // Artist image skeleton with circular crop
    .main-entityHeader-image {
      @include skeleton-loading(232px, 232px, "artist");

      & {
        border-radius: 50%;
      }

      // Enhanced circular shimmer effect
      &::before {
        border-radius: 50%;
        background: radial-gradient(
          circle,
          transparent 30%,
          rgba(
              var(--sn-gradient-primary-rgb, var(--spice-rgb-peach)),
              calc(var(--loading-intensity-artist) * 0.4)
            )
            60%,
          transparent 90%
        );
      }
    }

    // Artist verification badge skeleton
    .main-entityHeader-titleText {
      &::after {
        content: "";
        @include skeleton-loading(20px, 20px, "artist");

        & {
          border-radius: 50%;
          margin-left: 8px;
        }
      }
    }
  }
}

// PHASE 4.3: Navigation Loading States
// =============================================================================

// Sidebar playlist loading
.spicetify-playlist-list {
  &.loading-state li {
    @include skeleton-loading(100%, 32px, "home");

    & {
      margin-bottom: 4px;
      border-radius: 4px;
    }

    // Hide playlist text during loading
    span {
      opacity: 0;
    }
  }

  // Progressive playlist loading
  &:not(.loading-state) {
    li {
      @include staggered-loading(20);
    }
  }
}

// PHASE 4.3: Right Sidebar Loading (Now Playing Queue)
// =============================================================================

// Queue loading with playback context
.Root__right-sidebar {
  &[aria-busy="true"],
  &.loading-state {
    @include context-gradient-zone("playback");

    // Queue header skeleton
    .main-type-alto {
      @include skeleton-loading(100px, 18px, "playback");

      & {
        margin-bottom: 12px;
      }
    }

    // Queue items skeleton
    .main-trackList-rowSectionVariable {
      @include skeleton-loading(100%, 48px, "playback");

      & {
        margin-bottom: 8px;
        border-radius: 6px;
      }
    }
  }

  // Progressive queue loading
  &:not([aria-busy="true"]):not(.loading-state) {
    .main-trackList-rowSectionVariable {
      @include staggered-loading(15);
    }
  }
}

// PHASE 4.3: Loading Performance Optimizations
// =============================================================================

// Reduced motion support for loading animations
@media (prefers-reduced-motion: reduce) {
  // Simplify all loading animations
  .main-gridContainer-gridContainer,
  .main-entityHeader-container,
  .main-trackList-trackListRow,
  .spicetify-playlist-list li {
    &[aria-busy="true"],
    &.loading-state {
      animation: none;

      &::before,
      &::after {
        animation: loading-pulse-reduced 3s ease-in-out infinite;
      }
    }
  }

  @keyframes loading-pulse-reduced {
    0%,
    100% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.6;
    }
  }

  // Disable staggered animations
  :not(.loading-state) {
    animation: none !important;
    opacity: 1 !important;
    transform: none !important;
    filter: none !important;
  }
}

// High contrast mode for loading states
@media (prefers-contrast: high) {
  :root {
    --skeleton-base: rgba(var(--spice-rgb-surface1), 1);
    --skeleton-shimmer: rgba(var(--spice-rgb-surface2), 1);
    --loading-intensity-playlist: 1;
    --loading-intensity-artist: 1.2;
    --loading-intensity-search: 0.8;
    --loading-intensity-home: 1;
  }
}

// Mobile optimizations for loading
@media (max-width: 768px) {
  :root {
    --loading-shimmer-duration: 1.5s;
    --loading-fade-duration: 0.4s;
    --loading-stagger-delay: 0.05s;

    // Reduced intensities for battery savings
    --loading-intensity-playlist: 0.5;
    --loading-intensity-artist: 0.7;
    --loading-intensity-search: 0.3;
    --loading-intensity-home: 0.6;
  }

  // Simplified mobile skeletons
  .main-gridContainer-gridContainer {
    &[aria-busy="true"] .main-card-card {
      height: 160px; // Smaller cards on mobile
    }
  }

  .main-entityHeader-container {
    &[aria-busy="true"] {
      .main-entityHeader-image {
        width: 150px;
        height: 150px;
      }
    }
  }
}

// PHASE 4.3: Loading State Detection Enhancement
// =============================================================================

// Auto-detect loading states based on empty content
.main-gridContainer-gridContainer:empty,
.main-trackList-trackListHeaderRow
  + .main-trackList-trackListRow:empty
  + .main-trackList-trackListRow:empty {
  @extend .loading-state;
}

// Loading state for network delays
.main-gridContainer-gridContainer[data-testid*="loading"],
.main-entityHeader-container[data-testid*="loading"] {
  @extend .loading-state;
}

// PHASE 4.3: Accessibility Enhancements
// =============================================================================

// Screen reader announcements for loading states
.loading-state {
  &::before {
    content: "Loading content";
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
    speak: yes;
  }
}

// Focus management during loading
.loading-state {
  pointer-events: none;

  // Restore interactions when loading completes
  &:not(.loading-state) {
    pointer-events: auto;
  }
}
