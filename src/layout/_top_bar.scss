// ════════════════════════════════════════════════════════════════════════════════
// TOP BAR - MUSIC-REACTIVE STYLES
// ════════════════════════════════════════════════════════════════════════════════
//
// Provides music-reactive styling for the top navigation bar including:
// - Background gradients that animate with music rhythm
// - Search bar effects synchronized with beat detection
// - Button hover effects that respond to music intensity
// - Color shifts based on audio analysis
// - Visual filters for hue rotation and saturation
//
// Dependencies:
// - Music sync CSS variables (--sn-music-beat-pulse-intensity, --sn-music-rhythm-phase)
// - OKLAB color tokens (--sn-oklab-primary-rgb, --sn-cosmic-secondary-rgb)
// - Spicetify theme variables (--spice-*)
//
// ════════════════════════════════════════════════════════════════════════════════

:root {
  // === MUSIC-REACTIVE INTENSITY VARIABLES ===
  --sn-topbar-beat-glow-intensity: calc(
    var(--sn-music-beat-pulse-intensity, 0) * 0.8
  );
  --sn-topbar-rhythm-hue-shift: calc(var(--sn-music-rhythm-phase, 0) * 25deg);
  --sn-topbar-gradient-opacity: calc(
    0.1 + var(--sn-music-beat-pulse-intensity, 0) * 0.15
  );

  // === SEARCH BAR VARIABLES ===
  --sn-search-effect-intensity: calc(var(--sn-music-beat-pulse-intensity, 0) * 0.6);
  --sn-search-focus-scale: calc(1 + var(--sn-music-beat-pulse-intensity, 0) * 0.05);
  --sn-search-beat-border: rgba(
    var(--sn-accent-rgb, var(--sn-accent-rgb, 140,170,238)),
    calc(0.3 + var(--sn-music-beat-pulse-intensity, 0) * 0.4)
  );

  // === BUTTON VARIABLES ===
  --sn-button-background-color: rgba(
    var(--sn-accent-rgb, var(--sn-accent-rgb, 202,158,230)),
    calc(0.1 + var(--sn-music-beat-pulse-intensity, 0) * 0.2)
  );
  --sn-button-hover-scale: calc(1 + var(--sn-music-beat-pulse-intensity, 0) * 0.03);
  --sn-button-glow-radius: calc(5px + var(--sn-music-beat-pulse-intensity, 0) * 10px);

  // === ANIMATION TIMING VARIABLES ===
  --sn-topbar-rhythm-phase: var(--sn-music-rhythm-phase, 0);
  --sn-topbar-beat-intensity: var(--sn-music-beat-pulse-intensity, 0);
  --sn-topbar-rhythm-angle: calc(var(--sn-music-rhythm-phase, 0) * 180deg);

  // === COLOR VARIABLES ===
  // Uses OKLAB primary color for navigation focus
  // Provides perceptually uniform color transitions
  --sn-topbar-primary-rgb: var(--sn-oklab-primary-rgb);
  --sn-topbar-secondary-rgb: var(--sn-cosmic-secondary-rgb);
  --sn-topbar-intensity: 0.2;
}

// ════════════════════════════════════════════════════════════════════════════════
// MAIN TOP BAR CONTAINER
// ════════════════════════════════════════════════════════════════════════════════

:root .Root__top-bar header,
:root .main-topBar-container {
  position: relative;
  overflow: hidden;

  // Multi-layer background with music-reactive gradient
  background:
    // Layer 1: Animated gradient synchronized with music rhythm
    linear-gradient(
      calc(90deg + var(--sn-topbar-rhythm-angle)),
            rgba(
        var(--sn-accent-rgb, var(--sn-accent-rgb, 202,158,230)),
        var(--sn-topbar-gradient-opacity)
      )
        0%,
      transparent 40%,
      transparent 60%,
            rgba(
        var(--sn-accent-rgb, var(--spice-rgb-surface0, 186,187,241)),
        calc(var(--sn-topbar-gradient-opacity) * 0.8)
      )
        100%
    ),
    // Layer 2: Base background color
    var(--spice-main, #1e1e2e) !important;

  // Glassmorphism effect
  backdrop-filter: blur(10px) saturate(1.1);

  // Music-reactive bottom border
  border-bottom: 1px solid
    oklab-color('primary', calc(
      var(--sn-topbar-intensity) * 0.5 *
        (1 + var(--sn-music-beat-pulse-intensity, 0) * 0.3)
    ));

  // Glow effect that intensifies with music beats
  box-shadow: 0 2px var(--sn-button-glow-radius)
      oklab-color('accent', calc(var(--sn-topbar-beat-glow-intensity) * 0.3)),
    inset 0 1px 0
      oklab-color('highlight', calc(var(--sn-topbar-beat-glow-intensity) * 0.2));

  // Color filters synchronized with music
  filter: hue-rotate(var(--sn-topbar-rhythm-hue-shift))
    saturate(calc(1 + var(--sn-music-beat-pulse-intensity, 0) * 0.2))
    brightness(calc(1 + var(--sn-music-beat-pulse-intensity, 0) * 0.1));

  // Smooth transitions for all effects
  transition: all 0.8s var(--sn-anim-easing-organic),
    filter 0.3s ease-out,
    border-bottom 0.3s ease-out,
    backdrop-filter 0.5s ease-out;

  // Animated background layer
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    background: radial-gradient(
      ellipse 150% 100% at 50% 0%,
      rgba(
          var(--sn-accent-rgb, 140,170,238),
          calc(var(--sn-topbar-beat-intensity) * 0.15)
        )
        0%,
      transparent 70%
    );
    animation: gradientFlow
      calc(20s / max(var(--sn-music-beat-pulse-intensity, 0.1), 0.1)) linear infinite;
    opacity: var(--sn-topbar-beat-intensity);
  }

  // Ensure background transparency
  .main-topBar-background {
    background-color: transparent !important;
  }

  // Entity header gradient overlay
  .main-entityHeader-withBackgroundImage {
    background: radial-gradient(
      ellipse at center,
      rgba(
          var(--sn-accent-rgb, "202,158,230"),
          calc(var(--sn-topbar-gradient-opacity) * 1.5)
        )
        0%,
      rgba(
        var(--sn-accent-rgb, var(--spice-rgb-base)),
        0.2
      ) 100%
    ) !important;
  }
}

// ════════════════════════════════════════════════════════════════════════════════
// SEARCH BAR STYLES
// ════════════════════════════════════════════════════════════════════════════════

:root .Root__top-bar header,
:root .main-topBar-container {
  // Music-reactive search input
  .x-searchInput-searchInputInput {
    position: relative;

    // Border with music-synchronized color
    border: 2px solid var(--sn-search-beat-border);
    border-radius: 24px;

    // Gradient background with music-reactive accent
    background: linear-gradient(
      135deg,
      rgba(var(--spice-rgb-overlay0, "108,112,134"), 0.9) 0%,
      rgba(
          var(--sn-accent-rgb, "202,158,230"),
          calc(var(--sn-search-effect-intensity) * 0.1)
        )
        100%
    ) !important;

    // Glow effect that responds to music intensity
    box-shadow: 0 0 calc(8px + var(--sn-search-effect-intensity) * 12px)
        rgba(
          var(--sn-accent-rgb, 140,170,238),
          calc(var(--sn-search-effect-intensity) * 0.4)
        ),
      inset 0 1px 3px
        rgba(
          var(--sn-accent-rgb, "202,158,230"),
          calc(var(--sn-search-effect-intensity) * 0.2)
        );

    // Text color
    color: var(--spice-subtext, #bac2de) !important;
    transition: all 0.3s var(--sn-anim-easing-organic);

    // Placeholder with music-reactive opacity
    &::placeholder {
      color: rgba(
        var(--spice-rgb-subtext, "186,194,222"),
        calc(0.5 + var(--sn-music-beat-pulse-intensity, 0) * 0.2)
      ) !important;
      transition: color 0.3s ease;
    }

    // Focus state with enhanced effects
    &:focus {
      border-color: rgba(var(--sn-accent-rgb, "202,158,230"), 0.8);

      box-shadow: 0 0 calc(12px + var(--sn-search-effect-intensity) * 16px)
          rgba(
            var(--sn-accent-rgb, 140,170,238),
            calc(var(--sn-search-effect-intensity) * 0.6 + 0.3)
          ),
        inset 0 2px 4px
          rgba(
            var(--sn-accent-rgb, "202,158,230"),
            calc(var(--sn-search-effect-intensity) * 0.3 + 0.1)
          );

      // Hue rotation synchronized with music rhythm
      filter: hue-rotate(calc(var(--sn-topbar-rhythm-hue-shift) * 0.5));
    }

    // Active state when user has typed text
    &:not(:placeholder-shown) {
      border-color: rgba(
        var(--sn-accent-rgb, 140,170,238),
        calc(0.6 + var(--sn-music-beat-pulse-intensity, 0) * 0.3)
      );
    }
  }

  // Clear button with music-reactive opacity
  .x-searchInput-searchInputClearButton {
    color: rgba(
      var(--spice-rgb-subtext, 186,194,222),
      calc(0.7 + var(--sn-music-beat-pulse-intensity, 0) * 0.2)
    );

    &:hover {
      color: rgba(var(--sn-accent-rgb, 140,170,238), 1);
    }
  }
}

// ════════════════════════════════════════════════════════════════════════════════
// NAVIGATION BUTTONS
// ════════════════════════════════════════════════════════════════════════════════

:root .Root__top-bar header,
:root .main-topBar-container {
  // Music-reactive button styling
  button:not(.x-searchInput-searchInputClearButton),
  .main-topBar-button {
    position: relative;
    overflow: hidden;

    // Background color synchronized with music
    background: var(--sn-button-background-color) !important;
    color: var(--spice-subtext, #bac2de) !important;

    // Border with music-reactive opacity
    border: 1px solid
      rgba(
        var(--sn-accent-rgb, 140,170,238),
        calc(0.2 + var(--sn-music-beat-pulse-intensity, 0) * 0.3)
      ) !important;
    border-radius: 8px;

    // Smooth transitions
    transition: all 0.3s var(--sn-anim-easing-organic);

    // Shimmer effect overlay
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent 0%,
        rgba(
            var(--sn-accent-rgb, 140,170,238),
            calc(var(--sn-topbar-beat-intensity) * 0.3)
          )
          50%,
        transparent 100%
      );
      transition: left 0.6s ease;
      pointer-events: none;
    }

    // Hover state with enhanced glow
    &:hover {
      background: rgba(
        var(--sn-accent-rgb, "202,158,230"),
        calc(0.2 + var(--sn-music-beat-pulse-intensity, 0) * 0.15)
      ) !important;

      // Glow effect that intensifies with music
      box-shadow: 0 0 var(--sn-button-glow-radius)
          rgba(
            var(--sn-accent-rgb, "202,158,230"),
            calc(var(--sn-topbar-beat-glow-intensity) * 0.5 + 0.2)
          ),
        inset 0 1px 2px
          rgba(
            var(--sn-accent-rgb, 140,170,238),
            calc(var(--sn-topbar-beat-glow-intensity) * 0.3)
          );

      // Subtle lift effect
      transform: translateY(-1px);

      // Animate shimmer across button
      &::before {
        left: 100%;
      }
    }

    // Active (pressed) state
    &:active {
      box-shadow: inset 0 2px 4px
        rgba(var(--sn-accent-rgb, "202,158,230"), 0.3);
    }

    // Keyboard focus state
    &:focus-visible {
      outline: 2px solid rgba(var(--sn-accent-rgb, 140,170,238), 0.8);
      outline-offset: 2px;
    }
  }

  // Home icon with special effects
  .Svg-img-24-icon.home-active-icon {
    // Music-synchronized glow
    filter: drop-shadow(
      0 0 calc(6px + var(--sn-music-beat-pulse-intensity, 0) * 8px)
        rgba(
          var(--sn-accent-rgb, "202,158,230"),
          calc(var(--sn-topbar-beat-glow-intensity) * 0.8 + 0.2)
        )
    );

    // Color shifts with music rhythm
    color: hsl(
      calc(250 + var(--sn-music-rhythm-phase, 0) * 15),
      calc(70% + var(--sn-music-beat-pulse-intensity, 0) * 20%),
      calc(60% + var(--sn-music-beat-pulse-intensity, 0) * 20%)
    ) !important;

    transition: all 0.4s ease-out;
  }
}

// ════════════════════════════════════════════════════════════════════════════════
// ANIMATIONS
// ════════════════════════════════════════════════════════════════════════════════

@keyframes gradientFlow {
  from {
    transform: translateX(-100%);
    opacity: 0.5;
  }
  to {
    transform: translateX(100%);
    opacity: 0.8;
  }
}

@keyframes topbar-breathing {
  0%,
  100% {
    transform: scale(1) rotate(0deg);
    filter: hue-rotate(0deg);
  }
  50% {
    transform: scale(1.002) rotate(0.5deg);
    filter: hue-rotate(5deg);
  }
}

// ════════════════════════════════════════════════════════════════════════════════
// ACCESSIBILITY & PERFORMANCE
// ════════════════════════════════════════════════════════════════════════════════

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  :root .Root__top-bar header,
  :root .main-topBar-container {
    &::before {
      animation: none !important;
    }

    * {
      transition-duration: 0.1s !important;
      transform: none !important;
      animation: none !important;
    }
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  :root {
    --sn-topbar-gradient-opacity: 0.25;
    --sn-search-effect-intensity: 1;

    .x-searchInput-searchInputInput {
      border-width: 3px !important;
    }

    button:not(.x-searchInput-searchInputClearButton),
    .main-topBar-button {
      border-width: 2px !important;
    }
  }
}

// Mobile devices
@media (max-width: 768px) {
  :root {
    --sn-topbar-gradient-opacity: 0.08;
    --sn-button-glow-radius: calc(
      3px + var(--sn-music-beat-pulse-intensity, 0) * 6px
    );
  }

  :root .Root__top-bar header,
  :root .main-topBar-container {
    .x-searchInput-searchInputInput {
      border-radius: 20px;
    }
  }
}

// Lower-end devices
@media (max-resolution: 1dppx) {
  :root .Root__top-bar header,
  :root .main-topBar-container {
    // Disable GPU-intensive effects
    backdrop-filter: none;

    &::before {
      display: none;
    }
  }
}

// ════════════════════════════════════════════════════════════════════════════════
