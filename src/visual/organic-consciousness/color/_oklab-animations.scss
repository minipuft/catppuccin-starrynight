// ████████████████████████████████████████████████████████████████████████████████
// OKLAB COLOR ANIMATIONS - Perceptually Uniform Color Transitions
// ████████████████████████████████████████████████████████████████████████████████

// === OKLAB ANIMATION FOUNDATION ===
// Provides smooth, perceptually uniform color transitions using OKLAB color space
// for natural consciousness experiences that feel organic and visually harmonious.

// OKLAB transition mixin for smooth color changes
@mixin oklab-transition($properties: all, $duration: 600ms, $easing: var(--organic-ease-consciousness, cubic-bezier(0.4, 0, 0.2, 1))) {
  // Use CSS custom property transitions for dynamic OKLAB values
  transition: #{$properties} #{$duration} #{$easing};
  
  // Enable hardware acceleration for smooth transitions
  will-change: #{$properties};
  transform: translateZ(0);
  backface-visibility: hidden;
}

// OKLAB color interpolation mixin
@mixin oklab-color-interpolation($from-var, $to-var, $progress: 0.5) {
  // Interpolate between OKLAB colors using CSS calc()
  // Note: This is a simplified version - full OKLAB interpolation requires JavaScript
  color: rgb(
    calc(var(#{$from-var}) * (1 - #{$progress}) + var(#{$to-var}) * #{$progress})
  );
}

// Musical consciousness color animation mixin
@mixin musical-oklab-animation($base-color-var, $accent-color-var, $duration: 2s) {
  // Create breathing color animation using OKLAB variables
  animation: musical-oklab-breathing #{$duration} ease-in-out infinite;
  
  // Define the animation with OKLAB color transitions
  @keyframes musical-oklab-breathing {
    0% {
      color: rgb(var(#{$base-color-var}));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.1))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.05));
    }
    
    50% {
      color: rgb(var(#{$accent-color-var}));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.3))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.15))
        hue-rotate(calc(var(--organic-symbiotic-resonance, 0.7) * 5deg));
    }
    
    100% {
      color: rgb(var(#{$base-color-var}));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.1))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.05));
    }
  }
}

// Genre-responsive OKLAB animation mixin
@mixin genre-oklab-transition($genre: 'default', $intensity: 1.0) {
  // Apply genre-specific OKLAB transition timing
  $genre-duration: var(--sn-genre-#{$genre}-transition-duration, 800ms);
  $genre-easing: var(--sn-genre-#{$genre}-easing, cubic-bezier(0.4, 0, 0.2, 1));
  
  @include oklab-transition(color, $genre-duration, $genre-easing);
  
  // Genre-specific color evolution
  color: rgb(var(--sn-genre-#{$genre}-oklab-primary-rgb));
  
  // Hover state with OKLAB transition
  &:hover {
    color: rgb(var(--sn-genre-#{$genre}-oklab-accent-rgb));
    filter: saturate(calc(1.0 + #{$intensity} * 0.2));
  }
  
  // Active state with enhanced OKLAB properties
  &:active, &.active {
    color: rgb(var(--sn-genre-#{$genre}-oklab-complementary-rgb));
    filter: 
      saturate(calc(1.0 + #{$intensity} * 0.4))
      brightness(calc(1.0 + #{$intensity} * 0.1));
  }
}

// === OKLAB ANIMATION CLASSES ===

// Base OKLAB animation class
.oklab-animated {
  @include oklab-transition();
  
  // Musical consciousness color coordination
  color: rgb(var(--sn-musical-oklab-primary-rgb));
  
  // Enhanced states with OKLAB transitions
  &:hover {
    color: rgb(var(--sn-musical-oklab-accent-rgb));
  }
  
  &:focus {
    color: rgb(var(--sn-musical-oklab-complementary-rgb));
    outline-color: rgba(var(--sn-musical-oklab-complementary-rgb), 0.5);
  }
}

// Musical breathing animation with OKLAB
.oklab-musical-breathing {
  // animation: oklab-musical-consciousness-breathing var(--organic-breathing-cycle, 1s) ease-in-out infinite;
  
  // Musical OKLAB breathing keyframes
  @keyframes oklab-musical-consciousness-breathing {
    0% {
      color: rgb(var(--sn-musical-oklab-primary-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.2))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.1));
    }
    
    33% {
      color: rgb(var(--sn-musical-oklab-accent-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.3))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.15))
        hue-rotate(calc(var(--organic-symbiotic-resonance, 0.7) * 8deg));
    }
    
    66% {
      color: rgb(var(--sn-musical-oklab-complementary-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.4))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.2))
        hue-rotate(calc(var(--organic-symbiotic-resonance, 0.7) * 12deg));
    }
    
    100% {
      color: rgb(var(--sn-musical-oklab-primary-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.2))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.1));
    }
  }
}

// Genre-aware OKLAB animation class
.oklab-genre-responsive {
  // Apply genre-specific OKLAB transitions
  @include genre-oklab-transition(var(--genre-active-preset, 'default'), var(--genre-active-intensity, 1.0));
  
  // Enhanced genre transition for active elements
  &.genre-transition-active {
    transition-duration: calc(var(--sn-musical-transition-duration, 800ms) * 1.5);
    
    // Smooth genre crossfade effect
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        45deg,
        rgba(var(--sn-musical-oklab-primary-rgb), 0.1) 0%,
        rgba(var(--sn-musical-oklab-accent-rgb), 0.05) 50%,
        rgba(var(--sn-musical-oklab-complementary-rgb), 0.1) 100%
      );
      opacity: 0;
      transition: opacity calc(var(--sn-musical-transition-duration, 800ms) * 0.5) ease;
      pointer-events: none;
      z-index: -1;
    }
    
    &.transitioning::before {
      opacity: 1;
    }
  }
}

// Emotional temperature OKLAB animation
.oklab-emotional-temperature {
  // Temperature-responsive color animation
  // animation: oklab-emotional-temperature-flow calc(var(--organic-breathing-cycle, 1s) * 3) ease-in-out infinite;
  
  @keyframes oklab-emotional-temperature-flow {
    0% {
      color: rgb(var(--sn-emotional-temp-cool-oklab-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.1))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.05))
        hue-rotate(calc(var(--organic-emotional-temperature, 6500) / 200 - 32.5deg));
    }
    
    25% {
      color: rgb(var(--sn-emotional-temp-neutral-oklab-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.2))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.1));
    }
    
    50% {
      color: rgb(var(--sn-emotional-temp-warm-oklab-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.3))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.15))
        hue-rotate(calc(var(--organic-emotional-temperature, 6500) / 150 - 43.3deg));
    }
    
    75% {
      color: rgb(var(--sn-emotional-temp-passionate-oklab-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.4))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.2))
        hue-rotate(calc(var(--organic-emotional-temperature, 6500) / 100 - 65deg));
    }
    
    100% {
      color: rgb(var(--sn-emotional-temp-cool-oklab-rgb));
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.1))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.05))
        hue-rotate(calc(var(--organic-emotional-temperature, 6500) / 200 - 32.5deg));
    }
  }
}

// === OKLAB BACKGROUND ANIMATIONS ===

// OKLAB gradient animation for backgrounds
.oklab-gradient-flow {
  background: linear-gradient(
    135deg,
    rgba(var(--sn-musical-oklab-primary-rgb), var(--organic-fog-opacity, 0.02)) 0%,
    rgba(var(--sn-musical-oklab-accent-rgb), calc(var(--organic-fog-opacity, 0.02) * 1.5)) 25%,
    rgba(var(--sn-musical-oklab-complementary-rgb), var(--organic-fog-opacity, 0.02)) 50%,
    rgba(var(--sn-musical-oklab-triadic-rgb), calc(var(--organic-fog-opacity, 0.02) * 1.5)) 75%,
    rgba(var(--sn-musical-oklab-primary-rgb), var(--organic-fog-opacity, 0.02)) 100%
  );
  
  background-size: 400% 400%;
  // animation: oklab-gradient-consciousness-flow calc(var(--organic-breathing-cycle, 1s) * 8) ease-in-out infinite;
  
  @keyframes oklab-gradient-consciousness-flow {
    0% {
      background-position: 0% 50%;
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.2))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.1));
    }
    
    25% {
      background-position: 100% 50%;
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.3))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.15));
    }
    
    50% {
      background-position: 100% 100%;
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.4))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.2));
    }
    
    75% {
      background-position: 0% 100%;
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.3))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.15));
    }
    
    100% {
      background-position: 0% 50%;
      filter: 
        saturate(calc(1.0 + var(--organic-emotional-saturation, 1) * 0.2))
        brightness(calc(1.0 + var(--organic-warmth, 0.8) * 0.1));
    }
  }
}

// OKLAB shimmer effect
.oklab-shimmer-effect {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -100%;
    right: -100%;
    bottom: -2px;
    
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(var(--sn-musical-oklab-primary-rgb), 0.1) 25%,
      rgba(var(--sn-musical-oklab-accent-rgb), 0.3) 50%,
      rgba(var(--sn-musical-oklab-primary-rgb), 0.1) 75%,
      transparent 100%
    );
    
    // animation: oklab-shimmer-sweep calc(var(--organic-breathing-cycle, 1s) * 4) ease-in-out infinite;
    pointer-events: none;
    z-index: 1;
  }
  
  @keyframes oklab-shimmer-sweep {
    0% {
      transform: translateX(-100%) skewX(-15deg);
      opacity: 0;
    }
    
    25% {
      opacity: 0.5;
    }
    
    75% {
      opacity: 0.5;
    }
    
    100% {
      transform: translateX(200%) skewX(-15deg);
      opacity: 0;
    }
  }
}

// === PERFORMANCE OPTIMIZED OKLAB ANIMATIONS ===

// Reduced motion support for OKLAB animations
@media (prefers-reduced-motion: reduce) {
  .oklab-animated,
  .oklab-musical-breathing,
  .oklab-genre-responsive,
  .oklab-emotional-temperature,
  .oklab-gradient-flow,
  .oklab-shimmer-effect {
    animation: none !important;
    transition-duration: 0.1s !important;
    
    &::before,
    &::after {
      animation: none !important;
      opacity: 0.1 !important;
    }
  }
}

// High contrast support for OKLAB animations
@media (prefers-contrast: high) {
  .oklab-animated,
  .oklab-musical-breathing,
  .oklab-genre-responsive,
  .oklab-emotional-temperature {
    filter: 
      contrast(2.0) !important
      saturate(1.5) !important;
  }
}

// Performance optimization for low-end devices
@media (update: slow) {
  .oklab-gradient-flow {
    animation-duration: calc(var(--organic-breathing-cycle, 1s) * 16) !important;
    will-change: auto !important;
  }
  
  .oklab-shimmer-effect::before {
    animation-duration: calc(var(--organic-breathing-cycle, 1s) * 8) !important;
  }
}

// Debug mode for OKLAB animations
:root.organic-debug {
  .oklab-animated,
  .oklab-musical-breathing,
  .oklab-genre-responsive,
  .oklab-emotional-temperature {
    outline: 1px dashed rgba(var(--sn-musical-harmony-primary-rgb), 0.5) !important;
    
    &::after {
      content: '🎨 OKLAB';
      position: absolute;
      top: -20px;
      left: 0;
      font-size: 9px;
      color: rgb(var(--sn-musical-harmony-primary-rgb));
      background: rgba(var(--spice-rgb-base), 0.9);
      padding: 1px 3px;
      border-radius: 2px;
      pointer-events: none;
      z-index: 9999;
    }
  }
}